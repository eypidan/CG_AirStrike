{"version":3,"sources":["ObjectTrees.js"],"names":["GenericObject","Buffers","LightPos","AdjObj","Luminous","Texture","MotionParameters","ModelMatrix","mat4","create","xP","yP","zP","Speed","Size","Pivot","MaxSpeed","ObjectTrees","buffersCollection","texturesCollection","ObjectsSystems","CreateObjectsSystem","ExampleModel","CreateObject","Earth","buffers","Object"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;IAWMA,gBACF,uBAAaC,OAAb,EAAsBC,QAAtB,EAAgCC,MAAhC,EAAwCC,QAAxC,EAAkDC,OAAlD,EACA;AAAA;;AACI,OAAKJ,OAAL,GAAeA,OAAf;AACA,OAAKK,gBAAL,GAAwB,IAAIA,gBAAJ,EAAxB;AACA,OAAKC,WAAL,GAAmBC,IAAI,CAACC,MAAL,EAAnB;AACA,OAAKP,QAAL,GAAgBA,QAAhB;AACA,OAAKC,MAAL,GAAcA,MAAd,CALJ,CAKgC;;AAC5B,OAAKC,QAAL,GAAgBA,QAAhB;AACA,OAAKC,OAAL,GAAeA,OAAf;AACH;;IAGCC,mBACF,4BACA;AAAA;;AACI,OAAKI,EAAL,GAAU,CAAV;AAAa,OAAKC,EAAL,GAAU,CAAV;AAAa,OAAKC,EAAL,GAAU,CAAV;AAC1B,OAAKC,KAAL,GAAa,CAAb;AACA,OAAKC,IAAL,GAAY,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAZ;AACA,OAAKC,KAAL,GAAa,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAb,CAJJ,CAIoC;;AAChC,OAAKC,QAAL,GAAgB,CAAhB;AACH,GAGL;AACA;;;AACA,SAASC,WAAT,CAAqBC,iBAArB,EAAwCC,kBAAxC,EAA2D;AACvD;AACA;AACA,MAAIC,cAAc,GAAGC,mBAAmB,CAACH,iBAAD,EAAoBC,kBAApB,CAAxC,CAHuD,CAGyC;;AAChG,SAAOC,cAAP;AACH;;AAGD,SAASC,mBAAT,CAA6BH,iBAA7B,EAAgDC,kBAAhD,EACA;AACI,MAAIG,YAAY,GAAGC,YAAY,CAACL,iBAAiB,CAACI,YAAnB,EAAiCH,kBAAkB,CAACK,KAApD,EAA2D,EAA3D,EAA+D,KAA/D,CAA/B;AACA,SAAOF,YAAP;AACH;;AAED,SAASC,YAAT,CAAsBE,OAAtB,EAA+BpB,OAA/B,EAAwCF,MAAxC,EAAgDC,QAAhD,EACA;AACI,MAAIF,QAAQ,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAf;AACA,MAAIwB,MAAM,GAAG,IAAI1B,aAAJ,CAAkByB,OAAlB,EAA2BvB,QAA3B,EAAqCC,MAArC,EAA6CC,QAA7C,EAAuDC,OAAvD,CAAb;AACA,SAAOqB,MAAP;AACH","file":"ObjectTrees.5c3b1b59.map","sourceRoot":"..","sourcesContent":["/***\n * 这是一个泛型物体类\n * 通过下面这个类，我们可以构建模型树\n * 一个物体需要包含以下属性\n * * Buffers:       包含VertexBuffer, TextureBuffer, NormalVectorBuffer以及numVertices的对象\n * * ModelMatrix:   自身的Model Matrix（相对于上一级物体的ModelMatrix）\n * * LightPos:      点光源的位置（改造成全局光源的话还有待修改）\n * * AdjObj:        一个包含了该物体所相连或相关的子物体的数组（例如四肢至于机器人主体）\n * * Luminous:      是否自发光，boolean类型\n * * Texture:       对于具有纹理的物体，保存纹理对象。如果没有则该字段为`null`\n */\nclass GenericObject{\n    constructor (Buffers, LightPos, AdjObj, Luminous, Texture)\n    {\n        this.Buffers = Buffers;\n        this.MotionParameters = new MotionParameters();\n        this.ModelMatrix = mat4.create();\n        this.LightPos = LightPos;\n        this.AdjObj = AdjObj;       // Adjacent Objects (Array)\n        this.Luminous = Luminous;\n        this.Texture = Texture;\n    }\n}\n\nclass MotionParameters {\n    constructor()\n    {\n        this.xP = 0; this.yP = 0; this.zP = 0;\n        this.Speed = 0;\n        this.Size = [1, 1, 1];\n        this.Pivot = [0, 0, 0];         // 旋转轴\n        this.MaxSpeed = 1;\n    }\n}\n\n// Project Specific Object Creation.\n// Objects should be created from branch to stem\nfunction ObjectTrees(buffersCollection, texturesCollection){\n    // 在这里可以建设多个太阳系\n    // 每个太阳系有独特的建系方程\n    let ObjectsSystems = CreateObjectsSystem(buffersCollection, texturesCollection);                // 太阳系1（机器人1）\n    return ObjectsSystems;\n}\n\n\nfunction CreateObjectsSystem(buffersCollection, texturesCollection)\n{\n    let ExampleModel = CreateObject(buffersCollection.ExampleModel, texturesCollection.Earth, [], false);\n    return ExampleModel;\n}\n\nfunction CreateObject(buffers, Texture, AdjObj, Luminous)\n{\n    let LightPos = [0, 0, 0];\n    let Object = new GenericObject(buffers, LightPos, AdjObj, Luminous, Texture);\n    return Object;\n}"]}