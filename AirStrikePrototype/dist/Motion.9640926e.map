{"version":3,"sources":["Motion.js"],"names":["directionalTheta","MoveForward","Object","deltaTime","wDown","MotionParameters","Speed","MaxSpeed","distance","dx","Math","cos","PI","dz","sin","eyeX","eyeZ","lookAtX","lookAtZ","ModelMatrix","mat4","translate","vec3","fromValues","RootRotate","root","dDown","aDown","dTheta","rotate","doMotion","Objects"],"mappings":"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","file":"Motion.9640926e.map","sourceRoot":"..","sourcesContent":["let directionalTheta = 90;  // 平面朝向参数角度（角度制）\n\nfunction MoveForward(Object, deltaTime)\n{\n    // 按住w加速，直到上限，不按住减速，直到下限。\n    if (wDown == false) {\n        // 减速\n        if (Object.MotionParameters.Speed > 0.00) {\n            Object.MotionParameters.Speed -= 2 * deltaTime;\n            if (Object.MotionParameters.Speed < 0.00)\n                Object.MotionParameters.Speed = 0.00;\n        }\n    }\n    else {\n        // Accelerating\n        if (Object.MotionParameters.Speed < Object.MotionParameters.MaxSpeed) {\n            Object.MotionParameters.Speed += 1 * deltaTime;\n        }\n    }\n\n    let distance = Object.MotionParameters.Speed * deltaTime;\n    let dx = distance * Math.cos(directionalTheta * Math.PI / 180);\n    let dz = distance * Math.sin(directionalTheta * Math.PI / 180);\n\n    // 视角跟踪\n    eyeX += dx; eyeZ += dz;\n    lookAtX += dx; lookAtZ += dz;\n\n    Object.ModelMatrix = mat4.translate(\n        Object.ModelMatrix, Object.ModelMatrix,\n        vec3.fromValues(0, 0, Object.MotionParameters.Speed * deltaTime)\n    );\n\n\n}\n\nfunction RootRotate(root, deltaTime)\n{\n    // 同时按下或者都不按下\n    if ((!dDown && !aDown) || (dDown && aDown))\n        return;\n\n    let dTheta = 90 * deltaTime;   // 每秒转90度...\n    if (aDown)  // 逆时针转\n    {\n        directionalTheta += dTheta;\n    }\n    else if (dDown)\n    {\n        dTheta = -dTheta;\n        directionalTheta += dTheta\n    }\n    directionalTheta = directionalTheta % 360;\n    root.ModelMatrix = mat4.rotate(\n        root.ModelMatrix, root.ModelMatrix,\n        dTheta * Math.PI / 180, vec3.fromValues(0, 1, 0)\n    );\n}\n\n\nfunction doMotion(Objects, deltaTime) {\n    let root = Objects;\n    RootRotate(root, deltaTime);\n    MoveForward(root, deltaTime);\n}"]}