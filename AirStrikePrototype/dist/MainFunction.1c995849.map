{"version":3,"sources":["ModelsManager.js","gl-matrix.js","operations.js","DrawGenericObjects.js","../../../../../../usr/local/lib/node_modules/parcel-bundler/node_modules/base64-js/index.js","../../../../../../usr/local/lib/node_modules/parcel-bundler/node_modules/ieee754/index.js","../../../../../../usr/local/lib/node_modules/parcel-bundler/node_modules/isarray/index.js","../../../../../../usr/local/lib/node_modules/parcel-bundler/node_modules/buffer/index.js","ObjectTrees.js","MainFunction.js"],"names":["console","log","track","getModelBufferCollection","gl","envModel","getModelFromOBJ","env","loCannonsModel","loCannons","upCannonsModel","upCannons","resideModel","reside","trackModel","rotatingItemModel","rotatingItem","skyBoxModel","skyBox","loCannonsBuffer","getModelBuffer","upCannonsBuffer","resideBuffer","trackBuffer","rotatingItemBuffer","env_buffer","skyBoxBuffer","envModelbuffer","Model","VertexBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","vertexPos","STATIC_DRAW","TextureBuffer","textureUV","NormalBuffer","normalVec","NumVertices","numVertices","vertex","uv","normal","length","GetTextureCollection","textureEnv","initTexture","FLOOR_URL","textureLoCannons","loCannonsTex","textureUpCannons","upCannonsTex","textureReside","resideTex","textureTrack","trackTex","textureRotatingItem","rotatingItemTex","textureSkyBox","initTextureCube","skyposx1","skynegx1","skyposy1","skynegy1","skyposz1","skynegz1","envTextureBuffer","LoCannons","UpCannons","Reside","Track","RotatingItem","SkyBox","url","texture","createTexture","bindTexture","TEXTURE_2D","level","internalFormat","RGBA","width","height","border","srcFormat","srcType","UNSIGNED_BYTE","pixel","Uint8Array","texImage2D","image","Image","onload","isPowerOf2","generateMipmap","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","LINEAR","src","value","urls","imgCount","img","Array","i","TEXTURE_CUBE_MAP","targets","TEXTURE_CUBE_MAP_POSITIVE_X","TEXTURE_CUBE_MAP_NEGATIVE_X","TEXTURE_CUBE_MAP_POSITIVE_Y","TEXTURE_CUBE_MAP_NEGATIVE_Y","TEXTURE_CUBE_MAP_POSITIVE_Z","TEXTURE_CUBE_MAP_NEGATIVE_Z","j","global","factory","exports","module","define","amd","glMatrix","EPSILON","ARRAY_TYPE","RANDOM","Math","random","setMatrixArrayType","type","degree","PI","toRadian","a","equals","b","abs","max","common","Object","freeze","create","out","clone","copy","identity","fromValues","m00","m01","m10","m11","set","transpose","a1","invert","a0","a2","a3","det","adjoint","determinant","multiply","b0","b1","b2","b3","rotate","rad","s","sin","c","cos","scale","v","v0","v1","fromRotation","fromScaling","str","frob","sqrt","pow","LDU","L","D","U","add","subtract","exactEquals","equals$1","multiplyScalar","multiplyScalarAndAdd","mul","sub","mat2","create$1","clone$1","copy$1","identity$1","fromValues$1","d","tx","ty","set$1","invert$1","aa","ab","ac","ad","atx","aty","determinant$1","multiply$1","a4","a5","b4","b5","rotate$1","scale$1","translate","fromRotation$1","fromScaling$1","fromTranslation","str$1","frob$1","add$1","subtract$1","multiplyScalar$1","multiplyScalarAndAdd$1","exactEquals$1","equals$2","mul$1","sub$1","mat2d","create$2","fromMat4","clone$2","copy$2","fromValues$2","m02","m12","m20","m21","m22","set$2","identity$2","transpose$1","a01","a02","a12","invert$2","a00","a10","a11","a20","a21","a22","b01","b11","b21","adjoint$1","determinant$2","multiply$2","b00","b02","b10","b12","b20","b22","translate$1","x","y","rotate$2","scale$2","fromTranslation$1","fromRotation$2","fromScaling$2","fromMat2d","fromQuat","q","z","w","x2","y2","z2","xx","yx","yy","zx","zy","zz","wx","wy","wz","normalFromMat4","a03","a13","a23","a30","a31","a32","a33","b03","b04","b05","b06","b07","b08","b09","projection","str$2","frob$2","add$2","subtract$2","multiplyScalar$2","multiplyScalarAndAdd$2","exactEquals$2","equals$3","a6","a7","a8","b6","b7","b8","mul$2","sub$2","mat3","create$3","clone$3","copy$3","fromValues$3","m03","m13","m23","m30","m31","m32","m33","set$3","identity$3","transpose$2","invert$3","adjoint$2","determinant$3","multiply$3","translate$2","scale$3","rotate$3","axis","len","t","rotateX","rotateY","rotateZ","fromTranslation$2","fromScaling$3","fromRotation$3","fromXRotation","fromYRotation","fromZRotation","fromRotationTranslation","xy","xz","yz","fromQuat2","translation","bx","by","bz","bw","ax","ay","az","aw","magnitude","getTranslation","mat","getScaling","getRotation","trace","S","fromRotationTranslationScale","sx","sy","sz","fromRotationTranslationScaleOrigin","o","ox","oy","oz","out0","out1","out2","out4","out5","out6","out8","out9","out10","fromQuat$1","frustum","left","right","bottom","top","near","far","rl","tb","nf","perspective","fovy","aspect","f","tan","Infinity","perspectiveFromFieldOfView","fov","upTan","upDegrees","downTan","downDegrees","leftTan","leftDegrees","rightTan","rightDegrees","xScale","yScale","ortho","lr","bt","lookAt","eye","center","up","x0","x1","y0","y1","z0","z1","eyex","eyey","eyez","upx","upy","upz","centerx","centery","centerz","targetTo","target","str$3","frob$3","add$3","subtract$3","multiplyScalar$3","multiplyScalarAndAdd$3","exactEquals$3","equals$4","a9","a14","a15","b9","b13","b14","b15","mul$3","sub$3","mat4","create$4","clone$4","fromValues$4","copy$4","set$4","add$4","subtract$4","multiply$4","divide","ceil","floor","min","round","scale$4","scaleAndAdd","distance","squaredDistance","squaredLength","negate","inverse","normalize","dot","cross","lerp","hermite","factorTimes2","factor1","factor2","factor3","factor4","bezier","inverseFactor","inverseFactorTimesTwo","r","zScale","transformMat4","m","transformMat3","transformQuat","qx","qy","qz","qw","uvx","uvy","uvz","uuvx","uuvy","uuvz","w2","rotateX$1","p","rotateY$1","rotateZ$1","angle","tempA","tempB","cosine","acos","zero","str$4","exactEquals$4","equals$5","sub$4","mul$4","div","dist","sqrDist","sqrLen","forEach","vec","stride","offset","count","fn","arg","l","vec3","create$5","clone$5","fromValues$5","copy$5","set$5","add$5","subtract$5","multiply$5","divide$1","ceil$1","floor$1","min$1","max$1","round$1","scale$5","scaleAndAdd$1","distance$1","squaredDistance$1","length$1","squaredLength$1","negate$1","inverse$1","normalize$1","dot$1","cross$1","u","A","B","C","E","F","G","H","I","J","lerp$1","random$1","v2","v3","v4","s1","s2","transformMat4$1","transformQuat$1","ix","iy","iz","iw","zero$1","str$5","exactEquals$5","equals$6","sub$5","mul$5","div$1","dist$1","sqrDist$1","len$1","sqrLen$1","forEach$1","vec4","create$6","identity$4","setAxisAngle","getAxisAngle","out_axis","multiply$6","rotateX$2","rotateY$2","rotateZ$2","calculateW","slerp","omega","cosom","sinom","scale0","scale1","random$2","u1","u2","u3","sqrt1MinusU1","sqrtU1","invert$4","dot$$1","invDot","conjugate","fromMat3","fTrace","fRoot","k","fromEuler","halfToRad","cx","cy","cz","str$6","clone$6","fromValues$6","copy$6","set$6","add$6","mul$6","scale$6","dot$2","lerp$2","length$2","len$2","squaredLength$2","sqrLen$2","normalize$2","exactEquals$6","equals$7","rotationTo","tmpvec3","xUnitVec3","yUnitVec3","sqlerp","temp1","temp2","setAxes","matr","view","quat","create$7","dq","clone$7","fromValues$7","w1","fromRotationTranslationValues","fromRotationTranslation$1","fromTranslation$3","fromRotation$4","fromMat4$1","outer","copy$7","identity$5","set$7","getReal","getDual","setReal","setDual","getTranslation$1","translate$3","ax1","ay1","az1","aw1","bx1","by1","bz1","ax2","ay2","az2","aw2","rotateX$3","rotateY$3","rotateZ$3","rotateByQuatAppend","rotateByQuatPrepend","rotateAroundAxis","axisLength","add$7","multiply$7","ax0","ay0","az0","aw0","bw1","bx0","by0","bz0","bw0","mul$7","scale$7","dot$3","lerp$3","mt","invert$5","sqlen","squaredLength$3","conjugate$1","length$3","len$3","sqrLen$3","normalize$3","a_dot_b","str$7","exactEquals$7","equals$8","quat2","create$8","clone$8","fromValues$8","copy$8","set$8","add$8","subtract$6","multiply$8","divide$2","ceil$2","floor$2","min$2","max$2","round$2","scale$8","scaleAndAdd$2","distance$2","squaredDistance$2","length$4","squaredLength$4","negate$2","inverse$2","normalize$4","dot$4","cross$2","lerp$4","random$3","transformMat2","transformMat2d","transformMat3$1","transformMat4$2","rotate$4","p0","p1","sinC","cosC","angle$1","len1","len2","zero$2","str$8","exactEquals$8","equals$9","len$4","sub$6","mul$8","div$2","dist$2","sqrDist$2","sqrLen$4","forEach$2","vec2","defineProperty","cameraUP","test","test2","test3","CameraSpeed","pitch","yaw","document","addEventListener","event","keyName","key","last_position","deltaX","clientX","deltaY","clientY","final_lookAt","Draw","programInfo","Objects","fieldOfView","canvas","clientWidth","clientHeight","zNear","zFar","ProjectionMatrix","ViewMatrix","StackModelMatrix","DrawGenericObject","Robot","EnvSystem","DrawGenericCube","lastMatrix","pop","currentModelMatrix","ModelMatrix","multipliedModelMatrices","push","DrawBasic","Buffer","Texture","CountAdjObj","AdjObj","buffer","numComponents","FLOAT","vertexAttribPointer","attribLocations","vertexPosition","enableVertexAttribArray","normalPosition","textureCoordPosition","useProgram","program","uniformMatrix4fv","uniformLocations","projectionMatrix","activeTexture","TEXTURE0","uniform1i","uSampler","vertexcount","drawArrays","TRIANGLES","GenericObject","MotionParameters","xP","yP","zP","Speed","Size","Pivot","MaxSpeed","ObjectTrees","buffersCollection","texturesCollection","rotatingPart","vsSource","fsSource","JSON","parse","setTimeout","main","querySelector","getContext","alert","shaderProgram","initShaderProgram","ProgramInfo","GenerateProgramInfo","ModelBufferCollection","TextureCollection","then","render","now","deltaTime","clearColor","clearDepth","enable","DEPTH_TEST","depthFunc","LEQUAL","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","requestAnimationFrame","fsSource_sun","vertexShader","loadShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","source","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","deleteShader","webGLPrograms","getAttribLocation","getUniformLocation","Sampler"],"mappings":"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A;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpFA;AACA;AACA;AACA;AACA;AACA;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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","file":"MainFunction.1c995849.map","sourceRoot":"..","sourcesContent":["// Models Manager\n//////////// - 模 型 管 理 器 - //////////////\n//////////// - 模 型 管 理 器 - //////////////\n//////////// - 模 型 管 理 器 - //////////////\n/***\n * 模型管理器\n * 本管理器负责Parse OBJ文件/读取JSON文件（取决于是否提前将OBJ转化为JSON）\n * 本管理器还负责整理纹理，并提供创建纹理的函数\n * 本管理器输出的对象为模型Buffer的全体的对象（可以理解成一个指针吧）+ 纹理全体的对象，这个对象可以在CreateGenericObjects中绘制泛型模型的过程中，\n *      通过直接访问对象的字段名来访问模型的Buffer和Texture对象，并将其赋到模型的物体上。\n */\n\n/////////////////////////////////////////////////////////////////////////////////////\n/////////////////////////////// 读取模型 返回Buffers ///////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////////////\n\n/***\n * 模型集\n * 返回一个对象，通过属性名来访问 / 通过数组来访问\n * 整合convert_obj_to_json.js\n * @param gl\n * @returns {{ExampleModel: {VertexBuffer: (AudioBuffer|WebGLBuffer), TextureBuffer: (AudioBuffer|WebGLBuffer), NormalBuffer: (AudioBuffer|WebGLBuffer), NumVertices: number}}}\n */\n\n// Define OBJ path\nimport {env,loCannons,upCannons,reside,track,rotatingItem,skyBox} from \"./MainFunction.js\";\nconsole.log(track)\n// Define Texture path\nimport FLOOR_URL from  \"./Textures/floor.jpg\";\nimport loCannonsTex from './Textures/LowerCannons.jpg';\nimport upCannonsTex from './Textures/UpperCannons.jpg';\nimport resideTex from  './Textures/reside.jpg';\nimport trackTex from './Textures/Track.jpg';\nimport rotatingItemTex from './Textures/RotatingItem.jpg';\nimport skynegx1 from './Textures/skynegx1.png';\nimport skynegy1 from './Textures/skynegy1.png';\nimport skynegz1 from './Textures/skynegz1.png';\nimport skyposx1 from './Textures/skyposx1.png';\nimport skyposy1 from './Textures/skyposy1.png';\nimport skyposz1 from './Textures/skyposz1.png';\n\nfunction getModelBufferCollection(gl)\n{\n    let envModel = getModelFromOBJ(env);\n    let loCannonsModel = getModelFromOBJ(loCannons);\n    let upCannonsModel = getModelFromOBJ(upCannons);\n    let resideModel = getModelFromOBJ(reside);\n    let trackModel = getModelFromOBJ(track);\n    let rotatingItemModel = getModelFromOBJ(rotatingItem);\n    let skyBoxModel = getModelFromOBJ(skyBox);\n\n    let loCannonsBuffer = getModelBuffer(gl, loCannonsModel);\n    let upCannonsBuffer = getModelBuffer(gl, upCannonsModel);\n    let resideBuffer = getModelBuffer(gl, resideModel);\n    let trackBuffer = getModelBuffer(gl, trackModel);\n    let rotatingItemBuffer = getModelBuffer(gl, rotatingItemModel);\n\n    // console.log(envModel)\n    let env_buffer = getModelBuffer(gl, envModel);\n    let skyBoxBuffer = getModelBuffer(gl, skyBoxModel);\n    return {\n        envModelbuffer:     env_buffer,\n        loCannonsBuffer:    loCannonsBuffer,\n        upCannonsBuffer:    upCannonsBuffer,\n        resideBuffer:       resideBuffer,\n        trackBuffer:        trackBuffer,\n        rotatingItemBuffer: rotatingItemBuffer,\n        skyBoxBuffer:       skyBoxBuffer\n    }\n\n}\n\n/***\n * 根据模型数组对象建立Buffer\n * @param gl\n * @param Model     Model对象是由`function getModelFromOBJ(path)`生成的\n * @returns {{VertexBuffer: AudioBuffer | WebGLBuffer, TextureBuffer: AudioBuffer | WebGLBuffer, NormalBuffer: AudioBuffer | WebGLBuffer, NumVertices: number}}\n * 返回的是Buffer对象\n */\nfunction getModelBuffer(gl, Model)\n{\n    const VertexBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, VertexBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(Model.vertexPos), gl.STATIC_DRAW);\n\n    const TextureBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, TextureBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(Model.textureUV), gl.STATIC_DRAW);\n    // console.log(Model.textureUV)\n    const NormalBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, NormalBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(Model.normalVec), gl.STATIC_DRAW);\n\n    return {\n        VertexBuffer:   VertexBuffer,\n        TextureBuffer:  TextureBuffer,\n        NormalBuffer:   NormalBuffer,\n        NumVertices:    Model.numVertices\n    }\n}\n\n// 此函数是生成数组并提取 而非生成buffer\nfunction getModelFromOBJ(Model){\n    // console.log(Model);\n    return {\n        vertexPos:   Model.vertex,\n        textureUV:   Model.uv,\n        normalVec:   Model.normal,\n        numVertices: Model.vertex.length\n    }\n}\n\n/////////////////////////////////////////////////////////////////////////////////////\n//////////////////// 纹理管理器：读取纹理贴图 生成Texture对象 ////////////////////////////\n/////////////////////////////////////////////////////////////////////////////////////\nfunction GetTextureCollection(gl) {\n    // 手动添加需要用到的纹理贴图\n    let textureEnv = initTexture(gl, FLOOR_URL);\n    let textureLoCannons = initTexture(gl, loCannonsTex);\n    let textureUpCannons = initTexture(gl, upCannonsTex);\n    let textureReside = initTexture(gl, resideTex);\n    let textureTrack = initTexture(gl, trackTex);\n    let textureRotatingItem = initTexture(gl, rotatingItemTex);\n    let textureSkyBox = initTextureCube(gl, [skyposx1, skynegx1, skyposy1, skynegy1, skyposz1, skynegz1]);\n\n    return {\n        envTextureBuffer:   textureEnv,\n        LoCannons:          textureLoCannons,\n        UpCannons:          textureUpCannons,\n        Reside:             textureReside,\n        Track:              textureTrack,\n        RotatingItem:       textureRotatingItem,\n        SkyBox:             textureSkyBox\n    }\n}\n\n// 初始化图片为texture对象\n// 返会texture\nfunction initTexture(gl, url){\n    const texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n\n    const level = 0;\n    const internalFormat = gl.RGBA;\n    const width = 1;\n    const height = 1;\n    const border = 0;\n    const srcFormat = gl.RGBA;\n    const srcType = gl.UNSIGNED_BYTE;\n    const pixel = new Uint8Array([0, 0, 255, 255]);  // opaque blue\n    gl.texImage2D(gl.TEXTURE_2D, level, internalFormat,\n        width, height, border, srcFormat, srcType,\n        pixel);\n\n    const image = new Image();\n    image.onload = function() {\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n        gl.texImage2D(gl.TEXTURE_2D, level, internalFormat,\n            srcFormat, srcType, image);\n\n        if (isPowerOf2(image.width) && isPowerOf2(image.height)) {\n            // Yes, it's a power of 2. Generate mips.\n            gl.generateMipmap(gl.TEXTURE_2D);\n        } else {\n            // No, it's not a power of 2. Turn of mips and set\n            // wrapping to clamp to edge\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        }\n    };\n    image.src = url;\n    return texture;\n}\nfunction isPowerOf2(value) {\n    return (value & (value - 1)) == 0;\n}\nfunction initTextureCube(gl, urls) {\n    var imgCount = 0;\n    var img = new Array(6);\n    const level = 0;\n    const internalFormat = gl.RGBA;\n    const width = 1;\n    const height = 1;\n    const border = 0;\n    const srcFormat = gl.RGBA;\n    const srcType = gl.UNSIGNED_BYTE;\n    var texture;\n\n    for (var i = 0; i < 6; i++) {\n        img[i] = new Image();\n        img[i].onload = function() {\n            imgCount++;\n            if (imgCount == 6) {\n                texture = gl.createTexture();\n                gl.bindTexture(gl.TEXTURE_CUBE_MAP, texture);\n\n                var targets = [\n                    gl.TEXTURE_CUBE_MAP_POSITIVE_X, gl.TEXTURE_CUBE_MAP_NEGATIVE_X, \n                    gl.TEXTURE_CUBE_MAP_POSITIVE_Y, gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, \n                    gl.TEXTURE_CUBE_MAP_POSITIVE_Z, gl.TEXTURE_CUBE_MAP_NEGATIVE_Z \n                        ];\n\n                for (var j = 0; j < 6; j++) {\n                    gl.texImage2D(targets[j], level, internalFormat, srcFormat, srcType, img[j]);\n                    gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n                    gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n                }\n                gl.generateMipmap(gl.TEXTURE_CUBE_MAP);\n            }\n        }\n        img[i].src = urls[i];\n    }\n    return texture;\n}\nexport {getModelBufferCollection,GetTextureCollection};","\n/*!\n@fileoverview gl-matrix - High performance matrix and vector operations\n@author Brandon Jones\n@author Colin MacKenzie IV\n@version 3.0.0-0\n\nCopyright (c) 2015-2019, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n*/\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.glMatrix = {})));\n}(this, (function (exports) { 'use strict';\n\n  /**\n   * Common utilities\n   * @module glMatrix\n   */\n  // Configuration Constants\n  var EPSILON = 0.000001;\n  var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\n  var RANDOM = Math.random;\n  /**\n   * Sets the type of array used when creating new vectors and matrices\n   *\n   * @param {Type} type Array type, such as Float32Array or Array\n   */\n\n  function setMatrixArrayType(type) {\n    ARRAY_TYPE = type;\n  }\n  var degree = Math.PI / 180;\n  /**\n   * Convert Degree To Radian\n   *\n   * @param {Number} a Angle in Degrees\n   */\n\n  function toRadian(a) {\n    return a * degree;\n  }\n  /**\n   * Tests whether or not the arguments have approximately the same value, within an absolute\n   * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n   * than or equal to 1.0, and a relative tolerance is used for larger values)\n   *\n   * @param {Number} a The first number to test.\n   * @param {Number} b The second number to test.\n   * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n   */\n\n  function equals(a, b) {\n    return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n  }\n\n  var common = /*#__PURE__*/Object.freeze({\n    EPSILON: EPSILON,\n    get ARRAY_TYPE () { return ARRAY_TYPE; },\n    RANDOM: RANDOM,\n    setMatrixArrayType: setMatrixArrayType,\n    toRadian: toRadian,\n    equals: equals\n  });\n\n  /**\n   * 2x2 Matrix\n   * @module mat2\n   */\n\n  /**\n   * Creates a new identity mat2\n   *\n   * @returns {mat2} a new 2x2 matrix\n   */\n\n  function create() {\n    var out = new ARRAY_TYPE(4);\n\n    if (ARRAY_TYPE != Float32Array) {\n      out[1] = 0;\n      out[2] = 0;\n    }\n\n    out[0] = 1;\n    out[3] = 1;\n    return out;\n  }\n  /**\n   * Creates a new mat2 initialized with values from an existing matrix\n   *\n   * @param {mat2} a matrix to clone\n   * @returns {mat2} a new 2x2 matrix\n   */\n\n  function clone(a) {\n    var out = new ARRAY_TYPE(4);\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    return out;\n  }\n  /**\n   * Copy the values from one mat2 to another\n   *\n   * @param {mat2} out the receiving matrix\n   * @param {mat2} a the source matrix\n   * @returns {mat2} out\n   */\n\n  function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    return out;\n  }\n  /**\n   * Set a mat2 to the identity matrix\n   *\n   * @param {mat2} out the receiving matrix\n   * @returns {mat2} out\n   */\n\n  function identity(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    return out;\n  }\n  /**\n   * Create a new mat2 with the given values\n   *\n   * @param {Number} m00 Component in column 0, row 0 position (index 0)\n   * @param {Number} m01 Component in column 0, row 1 position (index 1)\n   * @param {Number} m10 Component in column 1, row 0 position (index 2)\n   * @param {Number} m11 Component in column 1, row 1 position (index 3)\n   * @returns {mat2} out A new 2x2 matrix\n   */\n\n  function fromValues(m00, m01, m10, m11) {\n    var out = new ARRAY_TYPE(4);\n    out[0] = m00;\n    out[1] = m01;\n    out[2] = m10;\n    out[3] = m11;\n    return out;\n  }\n  /**\n   * Set the components of a mat2 to the given values\n   *\n   * @param {mat2} out the receiving matrix\n   * @param {Number} m00 Component in column 0, row 0 position (index 0)\n   * @param {Number} m01 Component in column 0, row 1 position (index 1)\n   * @param {Number} m10 Component in column 1, row 0 position (index 2)\n   * @param {Number} m11 Component in column 1, row 1 position (index 3)\n   * @returns {mat2} out\n   */\n\n  function set(out, m00, m01, m10, m11) {\n    out[0] = m00;\n    out[1] = m01;\n    out[2] = m10;\n    out[3] = m11;\n    return out;\n  }\n  /**\n   * Transpose the values of a mat2\n   *\n   * @param {mat2} out the receiving matrix\n   * @param {mat2} a the source matrix\n   * @returns {mat2} out\n   */\n\n  function transpose(out, a) {\n    // If we are transposing ourselves we can skip a few steps but have to cache\n    // some values\n    if (out === a) {\n      var a1 = a[1];\n      out[1] = a[2];\n      out[2] = a1;\n    } else {\n      out[0] = a[0];\n      out[1] = a[2];\n      out[2] = a[1];\n      out[3] = a[3];\n    }\n\n    return out;\n  }\n  /**\n   * Inverts a mat2\n   *\n   * @param {mat2} out the receiving matrix\n   * @param {mat2} a the source matrix\n   * @returns {mat2} out\n   */\n\n  function invert(out, a) {\n    var a0 = a[0],\n        a1 = a[1],\n        a2 = a[2],\n        a3 = a[3]; // Calculate the determinant\n\n    var det = a0 * a3 - a2 * a1;\n\n    if (!det) {\n      return null;\n    }\n\n    det = 1.0 / det;\n    out[0] = a3 * det;\n    out[1] = -a1 * det;\n    out[2] = -a2 * det;\n    out[3] = a0 * det;\n    return out;\n  }\n  /**\n   * Calculates the adjugate of a mat2\n   *\n   * @param {mat2} out the receiving matrix\n   * @param {mat2} a the source matrix\n   * @returns {mat2} out\n   */\n\n  function adjoint(out, a) {\n    // Caching this value is nessecary if out == a\n    var a0 = a[0];\n    out[0] = a[3];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    out[3] = a0;\n    return out;\n  }\n  /**\n   * Calculates the determinant of a mat2\n   *\n   * @param {mat2} a the source matrix\n   * @returns {Number} determinant of a\n   */\n\n  function determinant(a) {\n    return a[0] * a[3] - a[2] * a[1];\n  }\n  /**\n   * Multiplies two mat2's\n   *\n   * @param {mat2} out the receiving matrix\n   * @param {mat2} a the first operand\n   * @param {mat2} b the second operand\n   * @returns {mat2} out\n   */\n\n  function multiply(out, a, b) {\n    var a0 = a[0],\n        a1 = a[1],\n        a2 = a[2],\n        a3 = a[3];\n    var b0 = b[0],\n        b1 = b[1],\n        b2 = b[2],\n        b3 = b[3];\n    out[0] = a0 * b0 + a2 * b1;\n    out[1] = a1 * b0 + a3 * b1;\n    out[2] = a0 * b2 + a2 * b3;\n    out[3] = a1 * b2 + a3 * b3;\n    return out;\n  }\n  /**\n   * Rotates a mat2 by the given angle\n   *\n   * @param {mat2} out the receiving matrix\n   * @param {mat2} a the matrix to rotate\n   * @param {Number} rad the angle to rotate the matrix by\n   * @returns {mat2} out\n   */\n\n  function rotate(out, a, rad) {\n    var a0 = a[0],\n        a1 = a[1],\n        a2 = a[2],\n        a3 = a[3];\n    var s = Math.sin(rad);\n    var c = Math.cos(rad);\n    out[0] = a0 * c + a2 * s;\n    out[1] = a1 * c + a3 * s;\n    out[2] = a0 * -s + a2 * c;\n    out[3] = a1 * -s + a3 * c;\n    return out;\n  }\n  /**\n   * Scales the mat2 by the dimensions in the given vec2\n   *\n   * @param {mat2} out the receiving matrix\n   * @param {mat2} a the matrix to rotate\n   * @param {vec2} v the vec2 to scale the matrix by\n   * @returns {mat2} out\n   **/\n\n  function scale(out, a, v) {\n    var a0 = a[0],\n        a1 = a[1],\n        a2 = a[2],\n        a3 = a[3];\n    var v0 = v[0],\n        v1 = v[1];\n    out[0] = a0 * v0;\n    out[1] = a1 * v0;\n    out[2] = a2 * v1;\n    out[3] = a3 * v1;\n    return out;\n  }\n  /**\n   * Creates a matrix from a given angle\n   * This is equivalent to (but much faster than):\n   *\n   *     mat2.identity(dest);\n   *     mat2.rotate(dest, dest, rad);\n   *\n   * @param {mat2} out mat2 receiving operation result\n   * @param {Number} rad the angle to rotate the matrix by\n   * @returns {mat2} out\n   */\n\n  function fromRotation(out, rad) {\n    var s = Math.sin(rad);\n    var c = Math.cos(rad);\n    out[0] = c;\n    out[1] = s;\n    out[2] = -s;\n    out[3] = c;\n    return out;\n  }\n  /**\n   * Creates a matrix from a vector scaling\n   * This is equivalent to (but much faster than):\n   *\n   *     mat2.identity(dest);\n   *     mat2.scale(dest, dest, vec);\n   *\n   * @param {mat2} out mat2 receiving operation result\n   * @param {vec2} v Scaling vector\n   * @returns {mat2} out\n   */\n\n  function fromScaling(out, v) {\n    out[0] = v[0];\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = v[1];\n    return out;\n  }\n  /**\n   * Returns a string representation of a mat2\n   *\n   * @param {mat2} a matrix to represent as a string\n   * @returns {String} string representation of the matrix\n   */\n\n  function str(a) {\n    return 'mat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n  }\n  /**\n   * Returns Frobenius norm of a mat2\n   *\n   * @param {mat2} a the matrix to calculate Frobenius norm of\n   * @returns {Number} Frobenius norm\n   */\n\n  function frob(a) {\n    return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2));\n  }\n  /**\n   * Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix\n   * @param {mat2} L the lower triangular matrix\n   * @param {mat2} D the diagonal matrix\n   * @param {mat2} U the upper triangular matrix\n   * @param {mat2} a the input matrix to factorize\n   */\n\n  function LDU(L, D, U, a) {\n    L[2] = a[2] / a[0];\n    U[0] = a[0];\n    U[1] = a[1];\n    U[3] = a[3] - L[2] * U[1];\n    return [L, D, U];\n  }\n  /**\n   * Adds two mat2's\n   *\n   * @param {mat2} out the receiving matrix\n   * @param {mat2} a the first operand\n   * @param {mat2} b the second operand\n   * @returns {mat2} out\n   */\n\n  function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    return out;\n  }\n  /**\n   * Subtracts matrix b from matrix a\n   *\n   * @param {mat2} out the receiving matrix\n   * @param {mat2} a the first operand\n   * @param {mat2} b the second operand\n   * @returns {mat2} out\n   */\n\n  function subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    out[3] = a[3] - b[3];\n    return out;\n  }\n  /**\n   * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n   *\n   * @param {mat2} a The first matrix.\n   * @param {mat2} b The second matrix.\n   * @returns {Boolean} True if the matrices are equal, false otherwise.\n   */\n\n  function exactEquals(a, b) {\n    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n  }\n  /**\n   * Returns whether or not the matrices have approximately the same elements in the same position.\n   *\n   * @param {mat2} a The first matrix.\n   * @param {mat2} b The second matrix.\n   * @returns {Boolean} True if the matrices are equal, false otherwise.\n   */\n\n  function equals$1(a, b) {\n    var a0 = a[0],\n        a1 = a[1],\n        a2 = a[2],\n        a3 = a[3];\n    var b0 = b[0],\n        b1 = b[1],\n        b2 = b[2],\n        b3 = b[3];\n    return Math.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n  }\n  /**\n   * Multiply each element of the matrix by a scalar.\n   *\n   * @param {mat2} out the receiving matrix\n   * @param {mat2} a the matrix to scale\n   * @param {Number} b amount to scale the matrix's elements by\n   * @returns {mat2} out\n   */\n\n  function multiplyScalar(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    return out;\n  }\n  /**\n   * Adds two mat2's after multiplying each element of the second operand by a scalar value.\n   *\n   * @param {mat2} out the receiving vector\n   * @param {mat2} a the first operand\n   * @param {mat2} b the second operand\n   * @param {Number} scale the amount to scale b's elements by before adding\n   * @returns {mat2} out\n   */\n\n  function multiplyScalarAndAdd(out, a, b, scale) {\n    out[0] = a[0] + b[0] * scale;\n    out[1] = a[1] + b[1] * scale;\n    out[2] = a[2] + b[2] * scale;\n    out[3] = a[3] + b[3] * scale;\n    return out;\n  }\n  /**\n   * Alias for {@link mat2.multiply}\n   * @function\n   */\n\n  var mul = multiply;\n  /**\n   * Alias for {@link mat2.subtract}\n   * @function\n   */\n\n  var sub = subtract;\n\n  var mat2 = /*#__PURE__*/Object.freeze({\n    create: create,\n    clone: clone,\n    copy: copy,\n    identity: identity,\n    fromValues: fromValues,\n    set: set,\n    transpose: transpose,\n    invert: invert,\n    adjoint: adjoint,\n    determinant: determinant,\n    multiply: multiply,\n    rotate: rotate,\n    scale: scale,\n    fromRotation: fromRotation,\n    fromScaling: fromScaling,\n    str: str,\n    frob: frob,\n    LDU: LDU,\n    add: add,\n    subtract: subtract,\n    exactEquals: exactEquals,\n    equals: equals$1,\n    multiplyScalar: multiplyScalar,\n    multiplyScalarAndAdd: multiplyScalarAndAdd,\n    mul: mul,\n    sub: sub\n  });\n\n  /**\n   * 2x3 Matrix\n   * @module mat2d\n   *\n   * @description\n   * A mat2d contains six elements defined as:\n   * <pre>\n   * [a, c, tx,\n   *  b, d, ty]\n   * </pre>\n   * This is a short form for the 3x3 matrix:\n   * <pre>\n   * [a, c, tx,\n   *  b, d, ty,\n   *  0, 0, 1]\n   * </pre>\n   * The last row is ignored so the array is shorter and operations are faster.\n   */\n\n  /**\n   * Creates a new identity mat2d\n   *\n   * @returns {mat2d} a new 2x3 matrix\n   */\n\n  function create$1() {\n    var out = new ARRAY_TYPE(6);\n\n    if (ARRAY_TYPE != Float32Array) {\n      out[1] = 0;\n      out[2] = 0;\n      out[4] = 0;\n      out[5] = 0;\n    }\n\n    out[0] = 1;\n    out[3] = 1;\n    return out;\n  }\n  /**\n   * Creates a new mat2d initialized with values from an existing matrix\n   *\n   * @param {mat2d} a matrix to clone\n   * @returns {mat2d} a new 2x3 matrix\n   */\n\n  function clone$1(a) {\n    var out = new ARRAY_TYPE(6);\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    return out;\n  }\n  /**\n   * Copy the values from one mat2d to another\n   *\n   * @param {mat2d} out the receiving matrix\n   * @param {mat2d} a the source matrix\n   * @returns {mat2d} out\n   */\n\n  function copy$1(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    return out;\n  }\n  /**\n   * Set a mat2d to the identity matrix\n   *\n   * @param {mat2d} out the receiving matrix\n   * @returns {mat2d} out\n   */\n\n  function identity$1(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    out[4] = 0;\n    out[5] = 0;\n    return out;\n  }\n  /**\n   * Create a new mat2d with the given values\n   *\n   * @param {Number} a Component A (index 0)\n   * @param {Number} b Component B (index 1)\n   * @param {Number} c Component C (index 2)\n   * @param {Number} d Component D (index 3)\n   * @param {Number} tx Component TX (index 4)\n   * @param {Number} ty Component TY (index 5)\n   * @returns {mat2d} A new mat2d\n   */\n\n  function fromValues$1(a, b, c, d, tx, ty) {\n    var out = new ARRAY_TYPE(6);\n    out[0] = a;\n    out[1] = b;\n    out[2] = c;\n    out[3] = d;\n    out[4] = tx;\n    out[5] = ty;\n    return out;\n  }\n  /**\n   * Set the components of a mat2d to the given values\n   *\n   * @param {mat2d} out the receiving matrix\n   * @param {Number} a Component A (index 0)\n   * @param {Number} b Component B (index 1)\n   * @param {Number} c Component C (index 2)\n   * @param {Number} d Component D (index 3)\n   * @param {Number} tx Component TX (index 4)\n   * @param {Number} ty Component TY (index 5)\n   * @returns {mat2d} out\n   */\n\n  function set$1(out, a, b, c, d, tx, ty) {\n    out[0] = a;\n    out[1] = b;\n    out[2] = c;\n    out[3] = d;\n    out[4] = tx;\n    out[5] = ty;\n    return out;\n  }\n  /**\n   * Inverts a mat2d\n   *\n   * @param {mat2d} out the receiving matrix\n   * @param {mat2d} a the source matrix\n   * @returns {mat2d} out\n   */\n\n  function invert$1(out, a) {\n    var aa = a[0],\n        ab = a[1],\n        ac = a[2],\n        ad = a[3];\n    var atx = a[4],\n        aty = a[5];\n    var det = aa * ad - ab * ac;\n\n    if (!det) {\n      return null;\n    }\n\n    det = 1.0 / det;\n    out[0] = ad * det;\n    out[1] = -ab * det;\n    out[2] = -ac * det;\n    out[3] = aa * det;\n    out[4] = (ac * aty - ad * atx) * det;\n    out[5] = (ab * atx - aa * aty) * det;\n    return out;\n  }\n  /**\n   * Calculates the determinant of a mat2d\n   *\n   * @param {mat2d} a the source matrix\n   * @returns {Number} determinant of a\n   */\n\n  function determinant$1(a) {\n    return a[0] * a[3] - a[1] * a[2];\n  }\n  /**\n   * Multiplies two mat2d's\n   *\n   * @param {mat2d} out the receiving matrix\n   * @param {mat2d} a the first operand\n   * @param {mat2d} b the second operand\n   * @returns {mat2d} out\n   */\n\n  function multiply$1(out, a, b) {\n    var a0 = a[0],\n        a1 = a[1],\n        a2 = a[2],\n        a3 = a[3],\n        a4 = a[4],\n        a5 = a[5];\n    var b0 = b[0],\n        b1 = b[1],\n        b2 = b[2],\n        b3 = b[3],\n        b4 = b[4],\n        b5 = b[5];\n    out[0] = a0 * b0 + a2 * b1;\n    out[1] = a1 * b0 + a3 * b1;\n    out[2] = a0 * b2 + a2 * b3;\n    out[3] = a1 * b2 + a3 * b3;\n    out[4] = a0 * b4 + a2 * b5 + a4;\n    out[5] = a1 * b4 + a3 * b5 + a5;\n    return out;\n  }\n  /**\n   * Rotates a mat2d by the given angle\n   *\n   * @param {mat2d} out the receiving matrix\n   * @param {mat2d} a the matrix to rotate\n   * @param {Number} rad the angle to rotate the matrix by\n   * @returns {mat2d} out\n   */\n\n  function rotate$1(out, a, rad) {\n    var a0 = a[0],\n        a1 = a[1],\n        a2 = a[2],\n        a3 = a[3],\n        a4 = a[4],\n        a5 = a[5];\n    var s = Math.sin(rad);\n    var c = Math.cos(rad);\n    out[0] = a0 * c + a2 * s;\n    out[1] = a1 * c + a3 * s;\n    out[2] = a0 * -s + a2 * c;\n    out[3] = a1 * -s + a3 * c;\n    out[4] = a4;\n    out[5] = a5;\n    return out;\n  }\n  /**\n   * Scales the mat2d by the dimensions in the given vec2\n   *\n   * @param {mat2d} out the receiving matrix\n   * @param {mat2d} a the matrix to translate\n   * @param {vec2} v the vec2 to scale the matrix by\n   * @returns {mat2d} out\n   **/\n\n  function scale$1(out, a, v) {\n    var a0 = a[0],\n        a1 = a[1],\n        a2 = a[2],\n        a3 = a[3],\n        a4 = a[4],\n        a5 = a[5];\n    var v0 = v[0],\n        v1 = v[1];\n    out[0] = a0 * v0;\n    out[1] = a1 * v0;\n    out[2] = a2 * v1;\n    out[3] = a3 * v1;\n    out[4] = a4;\n    out[5] = a5;\n    return out;\n  }\n  /**\n   * Translates the mat2d by the dimensions in the given vec2\n   *\n   * @param {mat2d} out the receiving matrix\n   * @param {mat2d} a the matrix to translate\n   * @param {vec2} v the vec2 to translate the matrix by\n   * @returns {mat2d} out\n   **/\n\n  function translate(out, a, v) {\n    var a0 = a[0],\n        a1 = a[1],\n        a2 = a[2],\n        a3 = a[3],\n        a4 = a[4],\n        a5 = a[5];\n    var v0 = v[0],\n        v1 = v[1];\n    out[0] = a0;\n    out[1] = a1;\n    out[2] = a2;\n    out[3] = a3;\n    out[4] = a0 * v0 + a2 * v1 + a4;\n    out[5] = a1 * v0 + a3 * v1 + a5;\n    return out;\n  }\n  /**\n   * Creates a matrix from a given angle\n   * This is equivalent to (but much faster than):\n   *\n   *     mat2d.identity(dest);\n   *     mat2d.rotate(dest, dest, rad);\n   *\n   * @param {mat2d} out mat2d receiving operation result\n   * @param {Number} rad the angle to rotate the matrix by\n   * @returns {mat2d} out\n   */\n\n  function fromRotation$1(out, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad);\n    out[0] = c;\n    out[1] = s;\n    out[2] = -s;\n    out[3] = c;\n    out[4] = 0;\n    out[5] = 0;\n    return out;\n  }\n  /**\n   * Creates a matrix from a vector scaling\n   * This is equivalent to (but much faster than):\n   *\n   *     mat2d.identity(dest);\n   *     mat2d.scale(dest, dest, vec);\n   *\n   * @param {mat2d} out mat2d receiving operation result\n   * @param {vec2} v Scaling vector\n   * @returns {mat2d} out\n   */\n\n  function fromScaling$1(out, v) {\n    out[0] = v[0];\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = v[1];\n    out[4] = 0;\n    out[5] = 0;\n    return out;\n  }\n  /**\n   * Creates a matrix from a vector translation\n   * This is equivalent to (but much faster than):\n   *\n   *     mat2d.identity(dest);\n   *     mat2d.translate(dest, dest, vec);\n   *\n   * @param {mat2d} out mat2d receiving operation result\n   * @param {vec2} v Translation vector\n   * @returns {mat2d} out\n   */\n\n  function fromTranslation(out, v) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    out[4] = v[0];\n    out[5] = v[1];\n    return out;\n  }\n  /**\n   * Returns a string representation of a mat2d\n   *\n   * @param {mat2d} a matrix to represent as a string\n   * @returns {String} string representation of the matrix\n   */\n\n  function str$1(a) {\n    return 'mat2d(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ')';\n  }\n  /**\n   * Returns Frobenius norm of a mat2d\n   *\n   * @param {mat2d} a the matrix to calculate Frobenius norm of\n   * @returns {Number} Frobenius norm\n   */\n\n  function frob$1(a) {\n    return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + 1);\n  }\n  /**\n   * Adds two mat2d's\n   *\n   * @param {mat2d} out the receiving matrix\n   * @param {mat2d} a the first operand\n   * @param {mat2d} b the second operand\n   * @returns {mat2d} out\n   */\n\n  function add$1(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    out[4] = a[4] + b[4];\n    out[5] = a[5] + b[5];\n    return out;\n  }\n  /**\n   * Subtracts matrix b from matrix a\n   *\n   * @param {mat2d} out the receiving matrix\n   * @param {mat2d} a the first operand\n   * @param {mat2d} b the second operand\n   * @returns {mat2d} out\n   */\n\n  function subtract$1(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    out[3] = a[3] - b[3];\n    out[4] = a[4] - b[4];\n    out[5] = a[5] - b[5];\n    return out;\n  }\n  /**\n   * Multiply each element of the matrix by a scalar.\n   *\n   * @param {mat2d} out the receiving matrix\n   * @param {mat2d} a the matrix to scale\n   * @param {Number} b amount to scale the matrix's elements by\n   * @returns {mat2d} out\n   */\n\n  function multiplyScalar$1(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    out[4] = a[4] * b;\n    out[5] = a[5] * b;\n    return out;\n  }\n  /**\n   * Adds two mat2d's after multiplying each element of the second operand by a scalar value.\n   *\n   * @param {mat2d} out the receiving vector\n   * @param {mat2d} a the first operand\n   * @param {mat2d} b the second operand\n   * @param {Number} scale the amount to scale b's elements by before adding\n   * @returns {mat2d} out\n   */\n\n  function multiplyScalarAndAdd$1(out, a, b, scale) {\n    out[0] = a[0] + b[0] * scale;\n    out[1] = a[1] + b[1] * scale;\n    out[2] = a[2] + b[2] * scale;\n    out[3] = a[3] + b[3] * scale;\n    out[4] = a[4] + b[4] * scale;\n    out[5] = a[5] + b[5] * scale;\n    return out;\n  }\n  /**\n   * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n   *\n   * @param {mat2d} a The first matrix.\n   * @param {mat2d} b The second matrix.\n   * @returns {Boolean} True if the matrices are equal, false otherwise.\n   */\n\n  function exactEquals$1(a, b) {\n    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5];\n  }\n  /**\n   * Returns whether or not the matrices have approximately the same elements in the same position.\n   *\n   * @param {mat2d} a The first matrix.\n   * @param {mat2d} b The second matrix.\n   * @returns {Boolean} True if the matrices are equal, false otherwise.\n   */\n\n  function equals$2(a, b) {\n    var a0 = a[0],\n        a1 = a[1],\n        a2 = a[2],\n        a3 = a[3],\n        a4 = a[4],\n        a5 = a[5];\n    var b0 = b[0],\n        b1 = b[1],\n        b2 = b[2],\n        b3 = b[3],\n        b4 = b[4],\n        b5 = b[5];\n    return Math.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5));\n  }\n  /**\n   * Alias for {@link mat2d.multiply}\n   * @function\n   */\n\n  var mul$1 = multiply$1;\n  /**\n   * Alias for {@link mat2d.subtract}\n   * @function\n   */\n\n  var sub$1 = subtract$1;\n\n  var mat2d = /*#__PURE__*/Object.freeze({\n    create: create$1,\n    clone: clone$1,\n    copy: copy$1,\n    identity: identity$1,\n    fromValues: fromValues$1,\n    set: set$1,\n    invert: invert$1,\n    determinant: determinant$1,\n    multiply: multiply$1,\n    rotate: rotate$1,\n    scale: scale$1,\n    translate: translate,\n    fromRotation: fromRotation$1,\n    fromScaling: fromScaling$1,\n    fromTranslation: fromTranslation,\n    str: str$1,\n    frob: frob$1,\n    add: add$1,\n    subtract: subtract$1,\n    multiplyScalar: multiplyScalar$1,\n    multiplyScalarAndAdd: multiplyScalarAndAdd$1,\n    exactEquals: exactEquals$1,\n    equals: equals$2,\n    mul: mul$1,\n    sub: sub$1\n  });\n\n  /**\n   * 3x3 Matrix\n   * @module mat3\n   */\n\n  /**\n   * Creates a new identity mat3\n   *\n   * @returns {mat3} a new 3x3 matrix\n   */\n\n  function create$2() {\n    var out = new ARRAY_TYPE(9);\n\n    if (ARRAY_TYPE != Float32Array) {\n      out[1] = 0;\n      out[2] = 0;\n      out[3] = 0;\n      out[5] = 0;\n      out[6] = 0;\n      out[7] = 0;\n    }\n\n    out[0] = 1;\n    out[4] = 1;\n    out[8] = 1;\n    return out;\n  }\n  /**\n   * Copies the upper-left 3x3 values into the given mat3.\n   *\n   * @param {mat3} out the receiving 3x3 matrix\n   * @param {mat4} a   the source 4x4 matrix\n   * @returns {mat3} out\n   */\n\n  function fromMat4(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[4];\n    out[4] = a[5];\n    out[5] = a[6];\n    out[6] = a[8];\n    out[7] = a[9];\n    out[8] = a[10];\n    return out;\n  }\n  /**\n   * Creates a new mat3 initialized with values from an existing matrix\n   *\n   * @param {mat3} a matrix to clone\n   * @returns {mat3} a new 3x3 matrix\n   */\n\n  function clone$2(a) {\n    var out = new ARRAY_TYPE(9);\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    return out;\n  }\n  /**\n   * Copy the values from one mat3 to another\n   *\n   * @param {mat3} out the receiving matrix\n   * @param {mat3} a the source matrix\n   * @returns {mat3} out\n   */\n\n  function copy$2(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    return out;\n  }\n  /**\n   * Create a new mat3 with the given values\n   *\n   * @param {Number} m00 Component in column 0, row 0 position (index 0)\n   * @param {Number} m01 Component in column 0, row 1 position (index 1)\n   * @param {Number} m02 Component in column 0, row 2 position (index 2)\n   * @param {Number} m10 Component in column 1, row 0 position (index 3)\n   * @param {Number} m11 Component in column 1, row 1 position (index 4)\n   * @param {Number} m12 Component in column 1, row 2 position (index 5)\n   * @param {Number} m20 Component in column 2, row 0 position (index 6)\n   * @param {Number} m21 Component in column 2, row 1 position (index 7)\n   * @param {Number} m22 Component in column 2, row 2 position (index 8)\n   * @returns {mat3} A new mat3\n   */\n\n  function fromValues$2(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n    var out = new ARRAY_TYPE(9);\n    out[0] = m00;\n    out[1] = m01;\n    out[2] = m02;\n    out[3] = m10;\n    out[4] = m11;\n    out[5] = m12;\n    out[6] = m20;\n    out[7] = m21;\n    out[8] = m22;\n    return out;\n  }\n  /**\n   * Set the components of a mat3 to the given values\n   *\n   * @param {mat3} out the receiving matrix\n   * @param {Number} m00 Component in column 0, row 0 position (index 0)\n   * @param {Number} m01 Component in column 0, row 1 position (index 1)\n   * @param {Number} m02 Component in column 0, row 2 position (index 2)\n   * @param {Number} m10 Component in column 1, row 0 position (index 3)\n   * @param {Number} m11 Component in column 1, row 1 position (index 4)\n   * @param {Number} m12 Component in column 1, row 2 position (index 5)\n   * @param {Number} m20 Component in column 2, row 0 position (index 6)\n   * @param {Number} m21 Component in column 2, row 1 position (index 7)\n   * @param {Number} m22 Component in column 2, row 2 position (index 8)\n   * @returns {mat3} out\n   */\n\n  function set$2(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n    out[0] = m00;\n    out[1] = m01;\n    out[2] = m02;\n    out[3] = m10;\n    out[4] = m11;\n    out[5] = m12;\n    out[6] = m20;\n    out[7] = m21;\n    out[8] = m22;\n    return out;\n  }\n  /**\n   * Set a mat3 to the identity matrix\n   *\n   * @param {mat3} out the receiving matrix\n   * @returns {mat3} out\n   */\n\n  function identity$2(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 1;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 1;\n    return out;\n  }\n  /**\n   * Transpose the values of a mat3\n   *\n   * @param {mat3} out the receiving matrix\n   * @param {mat3} a the source matrix\n   * @returns {mat3} out\n   */\n\n  function transpose$1(out, a) {\n    // If we are transposing ourselves we can skip a few steps but have to cache some values\n    if (out === a) {\n      var a01 = a[1],\n          a02 = a[2],\n          a12 = a[5];\n      out[1] = a[3];\n      out[2] = a[6];\n      out[3] = a01;\n      out[5] = a[7];\n      out[6] = a02;\n      out[7] = a12;\n    } else {\n      out[0] = a[0];\n      out[1] = a[3];\n      out[2] = a[6];\n      out[3] = a[1];\n      out[4] = a[4];\n      out[5] = a[7];\n      out[6] = a[2];\n      out[7] = a[5];\n      out[8] = a[8];\n    }\n\n    return out;\n  }\n  /**\n   * Inverts a mat3\n   *\n   * @param {mat3} out the receiving matrix\n   * @param {mat3} a the source matrix\n   * @returns {mat3} out\n   */\n\n  function invert$2(out, a) {\n    var a00 = a[0],\n        a01 = a[1],\n        a02 = a[2];\n    var a10 = a[3],\n        a11 = a[4],\n        a12 = a[5];\n    var a20 = a[6],\n        a21 = a[7],\n        a22 = a[8];\n    var b01 = a22 * a11 - a12 * a21;\n    var b11 = -a22 * a10 + a12 * a20;\n    var b21 = a21 * a10 - a11 * a20; // Calculate the determinant\n\n    var det = a00 * b01 + a01 * b11 + a02 * b21;\n\n    if (!det) {\n      return null;\n    }\n\n    det = 1.0 / det;\n    out[0] = b01 * det;\n    out[1] = (-a22 * a01 + a02 * a21) * det;\n    out[2] = (a12 * a01 - a02 * a11) * det;\n    out[3] = b11 * det;\n    out[4] = (a22 * a00 - a02 * a20) * det;\n    out[5] = (-a12 * a00 + a02 * a10) * det;\n    out[6] = b21 * det;\n    out[7] = (-a21 * a00 + a01 * a20) * det;\n    out[8] = (a11 * a00 - a01 * a10) * det;\n    return out;\n  }\n  /**\n   * Calculates the adjugate of a mat3\n   *\n   * @param {mat3} out the receiving matrix\n   * @param {mat3} a the source matrix\n   * @returns {mat3} out\n   */\n\n  function adjoint$1(out, a) {\n    var a00 = a[0],\n        a01 = a[1],\n        a02 = a[2];\n    var a10 = a[3],\n        a11 = a[4],\n        a12 = a[5];\n    var a20 = a[6],\n        a21 = a[7],\n        a22 = a[8];\n    out[0] = a11 * a22 - a12 * a21;\n    out[1] = a02 * a21 - a01 * a22;\n    out[2] = a01 * a12 - a02 * a11;\n    out[3] = a12 * a20 - a10 * a22;\n    out[4] = a00 * a22 - a02 * a20;\n    out[5] = a02 * a10 - a00 * a12;\n    out[6] = a10 * a21 - a11 * a20;\n    out[7] = a01 * a20 - a00 * a21;\n    out[8] = a00 * a11 - a01 * a10;\n    return out;\n  }\n  /**\n   * Calculates the determinant of a mat3\n   *\n   * @param {mat3} a the source matrix\n   * @returns {Number} determinant of a\n   */\n\n  function determinant$2(a) {\n    var a00 = a[0],\n        a01 = a[1],\n        a02 = a[2];\n    var a10 = a[3],\n        a11 = a[4],\n        a12 = a[5];\n    var a20 = a[6],\n        a21 = a[7],\n        a22 = a[8];\n    return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n  }\n  /**\n   * Multiplies two mat3's\n   *\n   * @param {mat3} out the receiving matrix\n   * @param {mat3} a the first operand\n   * @param {mat3} b the second operand\n   * @returns {mat3} out\n   */\n\n  function multiply$2(out, a, b) {\n    var a00 = a[0],\n        a01 = a[1],\n        a02 = a[2];\n    var a10 = a[3],\n        a11 = a[4],\n        a12 = a[5];\n    var a20 = a[6],\n        a21 = a[7],\n        a22 = a[8];\n    var b00 = b[0],\n        b01 = b[1],\n        b02 = b[2];\n    var b10 = b[3],\n        b11 = b[4],\n        b12 = b[5];\n    var b20 = b[6],\n        b21 = b[7],\n        b22 = b[8];\n    out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n    out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n    out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n    out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n    out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n    out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n    out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n    out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n    out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n    return out;\n  }\n  /**\n   * Translate a mat3 by the given vector\n   *\n   * @param {mat3} out the receiving matrix\n   * @param {mat3} a the matrix to translate\n   * @param {vec2} v vector to translate by\n   * @returns {mat3} out\n   */\n\n  function translate$1(out, a, v) {\n    var a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a10 = a[3],\n        a11 = a[4],\n        a12 = a[5],\n        a20 = a[6],\n        a21 = a[7],\n        a22 = a[8],\n        x = v[0],\n        y = v[1];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a10;\n    out[4] = a11;\n    out[5] = a12;\n    out[6] = x * a00 + y * a10 + a20;\n    out[7] = x * a01 + y * a11 + a21;\n    out[8] = x * a02 + y * a12 + a22;\n    return out;\n  }\n  /**\n   * Rotates a mat3 by the given angle\n   *\n   * @param {mat3} out the receiving matrix\n   * @param {mat3} a the matrix to rotate\n   * @param {Number} rad the angle to rotate the matrix by\n   * @returns {mat3} out\n   */\n\n  function rotate$2(out, a, rad) {\n    var a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a10 = a[3],\n        a11 = a[4],\n        a12 = a[5],\n        a20 = a[6],\n        a21 = a[7],\n        a22 = a[8],\n        s = Math.sin(rad),\n        c = Math.cos(rad);\n    out[0] = c * a00 + s * a10;\n    out[1] = c * a01 + s * a11;\n    out[2] = c * a02 + s * a12;\n    out[3] = c * a10 - s * a00;\n    out[4] = c * a11 - s * a01;\n    out[5] = c * a12 - s * a02;\n    out[6] = a20;\n    out[7] = a21;\n    out[8] = a22;\n    return out;\n  }\n  /**\n   * Scales the mat3 by the dimensions in the given vec2\n   *\n   * @param {mat3} out the receiving matrix\n   * @param {mat3} a the matrix to rotate\n   * @param {vec2} v the vec2 to scale the matrix by\n   * @returns {mat3} out\n   **/\n\n  function scale$2(out, a, v) {\n    var x = v[0],\n        y = v[1];\n    out[0] = x * a[0];\n    out[1] = x * a[1];\n    out[2] = x * a[2];\n    out[3] = y * a[3];\n    out[4] = y * a[4];\n    out[5] = y * a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    return out;\n  }\n  /**\n   * Creates a matrix from a vector translation\n   * This is equivalent to (but much faster than):\n   *\n   *     mat3.identity(dest);\n   *     mat3.translate(dest, dest, vec);\n   *\n   * @param {mat3} out mat3 receiving operation result\n   * @param {vec2} v Translation vector\n   * @returns {mat3} out\n   */\n\n  function fromTranslation$1(out, v) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 1;\n    out[5] = 0;\n    out[6] = v[0];\n    out[7] = v[1];\n    out[8] = 1;\n    return out;\n  }\n  /**\n   * Creates a matrix from a given angle\n   * This is equivalent to (but much faster than):\n   *\n   *     mat3.identity(dest);\n   *     mat3.rotate(dest, dest, rad);\n   *\n   * @param {mat3} out mat3 receiving operation result\n   * @param {Number} rad the angle to rotate the matrix by\n   * @returns {mat3} out\n   */\n\n  function fromRotation$2(out, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad);\n    out[0] = c;\n    out[1] = s;\n    out[2] = 0;\n    out[3] = -s;\n    out[4] = c;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 1;\n    return out;\n  }\n  /**\n   * Creates a matrix from a vector scaling\n   * This is equivalent to (but much faster than):\n   *\n   *     mat3.identity(dest);\n   *     mat3.scale(dest, dest, vec);\n   *\n   * @param {mat3} out mat3 receiving operation result\n   * @param {vec2} v Scaling vector\n   * @returns {mat3} out\n   */\n\n  function fromScaling$2(out, v) {\n    out[0] = v[0];\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = v[1];\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 1;\n    return out;\n  }\n  /**\n   * Copies the values from a mat2d into a mat3\n   *\n   * @param {mat3} out the receiving matrix\n   * @param {mat2d} a the matrix to copy\n   * @returns {mat3} out\n   **/\n\n  function fromMat2d(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = 0;\n    out[3] = a[2];\n    out[4] = a[3];\n    out[5] = 0;\n    out[6] = a[4];\n    out[7] = a[5];\n    out[8] = 1;\n    return out;\n  }\n  /**\n  * Calculates a 3x3 matrix from the given quaternion\n  *\n  * @param {mat3} out mat3 receiving operation result\n  * @param {quat} q Quaternion to create matrix from\n  *\n  * @returns {mat3} out\n  */\n\n  function fromQuat(out, q) {\n    var x = q[0],\n        y = q[1],\n        z = q[2],\n        w = q[3];\n    var x2 = x + x;\n    var y2 = y + y;\n    var z2 = z + z;\n    var xx = x * x2;\n    var yx = y * x2;\n    var yy = y * y2;\n    var zx = z * x2;\n    var zy = z * y2;\n    var zz = z * z2;\n    var wx = w * x2;\n    var wy = w * y2;\n    var wz = w * z2;\n    out[0] = 1 - yy - zz;\n    out[3] = yx - wz;\n    out[6] = zx + wy;\n    out[1] = yx + wz;\n    out[4] = 1 - xx - zz;\n    out[7] = zy - wx;\n    out[2] = zx - wy;\n    out[5] = zy + wx;\n    out[8] = 1 - xx - yy;\n    return out;\n  }\n  /**\n  * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n  *\n  * @param {mat3} out mat3 receiving operation result\n  * @param {mat4} a Mat4 to derive the normal matrix from\n  *\n  * @returns {mat3} out\n  */\n\n  function normalFromMat4(out, a) {\n    var a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7];\n    var a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n    var a30 = a[12],\n        a31 = a[13],\n        a32 = a[14],\n        a33 = a[15];\n    var b00 = a00 * a11 - a01 * a10;\n    var b01 = a00 * a12 - a02 * a10;\n    var b02 = a00 * a13 - a03 * a10;\n    var b03 = a01 * a12 - a02 * a11;\n    var b04 = a01 * a13 - a03 * a11;\n    var b05 = a02 * a13 - a03 * a12;\n    var b06 = a20 * a31 - a21 * a30;\n    var b07 = a20 * a32 - a22 * a30;\n    var b08 = a20 * a33 - a23 * a30;\n    var b09 = a21 * a32 - a22 * a31;\n    var b10 = a21 * a33 - a23 * a31;\n    var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n    var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n    if (!det) {\n      return null;\n    }\n\n    det = 1.0 / det;\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n    out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n    out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n    out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n    out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n    out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n    out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n    out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n    out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n    return out;\n  }\n  /**\n   * Generates a 2D projection matrix with the given bounds\n   *\n   * @param {mat3} out mat3 frustum matrix will be written into\n   * @param {number} width Width of your gl context\n   * @param {number} height Height of gl context\n   * @returns {mat3} out\n   */\n\n  function projection(out, width, height) {\n    out[0] = 2 / width;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = -2 / height;\n    out[5] = 0;\n    out[6] = -1;\n    out[7] = 1;\n    out[8] = 1;\n    return out;\n  }\n  /**\n   * Returns a string representation of a mat3\n   *\n   * @param {mat3} a matrix to represent as a string\n   * @returns {String} string representation of the matrix\n   */\n\n  function str$2(a) {\n    return 'mat3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' + a[8] + ')';\n  }\n  /**\n   * Returns Frobenius norm of a mat3\n   *\n   * @param {mat3} a the matrix to calculate Frobenius norm of\n   * @returns {Number} Frobenius norm\n   */\n\n  function frob$2(a) {\n    return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2));\n  }\n  /**\n   * Adds two mat3's\n   *\n   * @param {mat3} out the receiving matrix\n   * @param {mat3} a the first operand\n   * @param {mat3} b the second operand\n   * @returns {mat3} out\n   */\n\n  function add$2(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    out[4] = a[4] + b[4];\n    out[5] = a[5] + b[5];\n    out[6] = a[6] + b[6];\n    out[7] = a[7] + b[7];\n    out[8] = a[8] + b[8];\n    return out;\n  }\n  /**\n   * Subtracts matrix b from matrix a\n   *\n   * @param {mat3} out the receiving matrix\n   * @param {mat3} a the first operand\n   * @param {mat3} b the second operand\n   * @returns {mat3} out\n   */\n\n  function subtract$2(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    out[3] = a[3] - b[3];\n    out[4] = a[4] - b[4];\n    out[5] = a[5] - b[5];\n    out[6] = a[6] - b[6];\n    out[7] = a[7] - b[7];\n    out[8] = a[8] - b[8];\n    return out;\n  }\n  /**\n   * Multiply each element of the matrix by a scalar.\n   *\n   * @param {mat3} out the receiving matrix\n   * @param {mat3} a the matrix to scale\n   * @param {Number} b amount to scale the matrix's elements by\n   * @returns {mat3} out\n   */\n\n  function multiplyScalar$2(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    out[4] = a[4] * b;\n    out[5] = a[5] * b;\n    out[6] = a[6] * b;\n    out[7] = a[7] * b;\n    out[8] = a[8] * b;\n    return out;\n  }\n  /**\n   * Adds two mat3's after multiplying each element of the second operand by a scalar value.\n   *\n   * @param {mat3} out the receiving vector\n   * @param {mat3} a the first operand\n   * @param {mat3} b the second operand\n   * @param {Number} scale the amount to scale b's elements by before adding\n   * @returns {mat3} out\n   */\n\n  function multiplyScalarAndAdd$2(out, a, b, scale) {\n    out[0] = a[0] + b[0] * scale;\n    out[1] = a[1] + b[1] * scale;\n    out[2] = a[2] + b[2] * scale;\n    out[3] = a[3] + b[3] * scale;\n    out[4] = a[4] + b[4] * scale;\n    out[5] = a[5] + b[5] * scale;\n    out[6] = a[6] + b[6] * scale;\n    out[7] = a[7] + b[7] * scale;\n    out[8] = a[8] + b[8] * scale;\n    return out;\n  }\n  /**\n   * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n   *\n   * @param {mat3} a The first matrix.\n   * @param {mat3} b The second matrix.\n   * @returns {Boolean} True if the matrices are equal, false otherwise.\n   */\n\n  function exactEquals$2(a, b) {\n    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n  }\n  /**\n   * Returns whether or not the matrices have approximately the same elements in the same position.\n   *\n   * @param {mat3} a The first matrix.\n   * @param {mat3} b The second matrix.\n   * @returns {Boolean} True if the matrices are equal, false otherwise.\n   */\n\n  function equals$3(a, b) {\n    var a0 = a[0],\n        a1 = a[1],\n        a2 = a[2],\n        a3 = a[3],\n        a4 = a[4],\n        a5 = a[5],\n        a6 = a[6],\n        a7 = a[7],\n        a8 = a[8];\n    var b0 = b[0],\n        b1 = b[1],\n        b2 = b[2],\n        b3 = b[3],\n        b4 = b[4],\n        b5 = b[5],\n        b6 = b[6],\n        b7 = b[7],\n        b8 = b[8];\n    return Math.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\n  }\n  /**\n   * Alias for {@link mat3.multiply}\n   * @function\n   */\n\n  var mul$2 = multiply$2;\n  /**\n   * Alias for {@link mat3.subtract}\n   * @function\n   */\n\n  var sub$2 = subtract$2;\n\n  var mat3 = /*#__PURE__*/Object.freeze({\n    create: create$2,\n    fromMat4: fromMat4,\n    clone: clone$2,\n    copy: copy$2,\n    fromValues: fromValues$2,\n    set: set$2,\n    identity: identity$2,\n    transpose: transpose$1,\n    invert: invert$2,\n    adjoint: adjoint$1,\n    determinant: determinant$2,\n    multiply: multiply$2,\n    translate: translate$1,\n    rotate: rotate$2,\n    scale: scale$2,\n    fromTranslation: fromTranslation$1,\n    fromRotation: fromRotation$2,\n    fromScaling: fromScaling$2,\n    fromMat2d: fromMat2d,\n    fromQuat: fromQuat,\n    normalFromMat4: normalFromMat4,\n    projection: projection,\n    str: str$2,\n    frob: frob$2,\n    add: add$2,\n    subtract: subtract$2,\n    multiplyScalar: multiplyScalar$2,\n    multiplyScalarAndAdd: multiplyScalarAndAdd$2,\n    exactEquals: exactEquals$2,\n    equals: equals$3,\n    mul: mul$2,\n    sub: sub$2\n  });\n\n  /**\n   * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\n   * @module mat4\n   */\n\n  /**\n   * Creates a new identity mat4\n   *\n   * @returns {mat4} a new 4x4 matrix\n   */\n\n  function create$3() {\n    var out = new ARRAY_TYPE(16);\n\n    if (ARRAY_TYPE != Float32Array) {\n      out[1] = 0;\n      out[2] = 0;\n      out[3] = 0;\n      out[4] = 0;\n      out[6] = 0;\n      out[7] = 0;\n      out[8] = 0;\n      out[9] = 0;\n      out[11] = 0;\n      out[12] = 0;\n      out[13] = 0;\n      out[14] = 0;\n    }\n\n    out[0] = 1;\n    out[5] = 1;\n    out[10] = 1;\n    out[15] = 1;\n    return out;\n  }\n  /**\n   * Creates a new mat4 initialized with values from an existing matrix\n   *\n   * @param {mat4} a matrix to clone\n   * @returns {mat4} a new 4x4 matrix\n   */\n\n  function clone$3(a) {\n    var out = new ARRAY_TYPE(16);\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n  }\n  /**\n   * Copy the values from one mat4 to another\n   *\n   * @param {mat4} out the receiving matrix\n   * @param {mat4} a the source matrix\n   * @returns {mat4} out\n   */\n\n  function copy$3(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n  }\n  /**\n   * Create a new mat4 with the given values\n   *\n   * @param {Number} m00 Component in column 0, row 0 position (index 0)\n   * @param {Number} m01 Component in column 0, row 1 position (index 1)\n   * @param {Number} m02 Component in column 0, row 2 position (index 2)\n   * @param {Number} m03 Component in column 0, row 3 position (index 3)\n   * @param {Number} m10 Component in column 1, row 0 position (index 4)\n   * @param {Number} m11 Component in column 1, row 1 position (index 5)\n   * @param {Number} m12 Component in column 1, row 2 position (index 6)\n   * @param {Number} m13 Component in column 1, row 3 position (index 7)\n   * @param {Number} m20 Component in column 2, row 0 position (index 8)\n   * @param {Number} m21 Component in column 2, row 1 position (index 9)\n   * @param {Number} m22 Component in column 2, row 2 position (index 10)\n   * @param {Number} m23 Component in column 2, row 3 position (index 11)\n   * @param {Number} m30 Component in column 3, row 0 position (index 12)\n   * @param {Number} m31 Component in column 3, row 1 position (index 13)\n   * @param {Number} m32 Component in column 3, row 2 position (index 14)\n   * @param {Number} m33 Component in column 3, row 3 position (index 15)\n   * @returns {mat4} A new mat4\n   */\n\n  function fromValues$3(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n    var out = new ARRAY_TYPE(16);\n    out[0] = m00;\n    out[1] = m01;\n    out[2] = m02;\n    out[3] = m03;\n    out[4] = m10;\n    out[5] = m11;\n    out[6] = m12;\n    out[7] = m13;\n    out[8] = m20;\n    out[9] = m21;\n    out[10] = m22;\n    out[11] = m23;\n    out[12] = m30;\n    out[13] = m31;\n    out[14] = m32;\n    out[15] = m33;\n    return out;\n  }\n  /**\n   * Set the components of a mat4 to the given values\n   *\n   * @param {mat4} out the receiving matrix\n   * @param {Number} m00 Component in column 0, row 0 position (index 0)\n   * @param {Number} m01 Component in column 0, row 1 position (index 1)\n   * @param {Number} m02 Component in column 0, row 2 position (index 2)\n   * @param {Number} m03 Component in column 0, row 3 position (index 3)\n   * @param {Number} m10 Component in column 1, row 0 position (index 4)\n   * @param {Number} m11 Component in column 1, row 1 position (index 5)\n   * @param {Number} m12 Component in column 1, row 2 position (index 6)\n   * @param {Number} m13 Component in column 1, row 3 position (index 7)\n   * @param {Number} m20 Component in column 2, row 0 position (index 8)\n   * @param {Number} m21 Component in column 2, row 1 position (index 9)\n   * @param {Number} m22 Component in column 2, row 2 position (index 10)\n   * @param {Number} m23 Component in column 2, row 3 position (index 11)\n   * @param {Number} m30 Component in column 3, row 0 position (index 12)\n   * @param {Number} m31 Component in column 3, row 1 position (index 13)\n   * @param {Number} m32 Component in column 3, row 2 position (index 14)\n   * @param {Number} m33 Component in column 3, row 3 position (index 15)\n   * @returns {mat4} out\n   */\n\n  function set$3(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n    out[0] = m00;\n    out[1] = m01;\n    out[2] = m02;\n    out[3] = m03;\n    out[4] = m10;\n    out[5] = m11;\n    out[6] = m12;\n    out[7] = m13;\n    out[8] = m20;\n    out[9] = m21;\n    out[10] = m22;\n    out[11] = m23;\n    out[12] = m30;\n    out[13] = m31;\n    out[14] = m32;\n    out[15] = m33;\n    return out;\n  }\n  /**\n   * Set a mat4 to the identity matrix\n   *\n   * @param {mat4} out the receiving matrix\n   * @returns {mat4} out\n   */\n\n  function identity$3(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n  }\n  /**\n   * Transpose the values of a mat4\n   *\n   * @param {mat4} out the receiving matrix\n   * @param {mat4} a the source matrix\n   * @returns {mat4} out\n   */\n\n  function transpose$2(out, a) {\n    // If we are transposing ourselves we can skip a few steps but have to cache some values\n    if (out === a) {\n      var a01 = a[1],\n          a02 = a[2],\n          a03 = a[3];\n      var a12 = a[6],\n          a13 = a[7];\n      var a23 = a[11];\n      out[1] = a[4];\n      out[2] = a[8];\n      out[3] = a[12];\n      out[4] = a01;\n      out[6] = a[9];\n      out[7] = a[13];\n      out[8] = a02;\n      out[9] = a12;\n      out[11] = a[14];\n      out[12] = a03;\n      out[13] = a13;\n      out[14] = a23;\n    } else {\n      out[0] = a[0];\n      out[1] = a[4];\n      out[2] = a[8];\n      out[3] = a[12];\n      out[4] = a[1];\n      out[5] = a[5];\n      out[6] = a[9];\n      out[7] = a[13];\n      out[8] = a[2];\n      out[9] = a[6];\n      out[10] = a[10];\n      out[11] = a[14];\n      out[12] = a[3];\n      out[13] = a[7];\n      out[14] = a[11];\n      out[15] = a[15];\n    }\n\n    return out;\n  }\n  /**\n   * Inverts a mat4\n   *\n   * @param {mat4} out the receiving matrix\n   * @param {mat4} a the source matrix\n   * @returns {mat4} out\n   */\n\n  function invert$3(out, a) {\n    var a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7];\n    var a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n    var a30 = a[12],\n        a31 = a[13],\n        a32 = a[14],\n        a33 = a[15];\n    var b00 = a00 * a11 - a01 * a10;\n    var b01 = a00 * a12 - a02 * a10;\n    var b02 = a00 * a13 - a03 * a10;\n    var b03 = a01 * a12 - a02 * a11;\n    var b04 = a01 * a13 - a03 * a11;\n    var b05 = a02 * a13 - a03 * a12;\n    var b06 = a20 * a31 - a21 * a30;\n    var b07 = a20 * a32 - a22 * a30;\n    var b08 = a20 * a33 - a23 * a30;\n    var b09 = a21 * a32 - a22 * a31;\n    var b10 = a21 * a33 - a23 * a31;\n    var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n    var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n    if (!det) {\n      return null;\n    }\n\n    det = 1.0 / det;\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n    out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n    out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n    out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n    out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n    out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n    out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n    out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n    out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n    out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n    out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n    out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n    out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n    out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n    out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n    out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n    return out;\n  }\n  /**\n   * Calculates the adjugate of a mat4\n   *\n   * @param {mat4} out the receiving matrix\n   * @param {mat4} a the source matrix\n   * @returns {mat4} out\n   */\n\n  function adjoint$2(out, a) {\n    var a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7];\n    var a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n    var a30 = a[12],\n        a31 = a[13],\n        a32 = a[14],\n        a33 = a[15];\n    out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n    out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n    out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n    out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n    out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n    out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n    out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n    out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n    out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n    out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n    out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n    out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n    out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n    out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n    out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n    out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n    return out;\n  }\n  /**\n   * Calculates the determinant of a mat4\n   *\n   * @param {mat4} a the source matrix\n   * @returns {Number} determinant of a\n   */\n\n  function determinant$3(a) {\n    var a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7];\n    var a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n    var a30 = a[12],\n        a31 = a[13],\n        a32 = a[14],\n        a33 = a[15];\n    var b00 = a00 * a11 - a01 * a10;\n    var b01 = a00 * a12 - a02 * a10;\n    var b02 = a00 * a13 - a03 * a10;\n    var b03 = a01 * a12 - a02 * a11;\n    var b04 = a01 * a13 - a03 * a11;\n    var b05 = a02 * a13 - a03 * a12;\n    var b06 = a20 * a31 - a21 * a30;\n    var b07 = a20 * a32 - a22 * a30;\n    var b08 = a20 * a33 - a23 * a30;\n    var b09 = a21 * a32 - a22 * a31;\n    var b10 = a21 * a33 - a23 * a31;\n    var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n    return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n  }\n  /**\n   * Multiplies two mat4s\n   *\n   * @param {mat4} out the receiving matrix\n   * @param {mat4} a the first operand\n   * @param {mat4} b the second operand\n   * @returns {mat4} out\n   */\n\n  function multiply$3(out, a, b) {\n    var a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7];\n    var a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n    var a30 = a[12],\n        a31 = a[13],\n        a32 = a[14],\n        a33 = a[15]; // Cache only the current line of the second matrix\n\n    var b0 = b[0],\n        b1 = b[1],\n        b2 = b[2],\n        b3 = b[3];\n    out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n    b0 = b[4];\n    b1 = b[5];\n    b2 = b[6];\n    b3 = b[7];\n    out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n    b0 = b[8];\n    b1 = b[9];\n    b2 = b[10];\n    b3 = b[11];\n    out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n    b0 = b[12];\n    b1 = b[13];\n    b2 = b[14];\n    b3 = b[15];\n    out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n    return out;\n  }\n  /**\n   * Translate a mat4 by the given vector\n   *\n   * @param {mat4} out the receiving matrix\n   * @param {mat4} a the matrix to translate\n   * @param {vec3} v vector to translate by\n   * @returns {mat4} out\n   */\n\n  function translate$2(out, a, v) {\n    var x = v[0],\n        y = v[1],\n        z = v[2];\n    var a00, a01, a02, a03;\n    var a10, a11, a12, a13;\n    var a20, a21, a22, a23;\n\n    if (a === out) {\n      out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n      out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n      out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n      out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n    } else {\n      a00 = a[0];\n      a01 = a[1];\n      a02 = a[2];\n      a03 = a[3];\n      a10 = a[4];\n      a11 = a[5];\n      a12 = a[6];\n      a13 = a[7];\n      a20 = a[8];\n      a21 = a[9];\n      a22 = a[10];\n      a23 = a[11];\n      out[0] = a00;\n      out[1] = a01;\n      out[2] = a02;\n      out[3] = a03;\n      out[4] = a10;\n      out[5] = a11;\n      out[6] = a12;\n      out[7] = a13;\n      out[8] = a20;\n      out[9] = a21;\n      out[10] = a22;\n      out[11] = a23;\n      out[12] = a00 * x + a10 * y + a20 * z + a[12];\n      out[13] = a01 * x + a11 * y + a21 * z + a[13];\n      out[14] = a02 * x + a12 * y + a22 * z + a[14];\n      out[15] = a03 * x + a13 * y + a23 * z + a[15];\n    }\n\n    return out;\n  }\n  /**\n   * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n   *\n   * @param {mat4} out the receiving matrix\n   * @param {mat4} a the matrix to scale\n   * @param {vec3} v the vec3 to scale the matrix by\n   * @returns {mat4} out\n   **/\n\n  function scale$3(out, a, v) {\n    var x = v[0],\n        y = v[1],\n        z = v[2];\n    out[0] = a[0] * x;\n    out[1] = a[1] * x;\n    out[2] = a[2] * x;\n    out[3] = a[3] * x;\n    out[4] = a[4] * y;\n    out[5] = a[5] * y;\n    out[6] = a[6] * y;\n    out[7] = a[7] * y;\n    out[8] = a[8] * z;\n    out[9] = a[9] * z;\n    out[10] = a[10] * z;\n    out[11] = a[11] * z;\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n  }\n  /**\n   * Rotates a mat4 by the given angle around the given axis\n   *\n   * @param {mat4} out the receiving matrix\n   * @param {mat4} a the matrix to rotate\n   * @param {Number} rad the angle to rotate the matrix by\n   * @param {vec3} axis the axis to rotate around\n   * @returns {mat4} out\n   */\n\n  function rotate$3(out, a, rad, axis) {\n    var x = axis[0],\n        y = axis[1],\n        z = axis[2];\n    var len = Math.sqrt(x * x + y * y + z * z);\n    var s, c, t;\n    var a00, a01, a02, a03;\n    var a10, a11, a12, a13;\n    var a20, a21, a22, a23;\n    var b00, b01, b02;\n    var b10, b11, b12;\n    var b20, b21, b22;\n\n    if (len < EPSILON) {\n      return null;\n    }\n\n    len = 1 / len;\n    x *= len;\n    y *= len;\n    z *= len;\n    s = Math.sin(rad);\n    c = Math.cos(rad);\n    t = 1 - c;\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11]; // Construct the elements of the rotation matrix\n\n    b00 = x * x * t + c;\n    b01 = y * x * t + z * s;\n    b02 = z * x * t - y * s;\n    b10 = x * y * t - z * s;\n    b11 = y * y * t + c;\n    b12 = z * y * t + x * s;\n    b20 = x * z * t + y * s;\n    b21 = y * z * t - x * s;\n    b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n    out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n    out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n    out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n    out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n    out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n    out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n    out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n    out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n    out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n    out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n    out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n    out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n    if (a !== out) {\n      // If the source and destination differ, copy the unchanged last row\n      out[12] = a[12];\n      out[13] = a[13];\n      out[14] = a[14];\n      out[15] = a[15];\n    }\n\n    return out;\n  }\n  /**\n   * Rotates a matrix by the given angle around the X axis\n   *\n   * @param {mat4} out the receiving matrix\n   * @param {mat4} a the matrix to rotate\n   * @param {Number} rad the angle to rotate the matrix by\n   * @returns {mat4} out\n   */\n\n  function rotateX(out, a, rad) {\n    var s = Math.sin(rad);\n    var c = Math.cos(rad);\n    var a10 = a[4];\n    var a11 = a[5];\n    var a12 = a[6];\n    var a13 = a[7];\n    var a20 = a[8];\n    var a21 = a[9];\n    var a22 = a[10];\n    var a23 = a[11];\n\n    if (a !== out) {\n      // If the source and destination differ, copy the unchanged rows\n      out[0] = a[0];\n      out[1] = a[1];\n      out[2] = a[2];\n      out[3] = a[3];\n      out[12] = a[12];\n      out[13] = a[13];\n      out[14] = a[14];\n      out[15] = a[15];\n    } // Perform axis-specific matrix multiplication\n\n\n    out[4] = a10 * c + a20 * s;\n    out[5] = a11 * c + a21 * s;\n    out[6] = a12 * c + a22 * s;\n    out[7] = a13 * c + a23 * s;\n    out[8] = a20 * c - a10 * s;\n    out[9] = a21 * c - a11 * s;\n    out[10] = a22 * c - a12 * s;\n    out[11] = a23 * c - a13 * s;\n    return out;\n  }\n  /**\n   * Rotates a matrix by the given angle around the Y axis\n   *\n   * @param {mat4} out the receiving matrix\n   * @param {mat4} a the matrix to rotate\n   * @param {Number} rad the angle to rotate the matrix by\n   * @returns {mat4} out\n   */\n\n  function rotateY(out, a, rad) {\n    var s = Math.sin(rad);\n    var c = Math.cos(rad);\n    var a00 = a[0];\n    var a01 = a[1];\n    var a02 = a[2];\n    var a03 = a[3];\n    var a20 = a[8];\n    var a21 = a[9];\n    var a22 = a[10];\n    var a23 = a[11];\n\n    if (a !== out) {\n      // If the source and destination differ, copy the unchanged rows\n      out[4] = a[4];\n      out[5] = a[5];\n      out[6] = a[6];\n      out[7] = a[7];\n      out[12] = a[12];\n      out[13] = a[13];\n      out[14] = a[14];\n      out[15] = a[15];\n    } // Perform axis-specific matrix multiplication\n\n\n    out[0] = a00 * c - a20 * s;\n    out[1] = a01 * c - a21 * s;\n    out[2] = a02 * c - a22 * s;\n    out[3] = a03 * c - a23 * s;\n    out[8] = a00 * s + a20 * c;\n    out[9] = a01 * s + a21 * c;\n    out[10] = a02 * s + a22 * c;\n    out[11] = a03 * s + a23 * c;\n    return out;\n  }\n  /**\n   * Rotates a matrix by the given angle around the Z axis\n   *\n   * @param {mat4} out the receiving matrix\n   * @param {mat4} a the matrix to rotate\n   * @param {Number} rad the angle to rotate the matrix by\n   * @returns {mat4} out\n   */\n\n  function rotateZ(out, a, rad) {\n    var s = Math.sin(rad);\n    var c = Math.cos(rad);\n    var a00 = a[0];\n    var a01 = a[1];\n    var a02 = a[2];\n    var a03 = a[3];\n    var a10 = a[4];\n    var a11 = a[5];\n    var a12 = a[6];\n    var a13 = a[7];\n\n    if (a !== out) {\n      // If the source and destination differ, copy the unchanged last row\n      out[8] = a[8];\n      out[9] = a[9];\n      out[10] = a[10];\n      out[11] = a[11];\n      out[12] = a[12];\n      out[13] = a[13];\n      out[14] = a[14];\n      out[15] = a[15];\n    } // Perform axis-specific matrix multiplication\n\n\n    out[0] = a00 * c + a10 * s;\n    out[1] = a01 * c + a11 * s;\n    out[2] = a02 * c + a12 * s;\n    out[3] = a03 * c + a13 * s;\n    out[4] = a10 * c - a00 * s;\n    out[5] = a11 * c - a01 * s;\n    out[6] = a12 * c - a02 * s;\n    out[7] = a13 * c - a03 * s;\n    return out;\n  }\n  /**\n   * Creates a matrix from a vector translation\n   * This is equivalent to (but much faster than):\n   *\n   *     mat4.identity(dest);\n   *     mat4.translate(dest, dest, vec);\n   *\n   * @param {mat4} out mat4 receiving operation result\n   * @param {vec3} v Translation vector\n   * @returns {mat4} out\n   */\n\n  function fromTranslation$2(out, v) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = v[0];\n    out[13] = v[1];\n    out[14] = v[2];\n    out[15] = 1;\n    return out;\n  }\n  /**\n   * Creates a matrix from a vector scaling\n   * This is equivalent to (but much faster than):\n   *\n   *     mat4.identity(dest);\n   *     mat4.scale(dest, dest, vec);\n   *\n   * @param {mat4} out mat4 receiving operation result\n   * @param {vec3} v Scaling vector\n   * @returns {mat4} out\n   */\n\n  function fromScaling$3(out, v) {\n    out[0] = v[0];\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = v[1];\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = v[2];\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n  }\n  /**\n   * Creates a matrix from a given angle around a given axis\n   * This is equivalent to (but much faster than):\n   *\n   *     mat4.identity(dest);\n   *     mat4.rotate(dest, dest, rad, axis);\n   *\n   * @param {mat4} out mat4 receiving operation result\n   * @param {Number} rad the angle to rotate the matrix by\n   * @param {vec3} axis the axis to rotate around\n   * @returns {mat4} out\n   */\n\n  function fromRotation$3(out, rad, axis) {\n    var x = axis[0],\n        y = axis[1],\n        z = axis[2];\n    var len = Math.sqrt(x * x + y * y + z * z);\n    var s, c, t;\n\n    if (len < EPSILON) {\n      return null;\n    }\n\n    len = 1 / len;\n    x *= len;\n    y *= len;\n    z *= len;\n    s = Math.sin(rad);\n    c = Math.cos(rad);\n    t = 1 - c; // Perform rotation-specific matrix multiplication\n\n    out[0] = x * x * t + c;\n    out[1] = y * x * t + z * s;\n    out[2] = z * x * t - y * s;\n    out[3] = 0;\n    out[4] = x * y * t - z * s;\n    out[5] = y * y * t + c;\n    out[6] = z * y * t + x * s;\n    out[7] = 0;\n    out[8] = x * z * t + y * s;\n    out[9] = y * z * t - x * s;\n    out[10] = z * z * t + c;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n  }\n  /**\n   * Creates a matrix from the given angle around the X axis\n   * This is equivalent to (but much faster than):\n   *\n   *     mat4.identity(dest);\n   *     mat4.rotateX(dest, dest, rad);\n   *\n   * @param {mat4} out mat4 receiving operation result\n   * @param {Number} rad the angle to rotate the matrix by\n   * @returns {mat4} out\n   */\n\n  function fromXRotation(out, rad) {\n    var s = Math.sin(rad);\n    var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = c;\n    out[6] = s;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = -s;\n    out[10] = c;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n  }\n  /**\n   * Creates a matrix from the given angle around the Y axis\n   * This is equivalent to (but much faster than):\n   *\n   *     mat4.identity(dest);\n   *     mat4.rotateY(dest, dest, rad);\n   *\n   * @param {mat4} out mat4 receiving operation result\n   * @param {Number} rad the angle to rotate the matrix by\n   * @returns {mat4} out\n   */\n\n  function fromYRotation(out, rad) {\n    var s = Math.sin(rad);\n    var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n    out[0] = c;\n    out[1] = 0;\n    out[2] = -s;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = s;\n    out[9] = 0;\n    out[10] = c;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n  }\n  /**\n   * Creates a matrix from the given angle around the Z axis\n   * This is equivalent to (but much faster than):\n   *\n   *     mat4.identity(dest);\n   *     mat4.rotateZ(dest, dest, rad);\n   *\n   * @param {mat4} out mat4 receiving operation result\n   * @param {Number} rad the angle to rotate the matrix by\n   * @returns {mat4} out\n   */\n\n  function fromZRotation(out, rad) {\n    var s = Math.sin(rad);\n    var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n    out[0] = c;\n    out[1] = s;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = -s;\n    out[5] = c;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n  }\n  /**\n   * Creates a matrix from a quaternion rotation and vector translation\n   * This is equivalent to (but much faster than):\n   *\n   *     mat4.identity(dest);\n   *     mat4.translate(dest, vec);\n   *     let quatMat = mat4.create();\n   *     quat4.toMat4(quat, quatMat);\n   *     mat4.multiply(dest, quatMat);\n   *\n   * @param {mat4} out mat4 receiving operation result\n   * @param {quat4} q Rotation quaternion\n   * @param {vec3} v Translation vector\n   * @returns {mat4} out\n   */\n\n  function fromRotationTranslation(out, q, v) {\n    // Quaternion math\n    var x = q[0],\n        y = q[1],\n        z = q[2],\n        w = q[3];\n    var x2 = x + x;\n    var y2 = y + y;\n    var z2 = z + z;\n    var xx = x * x2;\n    var xy = x * y2;\n    var xz = x * z2;\n    var yy = y * y2;\n    var yz = y * z2;\n    var zz = z * z2;\n    var wx = w * x2;\n    var wy = w * y2;\n    var wz = w * z2;\n    out[0] = 1 - (yy + zz);\n    out[1] = xy + wz;\n    out[2] = xz - wy;\n    out[3] = 0;\n    out[4] = xy - wz;\n    out[5] = 1 - (xx + zz);\n    out[6] = yz + wx;\n    out[7] = 0;\n    out[8] = xz + wy;\n    out[9] = yz - wx;\n    out[10] = 1 - (xx + yy);\n    out[11] = 0;\n    out[12] = v[0];\n    out[13] = v[1];\n    out[14] = v[2];\n    out[15] = 1;\n    return out;\n  }\n  /**\n   * Creates a new mat4 from a dual quat.\n   *\n   * @param {mat4} out Matrix\n   * @param {quat2} a Dual Quaternion\n   * @returns {mat4} mat4 receiving operation result\n   */\n\n  function fromQuat2(out, a) {\n    var translation = new ARRAY_TYPE(3);\n    var bx = -a[0],\n        by = -a[1],\n        bz = -a[2],\n        bw = a[3],\n        ax = a[4],\n        ay = a[5],\n        az = a[6],\n        aw = a[7];\n    var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n    if (magnitude > 0) {\n      translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n      translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n      translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n    } else {\n      translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n      translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n      translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n    }\n\n    fromRotationTranslation(out, a, translation);\n    return out;\n  }\n  /**\n   * Returns the translation vector component of a transformation\n   *  matrix. If a matrix is built with fromRotationTranslation,\n   *  the returned vector will be the same as the translation vector\n   *  originally supplied.\n   * @param  {vec3} out Vector to receive translation component\n   * @param  {mat4} mat Matrix to be decomposed (input)\n   * @return {vec3} out\n   */\n\n  function getTranslation(out, mat) {\n    out[0] = mat[12];\n    out[1] = mat[13];\n    out[2] = mat[14];\n    return out;\n  }\n  /**\n   * Returns the scaling factor component of a transformation\n   *  matrix. If a matrix is built with fromRotationTranslationScale\n   *  with a normalized Quaternion paramter, the returned vector will be\n   *  the same as the scaling vector\n   *  originally supplied.\n   * @param  {vec3} out Vector to receive scaling factor component\n   * @param  {mat4} mat Matrix to be decomposed (input)\n   * @return {vec3} out\n   */\n\n  function getScaling(out, mat) {\n    var m11 = mat[0];\n    var m12 = mat[1];\n    var m13 = mat[2];\n    var m21 = mat[4];\n    var m22 = mat[5];\n    var m23 = mat[6];\n    var m31 = mat[8];\n    var m32 = mat[9];\n    var m33 = mat[10];\n    out[0] = Math.sqrt(m11 * m11 + m12 * m12 + m13 * m13);\n    out[1] = Math.sqrt(m21 * m21 + m22 * m22 + m23 * m23);\n    out[2] = Math.sqrt(m31 * m31 + m32 * m32 + m33 * m33);\n    return out;\n  }\n  /**\n   * Returns a quaternion representing the rotational component\n   *  of a transformation matrix. If a matrix is built with\n   *  fromRotationTranslation, the returned quaternion will be the\n   *  same as the quaternion originally supplied.\n   * @param {quat} out Quaternion to receive the rotation component\n   * @param {mat4} mat Matrix to be decomposed (input)\n   * @return {quat} out\n   */\n\n  function getRotation(out, mat) {\n    // Algorithm taken from http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n    var trace = mat[0] + mat[5] + mat[10];\n    var S = 0;\n\n    if (trace > 0) {\n      S = Math.sqrt(trace + 1.0) * 2;\n      out[3] = 0.25 * S;\n      out[0] = (mat[6] - mat[9]) / S;\n      out[1] = (mat[8] - mat[2]) / S;\n      out[2] = (mat[1] - mat[4]) / S;\n    } else if (mat[0] > mat[5] && mat[0] > mat[10]) {\n      S = Math.sqrt(1.0 + mat[0] - mat[5] - mat[10]) * 2;\n      out[3] = (mat[6] - mat[9]) / S;\n      out[0] = 0.25 * S;\n      out[1] = (mat[1] + mat[4]) / S;\n      out[2] = (mat[8] + mat[2]) / S;\n    } else if (mat[5] > mat[10]) {\n      S = Math.sqrt(1.0 + mat[5] - mat[0] - mat[10]) * 2;\n      out[3] = (mat[8] - mat[2]) / S;\n      out[0] = (mat[1] + mat[4]) / S;\n      out[1] = 0.25 * S;\n      out[2] = (mat[6] + mat[9]) / S;\n    } else {\n      S = Math.sqrt(1.0 + mat[10] - mat[0] - mat[5]) * 2;\n      out[3] = (mat[1] - mat[4]) / S;\n      out[0] = (mat[8] + mat[2]) / S;\n      out[1] = (mat[6] + mat[9]) / S;\n      out[2] = 0.25 * S;\n    }\n\n    return out;\n  }\n  /**\n   * Creates a matrix from a quaternion rotation, vector translation and vector scale\n   * This is equivalent to (but much faster than):\n   *\n   *     mat4.identity(dest);\n   *     mat4.translate(dest, vec);\n   *     let quatMat = mat4.create();\n   *     quat4.toMat4(quat, quatMat);\n   *     mat4.multiply(dest, quatMat);\n   *     mat4.scale(dest, scale)\n   *\n   * @param {mat4} out mat4 receiving operation result\n   * @param {quat4} q Rotation quaternion\n   * @param {vec3} v Translation vector\n   * @param {vec3} s Scaling vector\n   * @returns {mat4} out\n   */\n\n  function fromRotationTranslationScale(out, q, v, s) {\n    // Quaternion math\n    var x = q[0],\n        y = q[1],\n        z = q[2],\n        w = q[3];\n    var x2 = x + x;\n    var y2 = y + y;\n    var z2 = z + z;\n    var xx = x * x2;\n    var xy = x * y2;\n    var xz = x * z2;\n    var yy = y * y2;\n    var yz = y * z2;\n    var zz = z * z2;\n    var wx = w * x2;\n    var wy = w * y2;\n    var wz = w * z2;\n    var sx = s[0];\n    var sy = s[1];\n    var sz = s[2];\n    out[0] = (1 - (yy + zz)) * sx;\n    out[1] = (xy + wz) * sx;\n    out[2] = (xz - wy) * sx;\n    out[3] = 0;\n    out[4] = (xy - wz) * sy;\n    out[5] = (1 - (xx + zz)) * sy;\n    out[6] = (yz + wx) * sy;\n    out[7] = 0;\n    out[8] = (xz + wy) * sz;\n    out[9] = (yz - wx) * sz;\n    out[10] = (1 - (xx + yy)) * sz;\n    out[11] = 0;\n    out[12] = v[0];\n    out[13] = v[1];\n    out[14] = v[2];\n    out[15] = 1;\n    return out;\n  }\n  /**\n   * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n   * This is equivalent to (but much faster than):\n   *\n   *     mat4.identity(dest);\n   *     mat4.translate(dest, vec);\n   *     mat4.translate(dest, origin);\n   *     let quatMat = mat4.create();\n   *     quat4.toMat4(quat, quatMat);\n   *     mat4.multiply(dest, quatMat);\n   *     mat4.scale(dest, scale)\n   *     mat4.translate(dest, negativeOrigin);\n   *\n   * @param {mat4} out mat4 receiving operation result\n   * @param {quat4} q Rotation quaternion\n   * @param {vec3} v Translation vector\n   * @param {vec3} s Scaling vector\n   * @param {vec3} o The origin vector around which to scale and rotate\n   * @returns {mat4} out\n   */\n\n  function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n    // Quaternion math\n    var x = q[0],\n        y = q[1],\n        z = q[2],\n        w = q[3];\n    var x2 = x + x;\n    var y2 = y + y;\n    var z2 = z + z;\n    var xx = x * x2;\n    var xy = x * y2;\n    var xz = x * z2;\n    var yy = y * y2;\n    var yz = y * z2;\n    var zz = z * z2;\n    var wx = w * x2;\n    var wy = w * y2;\n    var wz = w * z2;\n    var sx = s[0];\n    var sy = s[1];\n    var sz = s[2];\n    var ox = o[0];\n    var oy = o[1];\n    var oz = o[2];\n    var out0 = (1 - (yy + zz)) * sx;\n    var out1 = (xy + wz) * sx;\n    var out2 = (xz - wy) * sx;\n    var out4 = (xy - wz) * sy;\n    var out5 = (1 - (xx + zz)) * sy;\n    var out6 = (yz + wx) * sy;\n    var out8 = (xz + wy) * sz;\n    var out9 = (yz - wx) * sz;\n    var out10 = (1 - (xx + yy)) * sz;\n    out[0] = out0;\n    out[1] = out1;\n    out[2] = out2;\n    out[3] = 0;\n    out[4] = out4;\n    out[5] = out5;\n    out[6] = out6;\n    out[7] = 0;\n    out[8] = out8;\n    out[9] = out9;\n    out[10] = out10;\n    out[11] = 0;\n    out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n    out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n    out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n    out[15] = 1;\n    return out;\n  }\n  /**\n   * Calculates a 4x4 matrix from the given quaternion\n   *\n   * @param {mat4} out mat4 receiving operation result\n   * @param {quat} q Quaternion to create matrix from\n   *\n   * @returns {mat4} out\n   */\n\n  function fromQuat$1(out, q) {\n    var x = q[0],\n        y = q[1],\n        z = q[2],\n        w = q[3];\n    var x2 = x + x;\n    var y2 = y + y;\n    var z2 = z + z;\n    var xx = x * x2;\n    var yx = y * x2;\n    var yy = y * y2;\n    var zx = z * x2;\n    var zy = z * y2;\n    var zz = z * z2;\n    var wx = w * x2;\n    var wy = w * y2;\n    var wz = w * z2;\n    out[0] = 1 - yy - zz;\n    out[1] = yx + wz;\n    out[2] = zx - wy;\n    out[3] = 0;\n    out[4] = yx - wz;\n    out[5] = 1 - xx - zz;\n    out[6] = zy + wx;\n    out[7] = 0;\n    out[8] = zx + wy;\n    out[9] = zy - wx;\n    out[10] = 1 - xx - yy;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n  }\n  /**\n   * Generates a frustum matrix with the given bounds\n   *\n   * @param {mat4} out mat4 frustum matrix will be written into\n   * @param {Number} left Left bound of the frustum\n   * @param {Number} right Right bound of the frustum\n   * @param {Number} bottom Bottom bound of the frustum\n   * @param {Number} top Top bound of the frustum\n   * @param {Number} near Near bound of the frustum\n   * @param {Number} far Far bound of the frustum\n   * @returns {mat4} out\n   */\n\n  function frustum(out, left, right, bottom, top, near, far) {\n    var rl = 1 / (right - left);\n    var tb = 1 / (top - bottom);\n    var nf = 1 / (near - far);\n    out[0] = near * 2 * rl;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = near * 2 * tb;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = (right + left) * rl;\n    out[9] = (top + bottom) * tb;\n    out[10] = (far + near) * nf;\n    out[11] = -1;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = far * near * 2 * nf;\n    out[15] = 0;\n    return out;\n  }\n  /**\n   * Generates a perspective projection matrix with the given bounds.\n   * Passing null/undefined/no value for far will generate infinite projection matrix.\n   *\n   * @param {mat4} out mat4 frustum matrix will be written into\n   * @param {number} fovy Vertical field of view in radians\n   * @param {number} aspect Aspect ratio. typically viewport width/height\n   * @param {number} near Near bound of the frustum\n   * @param {number} far Far bound of the frustum, can be null or Infinity\n   * @returns {mat4} out\n   */\n\n  function perspective(out, fovy, aspect, near, far) {\n    var f = 1.0 / Math.tan(fovy / 2),\n        nf;\n    out[0] = f / aspect;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = f;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = -1;\n    out[12] = 0;\n    out[13] = 0;\n    out[15] = 0;\n\n    if (far != null && far !== Infinity) {\n      nf = 1 / (near - far);\n      out[10] = (far + near) * nf;\n      out[14] = 2 * far * near * nf;\n    } else {\n      out[10] = -1;\n      out[14] = -2 * near;\n    }\n\n    return out;\n  }\n  /**\n   * Generates a perspective projection matrix with the given field of view.\n   * This is primarily useful for generating projection matrices to be used\n   * with the still experiemental WebVR API.\n   *\n   * @param {mat4} out mat4 frustum matrix will be written into\n   * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n   * @param {number} near Near bound of the frustum\n   * @param {number} far Far bound of the frustum\n   * @returns {mat4} out\n   */\n\n  function perspectiveFromFieldOfView(out, fov, near, far) {\n    var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n    var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n    var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n    var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n    var xScale = 2.0 / (leftTan + rightTan);\n    var yScale = 2.0 / (upTan + downTan);\n    out[0] = xScale;\n    out[1] = 0.0;\n    out[2] = 0.0;\n    out[3] = 0.0;\n    out[4] = 0.0;\n    out[5] = yScale;\n    out[6] = 0.0;\n    out[7] = 0.0;\n    out[8] = -((leftTan - rightTan) * xScale * 0.5);\n    out[9] = (upTan - downTan) * yScale * 0.5;\n    out[10] = far / (near - far);\n    out[11] = -1.0;\n    out[12] = 0.0;\n    out[13] = 0.0;\n    out[14] = far * near / (near - far);\n    out[15] = 0.0;\n    return out;\n  }\n  /**\n   * Generates a orthogonal projection matrix with the given bounds\n   *\n   * @param {mat4} out mat4 frustum matrix will be written into\n   * @param {number} left Left bound of the frustum\n   * @param {number} right Right bound of the frustum\n   * @param {number} bottom Bottom bound of the frustum\n   * @param {number} top Top bound of the frustum\n   * @param {number} near Near bound of the frustum\n   * @param {number} far Far bound of the frustum\n   * @returns {mat4} out\n   */\n\n  function ortho(out, left, right, bottom, top, near, far) {\n    var lr = 1 / (left - right);\n    var bt = 1 / (bottom - top);\n    var nf = 1 / (near - far);\n    out[0] = -2 * lr;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = -2 * bt;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 2 * nf;\n    out[11] = 0;\n    out[12] = (left + right) * lr;\n    out[13] = (top + bottom) * bt;\n    out[14] = (far + near) * nf;\n    out[15] = 1;\n    return out;\n  }\n  /**\n   * Generates a look-at matrix with the given eye position, focal point, and up axis.\n   * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\n   *\n   * @param {mat4} out mat4 frustum matrix will be written into\n   * @param {vec3} eye Position of the viewer\n   * @param {vec3} center Point the viewer is looking at\n   * @param {vec3} up vec3 pointing up\n   * @returns {mat4} out\n   */\n\n  function lookAt(out, eye, center, up) {\n    var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n    var eyex = eye[0];\n    var eyey = eye[1];\n    var eyez = eye[2];\n    var upx = up[0];\n    var upy = up[1];\n    var upz = up[2];\n    var centerx = center[0];\n    var centery = center[1];\n    var centerz = center[2];\n\n    if (Math.abs(eyex - centerx) < EPSILON && Math.abs(eyey - centery) < EPSILON && Math.abs(eyez - centerz) < EPSILON) {\n      return identity$3(out);\n    }\n\n    z0 = eyex - centerx;\n    z1 = eyey - centery;\n    z2 = eyez - centerz;\n    len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n    x0 = upy * z2 - upz * z1;\n    x1 = upz * z0 - upx * z2;\n    x2 = upx * z1 - upy * z0;\n    len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\n\n    if (!len) {\n      x0 = 0;\n      x1 = 0;\n      x2 = 0;\n    } else {\n      len = 1 / len;\n      x0 *= len;\n      x1 *= len;\n      x2 *= len;\n    }\n\n    y0 = z1 * x2 - z2 * x1;\n    y1 = z2 * x0 - z0 * x2;\n    y2 = z0 * x1 - z1 * x0;\n    len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\n\n    if (!len) {\n      y0 = 0;\n      y1 = 0;\n      y2 = 0;\n    } else {\n      len = 1 / len;\n      y0 *= len;\n      y1 *= len;\n      y2 *= len;\n    }\n\n    out[0] = x0;\n    out[1] = y0;\n    out[2] = z0;\n    out[3] = 0;\n    out[4] = x1;\n    out[5] = y1;\n    out[6] = z1;\n    out[7] = 0;\n    out[8] = x2;\n    out[9] = y2;\n    out[10] = z2;\n    out[11] = 0;\n    out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n    out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n    out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n    out[15] = 1;\n    return out;\n  }\n  /**\n   * Generates a matrix that makes something look at something else.\n   *\n   * @param {mat4} out mat4 frustum matrix will be written into\n   * @param {vec3} eye Position of the viewer\n   * @param {vec3} center Point the viewer is looking at\n   * @param {vec3} up vec3 pointing up\n   * @returns {mat4} out\n   */\n\n  function targetTo(out, eye, target, up) {\n    var eyex = eye[0],\n        eyey = eye[1],\n        eyez = eye[2],\n        upx = up[0],\n        upy = up[1],\n        upz = up[2];\n    var z0 = eyex - target[0],\n        z1 = eyey - target[1],\n        z2 = eyez - target[2];\n    var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n    if (len > 0) {\n      len = 1 / Math.sqrt(len);\n      z0 *= len;\n      z1 *= len;\n      z2 *= len;\n    }\n\n    var x0 = upy * z2 - upz * z1,\n        x1 = upz * z0 - upx * z2,\n        x2 = upx * z1 - upy * z0;\n    len = x0 * x0 + x1 * x1 + x2 * x2;\n\n    if (len > 0) {\n      len = 1 / Math.sqrt(len);\n      x0 *= len;\n      x1 *= len;\n      x2 *= len;\n    }\n\n    out[0] = x0;\n    out[1] = x1;\n    out[2] = x2;\n    out[3] = 0;\n    out[4] = z1 * x2 - z2 * x1;\n    out[5] = z2 * x0 - z0 * x2;\n    out[6] = z0 * x1 - z1 * x0;\n    out[7] = 0;\n    out[8] = z0;\n    out[9] = z1;\n    out[10] = z2;\n    out[11] = 0;\n    out[12] = eyex;\n    out[13] = eyey;\n    out[14] = eyez;\n    out[15] = 1;\n    return out;\n  }\n  /**\n   * Returns a string representation of a mat4\n   *\n   * @param {mat4} a matrix to represent as a string\n   * @returns {String} string representation of the matrix\n   */\n\n  function str$3(a) {\n    return 'mat4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' + a[8] + ', ' + a[9] + ', ' + a[10] + ', ' + a[11] + ', ' + a[12] + ', ' + a[13] + ', ' + a[14] + ', ' + a[15] + ')';\n  }\n  /**\n   * Returns Frobenius norm of a mat4\n   *\n   * @param {mat4} a the matrix to calculate Frobenius norm of\n   * @returns {Number} Frobenius norm\n   */\n\n  function frob$3(a) {\n    return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2) + Math.pow(a[9], 2) + Math.pow(a[10], 2) + Math.pow(a[11], 2) + Math.pow(a[12], 2) + Math.pow(a[13], 2) + Math.pow(a[14], 2) + Math.pow(a[15], 2));\n  }\n  /**\n   * Adds two mat4's\n   *\n   * @param {mat4} out the receiving matrix\n   * @param {mat4} a the first operand\n   * @param {mat4} b the second operand\n   * @returns {mat4} out\n   */\n\n  function add$3(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    out[4] = a[4] + b[4];\n    out[5] = a[5] + b[5];\n    out[6] = a[6] + b[6];\n    out[7] = a[7] + b[7];\n    out[8] = a[8] + b[8];\n    out[9] = a[9] + b[9];\n    out[10] = a[10] + b[10];\n    out[11] = a[11] + b[11];\n    out[12] = a[12] + b[12];\n    out[13] = a[13] + b[13];\n    out[14] = a[14] + b[14];\n    out[15] = a[15] + b[15];\n    return out;\n  }\n  /**\n   * Subtracts matrix b from matrix a\n   *\n   * @param {mat4} out the receiving matrix\n   * @param {mat4} a the first operand\n   * @param {mat4} b the second operand\n   * @returns {mat4} out\n   */\n\n  function subtract$3(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    out[3] = a[3] - b[3];\n    out[4] = a[4] - b[4];\n    out[5] = a[5] - b[5];\n    out[6] = a[6] - b[6];\n    out[7] = a[7] - b[7];\n    out[8] = a[8] - b[8];\n    out[9] = a[9] - b[9];\n    out[10] = a[10] - b[10];\n    out[11] = a[11] - b[11];\n    out[12] = a[12] - b[12];\n    out[13] = a[13] - b[13];\n    out[14] = a[14] - b[14];\n    out[15] = a[15] - b[15];\n    return out;\n  }\n  /**\n   * Multiply each element of the matrix by a scalar.\n   *\n   * @param {mat4} out the receiving matrix\n   * @param {mat4} a the matrix to scale\n   * @param {Number} b amount to scale the matrix's elements by\n   * @returns {mat4} out\n   */\n\n  function multiplyScalar$3(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    out[4] = a[4] * b;\n    out[5] = a[5] * b;\n    out[6] = a[6] * b;\n    out[7] = a[7] * b;\n    out[8] = a[8] * b;\n    out[9] = a[9] * b;\n    out[10] = a[10] * b;\n    out[11] = a[11] * b;\n    out[12] = a[12] * b;\n    out[13] = a[13] * b;\n    out[14] = a[14] * b;\n    out[15] = a[15] * b;\n    return out;\n  }\n  /**\n   * Adds two mat4's after multiplying each element of the second operand by a scalar value.\n   *\n   * @param {mat4} out the receiving vector\n   * @param {mat4} a the first operand\n   * @param {mat4} b the second operand\n   * @param {Number} scale the amount to scale b's elements by before adding\n   * @returns {mat4} out\n   */\n\n  function multiplyScalarAndAdd$3(out, a, b, scale) {\n    out[0] = a[0] + b[0] * scale;\n    out[1] = a[1] + b[1] * scale;\n    out[2] = a[2] + b[2] * scale;\n    out[3] = a[3] + b[3] * scale;\n    out[4] = a[4] + b[4] * scale;\n    out[5] = a[5] + b[5] * scale;\n    out[6] = a[6] + b[6] * scale;\n    out[7] = a[7] + b[7] * scale;\n    out[8] = a[8] + b[8] * scale;\n    out[9] = a[9] + b[9] * scale;\n    out[10] = a[10] + b[10] * scale;\n    out[11] = a[11] + b[11] * scale;\n    out[12] = a[12] + b[12] * scale;\n    out[13] = a[13] + b[13] * scale;\n    out[14] = a[14] + b[14] * scale;\n    out[15] = a[15] + b[15] * scale;\n    return out;\n  }\n  /**\n   * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n   *\n   * @param {mat4} a The first matrix.\n   * @param {mat4} b The second matrix.\n   * @returns {Boolean} True if the matrices are equal, false otherwise.\n   */\n\n  function exactEquals$3(a, b) {\n    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n  }\n  /**\n   * Returns whether or not the matrices have approximately the same elements in the same position.\n   *\n   * @param {mat4} a The first matrix.\n   * @param {mat4} b The second matrix.\n   * @returns {Boolean} True if the matrices are equal, false otherwise.\n   */\n\n  function equals$4(a, b) {\n    var a0 = a[0],\n        a1 = a[1],\n        a2 = a[2],\n        a3 = a[3];\n    var a4 = a[4],\n        a5 = a[5],\n        a6 = a[6],\n        a7 = a[7];\n    var a8 = a[8],\n        a9 = a[9],\n        a10 = a[10],\n        a11 = a[11];\n    var a12 = a[12],\n        a13 = a[13],\n        a14 = a[14],\n        a15 = a[15];\n    var b0 = b[0],\n        b1 = b[1],\n        b2 = b[2],\n        b3 = b[3];\n    var b4 = b[4],\n        b5 = b[5],\n        b6 = b[6],\n        b7 = b[7];\n    var b8 = b[8],\n        b9 = b[9],\n        b10 = b[10],\n        b11 = b[11];\n    var b12 = b[12],\n        b13 = b[13],\n        b14 = b[14],\n        b15 = b[15];\n    return Math.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n  }\n  /**\n   * Alias for {@link mat4.multiply}\n   * @function\n   */\n\n  var mul$3 = multiply$3;\n  /**\n   * Alias for {@link mat4.subtract}\n   * @function\n   */\n\n  var sub$3 = subtract$3;\n\n  var mat4 = /*#__PURE__*/Object.freeze({\n    create: create$3,\n    clone: clone$3,\n    copy: copy$3,\n    fromValues: fromValues$3,\n    set: set$3,\n    identity: identity$3,\n    transpose: transpose$2,\n    invert: invert$3,\n    adjoint: adjoint$2,\n    determinant: determinant$3,\n    multiply: multiply$3,\n    translate: translate$2,\n    scale: scale$3,\n    rotate: rotate$3,\n    rotateX: rotateX,\n    rotateY: rotateY,\n    rotateZ: rotateZ,\n    fromTranslation: fromTranslation$2,\n    fromScaling: fromScaling$3,\n    fromRotation: fromRotation$3,\n    fromXRotation: fromXRotation,\n    fromYRotation: fromYRotation,\n    fromZRotation: fromZRotation,\n    fromRotationTranslation: fromRotationTranslation,\n    fromQuat2: fromQuat2,\n    getTranslation: getTranslation,\n    getScaling: getScaling,\n    getRotation: getRotation,\n    fromRotationTranslationScale: fromRotationTranslationScale,\n    fromRotationTranslationScaleOrigin: fromRotationTranslationScaleOrigin,\n    fromQuat: fromQuat$1,\n    frustum: frustum,\n    perspective: perspective,\n    perspectiveFromFieldOfView: perspectiveFromFieldOfView,\n    ortho: ortho,\n    lookAt: lookAt,\n    targetTo: targetTo,\n    str: str$3,\n    frob: frob$3,\n    add: add$3,\n    subtract: subtract$3,\n    multiplyScalar: multiplyScalar$3,\n    multiplyScalarAndAdd: multiplyScalarAndAdd$3,\n    exactEquals: exactEquals$3,\n    equals: equals$4,\n    mul: mul$3,\n    sub: sub$3\n  });\n\n  /**\n   * 3 Dimensional Vector\n   * @module vec3\n   */\n\n  /**\n   * Creates a new, empty vec3\n   *\n   * @returns {vec3} a new 3D vector\n   */\n\n  function create$4() {\n    var out = new ARRAY_TYPE(3);\n\n    if (ARRAY_TYPE != Float32Array) {\n      out[0] = 0;\n      out[1] = 0;\n      out[2] = 0;\n    }\n\n    return out;\n  }\n  /**\n   * Creates a new vec3 initialized with values from an existing vector\n   *\n   * @param {vec3} a vector to clone\n   * @returns {vec3} a new 3D vector\n   */\n\n  function clone$4(a) {\n    var out = new ARRAY_TYPE(3);\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    return out;\n  }\n  /**\n   * Calculates the length of a vec3\n   *\n   * @param {vec3} a vector to calculate length of\n   * @returns {Number} length of a\n   */\n\n  function length(a) {\n    var x = a[0];\n    var y = a[1];\n    var z = a[2];\n    return Math.sqrt(x * x + y * y + z * z);\n  }\n  /**\n   * Creates a new vec3 initialized with the given values\n   *\n   * @param {Number} x X component\n   * @param {Number} y Y component\n   * @param {Number} z Z component\n   * @returns {vec3} a new 3D vector\n   */\n\n  function fromValues$4(x, y, z) {\n    var out = new ARRAY_TYPE(3);\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    return out;\n  }\n  /**\n   * Copy the values from one vec3 to another\n   *\n   * @param {vec3} out the receiving vector\n   * @param {vec3} a the source vector\n   * @returns {vec3} out\n   */\n\n  function copy$4(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    return out;\n  }\n  /**\n   * Set the components of a vec3 to the given values\n   *\n   * @param {vec3} out the receiving vector\n   * @param {Number} x X component\n   * @param {Number} y Y component\n   * @param {Number} z Z component\n   * @returns {vec3} out\n   */\n\n  function set$4(out, x, y, z) {\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    return out;\n  }\n  /**\n   * Adds two vec3's\n   *\n   * @param {vec3} out the receiving vector\n   * @param {vec3} a the first operand\n   * @param {vec3} b the second operand\n   * @returns {vec3} out\n   */\n\n  function add$4(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    return out;\n  }\n  /**\n   * Subtracts vector b from vector a\n   *\n   * @param {vec3} out the receiving vector\n   * @param {vec3} a the first operand\n   * @param {vec3} b the second operand\n   * @returns {vec3} out\n   */\n\n  function subtract$4(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    return out;\n  }\n  /**\n   * Multiplies two vec3's\n   *\n   * @param {vec3} out the receiving vector\n   * @param {vec3} a the first operand\n   * @param {vec3} b the second operand\n   * @returns {vec3} out\n   */\n\n  function multiply$4(out, a, b) {\n    out[0] = a[0] * b[0];\n    out[1] = a[1] * b[1];\n    out[2] = a[2] * b[2];\n    return out;\n  }\n  /**\n   * Divides two vec3's\n   *\n   * @param {vec3} out the receiving vector\n   * @param {vec3} a the first operand\n   * @param {vec3} b the second operand\n   * @returns {vec3} out\n   */\n\n  function divide(out, a, b) {\n    out[0] = a[0] / b[0];\n    out[1] = a[1] / b[1];\n    out[2] = a[2] / b[2];\n    return out;\n  }\n  /**\n   * Math.ceil the components of a vec3\n   *\n   * @param {vec3} out the receiving vector\n   * @param {vec3} a vector to ceil\n   * @returns {vec3} out\n   */\n\n  function ceil(out, a) {\n    out[0] = Math.ceil(a[0]);\n    out[1] = Math.ceil(a[1]);\n    out[2] = Math.ceil(a[2]);\n    return out;\n  }\n  /**\n   * Math.floor the components of a vec3\n   *\n   * @param {vec3} out the receiving vector\n   * @param {vec3} a vector to floor\n   * @returns {vec3} out\n   */\n\n  function floor(out, a) {\n    out[0] = Math.floor(a[0]);\n    out[1] = Math.floor(a[1]);\n    out[2] = Math.floor(a[2]);\n    return out;\n  }\n  /**\n   * Returns the minimum of two vec3's\n   *\n   * @param {vec3} out the receiving vector\n   * @param {vec3} a the first operand\n   * @param {vec3} b the second operand\n   * @returns {vec3} out\n   */\n\n  function min(out, a, b) {\n    out[0] = Math.min(a[0], b[0]);\n    out[1] = Math.min(a[1], b[1]);\n    out[2] = Math.min(a[2], b[2]);\n    return out;\n  }\n  /**\n   * Returns the maximum of two vec3's\n   *\n   * @param {vec3} out the receiving vector\n   * @param {vec3} a the first operand\n   * @param {vec3} b the second operand\n   * @returns {vec3} out\n   */\n\n  function max(out, a, b) {\n    out[0] = Math.max(a[0], b[0]);\n    out[1] = Math.max(a[1], b[1]);\n    out[2] = Math.max(a[2], b[2]);\n    return out;\n  }\n  /**\n   * Math.round the components of a vec3\n   *\n   * @param {vec3} out the receiving vector\n   * @param {vec3} a vector to round\n   * @returns {vec3} out\n   */\n\n  function round(out, a) {\n    out[0] = Math.round(a[0]);\n    out[1] = Math.round(a[1]);\n    out[2] = Math.round(a[2]);\n    return out;\n  }\n  /**\n   * Scales a vec3 by a scalar number\n   *\n   * @param {vec3} out the receiving vector\n   * @param {vec3} a the vector to scale\n   * @param {Number} b amount to scale the vector by\n   * @returns {vec3} out\n   */\n\n  function scale$4(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    return out;\n  }\n  /**\n   * Adds two vec3's after scaling the second operand by a scalar value\n   *\n   * @param {vec3} out the receiving vector\n   * @param {vec3} a the first operand\n   * @param {vec3} b the second operand\n   * @param {Number} scale the amount to scale b by before adding\n   * @returns {vec3} out\n   */\n\n  function scaleAndAdd(out, a, b, scale) {\n    out[0] = a[0] + b[0] * scale;\n    out[1] = a[1] + b[1] * scale;\n    out[2] = a[2] + b[2] * scale;\n    return out;\n  }\n  /**\n   * Calculates the euclidian distance between two vec3's\n   *\n   * @param {vec3} a the first operand\n   * @param {vec3} b the second operand\n   * @returns {Number} distance between a and b\n   */\n\n  function distance(a, b) {\n    var x = b[0] - a[0];\n    var y = b[1] - a[1];\n    var z = b[2] - a[2];\n    return Math.sqrt(x * x + y * y + z * z);\n  }\n  /**\n   * Calculates the squared euclidian distance between two vec3's\n   *\n   * @param {vec3} a the first operand\n   * @param {vec3} b the second operand\n   * @returns {Number} squared distance between a and b\n   */\n\n  function squaredDistance(a, b) {\n    var x = b[0] - a[0];\n    var y = b[1] - a[1];\n    var z = b[2] - a[2];\n    return x * x + y * y + z * z;\n  }\n  /**\n   * Calculates the squared length of a vec3\n   *\n   * @param {vec3} a vector to calculate squared length of\n   * @returns {Number} squared length of a\n   */\n\n  function squaredLength(a) {\n    var x = a[0];\n    var y = a[1];\n    var z = a[2];\n    return x * x + y * y + z * z;\n  }\n  /**\n   * Negates the components of a vec3\n   *\n   * @param {vec3} out the receiving vector\n   * @param {vec3} a vector to negate\n   * @returns {vec3} out\n   */\n\n  function negate(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    return out;\n  }\n  /**\n   * Returns the inverse of the components of a vec3\n   *\n   * @param {vec3} out the receiving vector\n   * @param {vec3} a vector to invert\n   * @returns {vec3} out\n   */\n\n  function inverse(out, a) {\n    out[0] = 1.0 / a[0];\n    out[1] = 1.0 / a[1];\n    out[2] = 1.0 / a[2];\n    return out;\n  }\n  /**\n   * Normalize a vec3\n   *\n   * @param {vec3} out the receiving vector\n   * @param {vec3} a vector to normalize\n   * @returns {vec3} out\n   */\n\n  function normalize(out, a) {\n    var x = a[0];\n    var y = a[1];\n    var z = a[2];\n    var len = x * x + y * y + z * z;\n\n    if (len > 0) {\n      //TODO: evaluate use of glm_invsqrt here?\n      len = 1 / Math.sqrt(len);\n    }\n\n    out[0] = a[0] * len;\n    out[1] = a[1] * len;\n    out[2] = a[2] * len;\n    return out;\n  }\n  /**\n   * Calculates the dot product of two vec3's\n   *\n   * @param {vec3} a the first operand\n   * @param {vec3} b the second operand\n   * @returns {Number} dot product of a and b\n   */\n\n  function dot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  /**\n   * Computes the cross product of two vec3's\n   *\n   * @param {vec3} out the receiving vector\n   * @param {vec3} a the first operand\n   * @param {vec3} b the second operand\n   * @returns {vec3} out\n   */\n\n  function cross(out, a, b) {\n    var ax = a[0],\n        ay = a[1],\n        az = a[2];\n    var bx = b[0],\n        by = b[1],\n        bz = b[2];\n    out[0] = ay * bz - az * by;\n    out[1] = az * bx - ax * bz;\n    out[2] = ax * by - ay * bx;\n    return out;\n  }\n  /**\n   * Performs a linear interpolation between two vec3's\n   *\n   * @param {vec3} out the receiving vector\n   * @param {vec3} a the first operand\n   * @param {vec3} b the second operand\n   * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n   * @returns {vec3} out\n   */\n\n  function lerp(out, a, b, t) {\n    var ax = a[0];\n    var ay = a[1];\n    var az = a[2];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    out[2] = az + t * (b[2] - az);\n    return out;\n  }\n  /**\n   * Performs a hermite interpolation with two control points\n   *\n   * @param {vec3} out the receiving vector\n   * @param {vec3} a the first operand\n   * @param {vec3} b the second operand\n   * @param {vec3} c the third operand\n   * @param {vec3} d the fourth operand\n   * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n   * @returns {vec3} out\n   */\n\n  function hermite(out, a, b, c, d, t) {\n    var factorTimes2 = t * t;\n    var factor1 = factorTimes2 * (2 * t - 3) + 1;\n    var factor2 = factorTimes2 * (t - 2) + t;\n    var factor3 = factorTimes2 * (t - 1);\n    var factor4 = factorTimes2 * (3 - 2 * t);\n    out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n    out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n    out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n    return out;\n  }\n  /**\n   * Performs a bezier interpolation with two control points\n   *\n   * @param {vec3} out the receiving vector\n   * @param {vec3} a the first operand\n   * @param {vec3} b the second operand\n   * @param {vec3} c the third operand\n   * @param {vec3} d the fourth operand\n   * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n   * @returns {vec3} out\n   */\n\n  function bezier(out, a, b, c, d, t) {\n    var inverseFactor = 1 - t;\n    var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n    var factorTimes2 = t * t;\n    var factor1 = inverseFactorTimesTwo * inverseFactor;\n    var factor2 = 3 * t * inverseFactorTimesTwo;\n    var factor3 = 3 * factorTimes2 * inverseFactor;\n    var factor4 = factorTimes2 * t;\n    out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n    out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n    out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n    return out;\n  }\n  /**\n   * Generates a random vector with the given scale\n   *\n   * @param {vec3} out the receiving vector\n   * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n   * @returns {vec3} out\n   */\n\n  function random(out, scale) {\n    scale = scale || 1.0;\n    var r = RANDOM() * 2.0 * Math.PI;\n    var z = RANDOM() * 2.0 - 1.0;\n    var zScale = Math.sqrt(1.0 - z * z) * scale;\n    out[0] = Math.cos(r) * zScale;\n    out[1] = Math.sin(r) * zScale;\n    out[2] = z * scale;\n    return out;\n  }\n  /**\n   * Transforms the vec3 with a mat4.\n   * 4th vector component is implicitly '1'\n   *\n   * @param {vec3} out the receiving vector\n   * @param {vec3} a the vector to transform\n   * @param {mat4} m matrix to transform with\n   * @returns {vec3} out\n   */\n\n  function transformMat4(out, a, m) {\n    var x = a[0],\n        y = a[1],\n        z = a[2];\n    var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n    w = w || 1.0;\n    out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n    out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n    out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n    return out;\n  }\n  /**\n   * Transforms the vec3 with a mat3.\n   *\n   * @param {vec3} out the receiving vector\n   * @param {vec3} a the vector to transform\n   * @param {mat3} m the 3x3 matrix to transform with\n   * @returns {vec3} out\n   */\n\n  function transformMat3(out, a, m) {\n    var x = a[0],\n        y = a[1],\n        z = a[2];\n    out[0] = x * m[0] + y * m[3] + z * m[6];\n    out[1] = x * m[1] + y * m[4] + z * m[7];\n    out[2] = x * m[2] + y * m[5] + z * m[8];\n    return out;\n  }\n  /**\n   * Transforms the vec3 with a quat\n   * Can also be used for dual quaternions. (Multiply it with the real part)\n   *\n   * @param {vec3} out the receiving vector\n   * @param {vec3} a the vector to transform\n   * @param {quat} q quaternion to transform with\n   * @returns {vec3} out\n   */\n\n  function transformQuat(out, a, q) {\n    // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n    var qx = q[0],\n        qy = q[1],\n        qz = q[2],\n        qw = q[3];\n    var x = a[0],\n        y = a[1],\n        z = a[2]; // var qvec = [qx, qy, qz];\n    // var uv = vec3.cross([], qvec, a);\n\n    var uvx = qy * z - qz * y,\n        uvy = qz * x - qx * z,\n        uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n    var uuvx = qy * uvz - qz * uvy,\n        uuvy = qz * uvx - qx * uvz,\n        uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n    var w2 = qw * 2;\n    uvx *= w2;\n    uvy *= w2;\n    uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n    uuvx *= 2;\n    uuvy *= 2;\n    uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n    out[0] = x + uvx + uuvx;\n    out[1] = y + uvy + uuvy;\n    out[2] = z + uvz + uuvz;\n    return out;\n  }\n  /**\n   * Rotate a 3D vector around the x-axis\n   * @param {vec3} out The receiving vec3\n   * @param {vec3} a The vec3 point to rotate\n   * @param {vec3} b The origin of the rotation\n   * @param {Number} c The angle of rotation\n   * @returns {vec3} out\n   */\n\n  function rotateX$1(out, a, b, c) {\n    var p = [],\n        r = []; //Translate point to the origin\n\n    p[0] = a[0] - b[0];\n    p[1] = a[1] - b[1];\n    p[2] = a[2] - b[2]; //perform rotation\n\n    r[0] = p[0];\n    r[1] = p[1] * Math.cos(c) - p[2] * Math.sin(c);\n    r[2] = p[1] * Math.sin(c) + p[2] * Math.cos(c); //translate to correct position\n\n    out[0] = r[0] + b[0];\n    out[1] = r[1] + b[1];\n    out[2] = r[2] + b[2];\n    return out;\n  }\n  /**\n   * Rotate a 3D vector around the y-axis\n   * @param {vec3} out The receiving vec3\n   * @param {vec3} a The vec3 point to rotate\n   * @param {vec3} b The origin of the rotation\n   * @param {Number} c The angle of rotation\n   * @returns {vec3} out\n   */\n\n  function rotateY$1(out, a, b, c) {\n    var p = [],\n        r = []; //Translate point to the origin\n\n    p[0] = a[0] - b[0];\n    p[1] = a[1] - b[1];\n    p[2] = a[2] - b[2]; //perform rotation\n\n    r[0] = p[2] * Math.sin(c) + p[0] * Math.cos(c);\n    r[1] = p[1];\n    r[2] = p[2] * Math.cos(c) - p[0] * Math.sin(c); //translate to correct position\n\n    out[0] = r[0] + b[0];\n    out[1] = r[1] + b[1];\n    out[2] = r[2] + b[2];\n    return out;\n  }\n  /**\n   * Rotate a 3D vector around the z-axis\n   * @param {vec3} out The receiving vec3\n   * @param {vec3} a The vec3 point to rotate\n   * @param {vec3} b The origin of the rotation\n   * @param {Number} c The angle of rotation\n   * @returns {vec3} out\n   */\n\n  function rotateZ$1(out, a, b, c) {\n    var p = [],\n        r = []; //Translate point to the origin\n\n    p[0] = a[0] - b[0];\n    p[1] = a[1] - b[1];\n    p[2] = a[2] - b[2]; //perform rotation\n\n    r[0] = p[0] * Math.cos(c) - p[1] * Math.sin(c);\n    r[1] = p[0] * Math.sin(c) + p[1] * Math.cos(c);\n    r[2] = p[2]; //translate to correct position\n\n    out[0] = r[0] + b[0];\n    out[1] = r[1] + b[1];\n    out[2] = r[2] + b[2];\n    return out;\n  }\n  /**\n   * Get the angle between two 3D vectors\n   * @param {vec3} a The first operand\n   * @param {vec3} b The second operand\n   * @returns {Number} The angle in radians\n   */\n\n  function angle(a, b) {\n    var tempA = fromValues$4(a[0], a[1], a[2]);\n    var tempB = fromValues$4(b[0], b[1], b[2]);\n    normalize(tempA, tempA);\n    normalize(tempB, tempB);\n    var cosine = dot(tempA, tempB);\n\n    if (cosine > 1.0) {\n      return 0;\n    } else if (cosine < -1.0) {\n      return Math.PI;\n    } else {\n      return Math.acos(cosine);\n    }\n  }\n  /**\n   * Set the components of a vec3 to zero\n   *\n   * @param {vec3} out the receiving vector\n   * @returns {vec3} out\n   */\n\n  function zero(out) {\n    out[0] = 0.0;\n    out[1] = 0.0;\n    out[2] = 0.0;\n    return out;\n  }\n  /**\n   * Returns a string representation of a vector\n   *\n   * @param {vec3} a vector to represent as a string\n   * @returns {String} string representation of the vector\n   */\n\n  function str$4(a) {\n    return 'vec3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ')';\n  }\n  /**\n   * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n   *\n   * @param {vec3} a The first vector.\n   * @param {vec3} b The second vector.\n   * @returns {Boolean} True if the vectors are equal, false otherwise.\n   */\n\n  function exactEquals$4(a, b) {\n    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n  }\n  /**\n   * Returns whether or not the vectors have approximately the same elements in the same position.\n   *\n   * @param {vec3} a The first vector.\n   * @param {vec3} b The second vector.\n   * @returns {Boolean} True if the vectors are equal, false otherwise.\n   */\n\n  function equals$5(a, b) {\n    var a0 = a[0],\n        a1 = a[1],\n        a2 = a[2];\n    var b0 = b[0],\n        b1 = b[1],\n        b2 = b[2];\n    return Math.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n  }\n  /**\n   * Alias for {@link vec3.subtract}\n   * @function\n   */\n\n  var sub$4 = subtract$4;\n  /**\n   * Alias for {@link vec3.multiply}\n   * @function\n   */\n\n  var mul$4 = multiply$4;\n  /**\n   * Alias for {@link vec3.divide}\n   * @function\n   */\n\n  var div = divide;\n  /**\n   * Alias for {@link vec3.distance}\n   * @function\n   */\n\n  var dist = distance;\n  /**\n   * Alias for {@link vec3.squaredDistance}\n   * @function\n   */\n\n  var sqrDist = squaredDistance;\n  /**\n   * Alias for {@link vec3.length}\n   * @function\n   */\n\n  var len = length;\n  /**\n   * Alias for {@link vec3.squaredLength}\n   * @function\n   */\n\n  var sqrLen = squaredLength;\n  /**\n   * Perform some operation over an array of vec3s.\n   *\n   * @param {Array} a the array of vectors to iterate over\n   * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n   * @param {Number} offset Number of elements to skip at the beginning of the array\n   * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n   * @param {Function} fn Function to call for each vector in the array\n   * @param {Object} [arg] additional argument to pass to fn\n   * @returns {Array} a\n   * @function\n   */\n\n  var forEach = function () {\n    var vec = create$4();\n    return function (a, stride, offset, count, fn, arg) {\n      var i, l;\n\n      if (!stride) {\n        stride = 3;\n      }\n\n      if (!offset) {\n        offset = 0;\n      }\n\n      if (count) {\n        l = Math.min(count * stride + offset, a.length);\n      } else {\n        l = a.length;\n      }\n\n      for (i = offset; i < l; i += stride) {\n        vec[0] = a[i];\n        vec[1] = a[i + 1];\n        vec[2] = a[i + 2];\n        fn(vec, vec, arg);\n        a[i] = vec[0];\n        a[i + 1] = vec[1];\n        a[i + 2] = vec[2];\n      }\n\n      return a;\n    };\n  }();\n\n  var vec3 = /*#__PURE__*/Object.freeze({\n    create: create$4,\n    clone: clone$4,\n    length: length,\n    fromValues: fromValues$4,\n    copy: copy$4,\n    set: set$4,\n    add: add$4,\n    subtract: subtract$4,\n    multiply: multiply$4,\n    divide: divide,\n    ceil: ceil,\n    floor: floor,\n    min: min,\n    max: max,\n    round: round,\n    scale: scale$4,\n    scaleAndAdd: scaleAndAdd,\n    distance: distance,\n    squaredDistance: squaredDistance,\n    squaredLength: squaredLength,\n    negate: negate,\n    inverse: inverse,\n    normalize: normalize,\n    dot: dot,\n    cross: cross,\n    lerp: lerp,\n    hermite: hermite,\n    bezier: bezier,\n    random: random,\n    transformMat4: transformMat4,\n    transformMat3: transformMat3,\n    transformQuat: transformQuat,\n    rotateX: rotateX$1,\n    rotateY: rotateY$1,\n    rotateZ: rotateZ$1,\n    angle: angle,\n    zero: zero,\n    str: str$4,\n    exactEquals: exactEquals$4,\n    equals: equals$5,\n    sub: sub$4,\n    mul: mul$4,\n    div: div,\n    dist: dist,\n    sqrDist: sqrDist,\n    len: len,\n    sqrLen: sqrLen,\n    forEach: forEach\n  });\n\n  /**\n   * 4 Dimensional Vector\n   * @module vec4\n   */\n\n  /**\n   * Creates a new, empty vec4\n   *\n   * @returns {vec4} a new 4D vector\n   */\n\n  function create$5() {\n    var out = new ARRAY_TYPE(4);\n\n    if (ARRAY_TYPE != Float32Array) {\n      out[0] = 0;\n      out[1] = 0;\n      out[2] = 0;\n      out[3] = 0;\n    }\n\n    return out;\n  }\n  /**\n   * Creates a new vec4 initialized with values from an existing vector\n   *\n   * @param {vec4} a vector to clone\n   * @returns {vec4} a new 4D vector\n   */\n\n  function clone$5(a) {\n    var out = new ARRAY_TYPE(4);\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    return out;\n  }\n  /**\n   * Creates a new vec4 initialized with the given values\n   *\n   * @param {Number} x X component\n   * @param {Number} y Y component\n   * @param {Number} z Z component\n   * @param {Number} w W component\n   * @returns {vec4} a new 4D vector\n   */\n\n  function fromValues$5(x, y, z, w) {\n    var out = new ARRAY_TYPE(4);\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    out[3] = w;\n    return out;\n  }\n  /**\n   * Copy the values from one vec4 to another\n   *\n   * @param {vec4} out the receiving vector\n   * @param {vec4} a the source vector\n   * @returns {vec4} out\n   */\n\n  function copy$5(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    return out;\n  }\n  /**\n   * Set the components of a vec4 to the given values\n   *\n   * @param {vec4} out the receiving vector\n   * @param {Number} x X component\n   * @param {Number} y Y component\n   * @param {Number} z Z component\n   * @param {Number} w W component\n   * @returns {vec4} out\n   */\n\n  function set$5(out, x, y, z, w) {\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    out[3] = w;\n    return out;\n  }\n  /**\n   * Adds two vec4's\n   *\n   * @param {vec4} out the receiving vector\n   * @param {vec4} a the first operand\n   * @param {vec4} b the second operand\n   * @returns {vec4} out\n   */\n\n  function add$5(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    return out;\n  }\n  /**\n   * Subtracts vector b from vector a\n   *\n   * @param {vec4} out the receiving vector\n   * @param {vec4} a the first operand\n   * @param {vec4} b the second operand\n   * @returns {vec4} out\n   */\n\n  function subtract$5(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    out[3] = a[3] - b[3];\n    return out;\n  }\n  /**\n   * Multiplies two vec4's\n   *\n   * @param {vec4} out the receiving vector\n   * @param {vec4} a the first operand\n   * @param {vec4} b the second operand\n   * @returns {vec4} out\n   */\n\n  function multiply$5(out, a, b) {\n    out[0] = a[0] * b[0];\n    out[1] = a[1] * b[1];\n    out[2] = a[2] * b[2];\n    out[3] = a[3] * b[3];\n    return out;\n  }\n  /**\n   * Divides two vec4's\n   *\n   * @param {vec4} out the receiving vector\n   * @param {vec4} a the first operand\n   * @param {vec4} b the second operand\n   * @returns {vec4} out\n   */\n\n  function divide$1(out, a, b) {\n    out[0] = a[0] / b[0];\n    out[1] = a[1] / b[1];\n    out[2] = a[2] / b[2];\n    out[3] = a[3] / b[3];\n    return out;\n  }\n  /**\n   * Math.ceil the components of a vec4\n   *\n   * @param {vec4} out the receiving vector\n   * @param {vec4} a vector to ceil\n   * @returns {vec4} out\n   */\n\n  function ceil$1(out, a) {\n    out[0] = Math.ceil(a[0]);\n    out[1] = Math.ceil(a[1]);\n    out[2] = Math.ceil(a[2]);\n    out[3] = Math.ceil(a[3]);\n    return out;\n  }\n  /**\n   * Math.floor the components of a vec4\n   *\n   * @param {vec4} out the receiving vector\n   * @param {vec4} a vector to floor\n   * @returns {vec4} out\n   */\n\n  function floor$1(out, a) {\n    out[0] = Math.floor(a[0]);\n    out[1] = Math.floor(a[1]);\n    out[2] = Math.floor(a[2]);\n    out[3] = Math.floor(a[3]);\n    return out;\n  }\n  /**\n   * Returns the minimum of two vec4's\n   *\n   * @param {vec4} out the receiving vector\n   * @param {vec4} a the first operand\n   * @param {vec4} b the second operand\n   * @returns {vec4} out\n   */\n\n  function min$1(out, a, b) {\n    out[0] = Math.min(a[0], b[0]);\n    out[1] = Math.min(a[1], b[1]);\n    out[2] = Math.min(a[2], b[2]);\n    out[3] = Math.min(a[3], b[3]);\n    return out;\n  }\n  /**\n   * Returns the maximum of two vec4's\n   *\n   * @param {vec4} out the receiving vector\n   * @param {vec4} a the first operand\n   * @param {vec4} b the second operand\n   * @returns {vec4} out\n   */\n\n  function max$1(out, a, b) {\n    out[0] = Math.max(a[0], b[0]);\n    out[1] = Math.max(a[1], b[1]);\n    out[2] = Math.max(a[2], b[2]);\n    out[3] = Math.max(a[3], b[3]);\n    return out;\n  }\n  /**\n   * Math.round the components of a vec4\n   *\n   * @param {vec4} out the receiving vector\n   * @param {vec4} a vector to round\n   * @returns {vec4} out\n   */\n\n  function round$1(out, a) {\n    out[0] = Math.round(a[0]);\n    out[1] = Math.round(a[1]);\n    out[2] = Math.round(a[2]);\n    out[3] = Math.round(a[3]);\n    return out;\n  }\n  /**\n   * Scales a vec4 by a scalar number\n   *\n   * @param {vec4} out the receiving vector\n   * @param {vec4} a the vector to scale\n   * @param {Number} b amount to scale the vector by\n   * @returns {vec4} out\n   */\n\n  function scale$5(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    return out;\n  }\n  /**\n   * Adds two vec4's after scaling the second operand by a scalar value\n   *\n   * @param {vec4} out the receiving vector\n   * @param {vec4} a the first operand\n   * @param {vec4} b the second operand\n   * @param {Number} scale the amount to scale b by before adding\n   * @returns {vec4} out\n   */\n\n  function scaleAndAdd$1(out, a, b, scale) {\n    out[0] = a[0] + b[0] * scale;\n    out[1] = a[1] + b[1] * scale;\n    out[2] = a[2] + b[2] * scale;\n    out[3] = a[3] + b[3] * scale;\n    return out;\n  }\n  /**\n   * Calculates the euclidian distance between two vec4's\n   *\n   * @param {vec4} a the first operand\n   * @param {vec4} b the second operand\n   * @returns {Number} distance between a and b\n   */\n\n  function distance$1(a, b) {\n    var x = b[0] - a[0];\n    var y = b[1] - a[1];\n    var z = b[2] - a[2];\n    var w = b[3] - a[3];\n    return Math.sqrt(x * x + y * y + z * z + w * w);\n  }\n  /**\n   * Calculates the squared euclidian distance between two vec4's\n   *\n   * @param {vec4} a the first operand\n   * @param {vec4} b the second operand\n   * @returns {Number} squared distance between a and b\n   */\n\n  function squaredDistance$1(a, b) {\n    var x = b[0] - a[0];\n    var y = b[1] - a[1];\n    var z = b[2] - a[2];\n    var w = b[3] - a[3];\n    return x * x + y * y + z * z + w * w;\n  }\n  /**\n   * Calculates the length of a vec4\n   *\n   * @param {vec4} a vector to calculate length of\n   * @returns {Number} length of a\n   */\n\n  function length$1(a) {\n    var x = a[0];\n    var y = a[1];\n    var z = a[2];\n    var w = a[3];\n    return Math.sqrt(x * x + y * y + z * z + w * w);\n  }\n  /**\n   * Calculates the squared length of a vec4\n   *\n   * @param {vec4} a vector to calculate squared length of\n   * @returns {Number} squared length of a\n   */\n\n  function squaredLength$1(a) {\n    var x = a[0];\n    var y = a[1];\n    var z = a[2];\n    var w = a[3];\n    return x * x + y * y + z * z + w * w;\n  }\n  /**\n   * Negates the components of a vec4\n   *\n   * @param {vec4} out the receiving vector\n   * @param {vec4} a vector to negate\n   * @returns {vec4} out\n   */\n\n  function negate$1(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    out[3] = -a[3];\n    return out;\n  }\n  /**\n   * Returns the inverse of the components of a vec4\n   *\n   * @param {vec4} out the receiving vector\n   * @param {vec4} a vector to invert\n   * @returns {vec4} out\n   */\n\n  function inverse$1(out, a) {\n    out[0] = 1.0 / a[0];\n    out[1] = 1.0 / a[1];\n    out[2] = 1.0 / a[2];\n    out[3] = 1.0 / a[3];\n    return out;\n  }\n  /**\n   * Normalize a vec4\n   *\n   * @param {vec4} out the receiving vector\n   * @param {vec4} a vector to normalize\n   * @returns {vec4} out\n   */\n\n  function normalize$1(out, a) {\n    var x = a[0];\n    var y = a[1];\n    var z = a[2];\n    var w = a[3];\n    var len = x * x + y * y + z * z + w * w;\n\n    if (len > 0) {\n      len = 1 / Math.sqrt(len);\n    }\n\n    out[0] = x * len;\n    out[1] = y * len;\n    out[2] = z * len;\n    out[3] = w * len;\n    return out;\n  }\n  /**\n   * Calculates the dot product of two vec4's\n   *\n   * @param {vec4} a the first operand\n   * @param {vec4} b the second operand\n   * @returns {Number} dot product of a and b\n   */\n\n  function dot$1(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  /**\n   * Returns the cross-product of three vectors in a 4-dimensional space\n   *\n   * @param {vec4} result the receiving vector\n   * @param {vec4} U the first vector\n   * @param {vec4} V the second vector\n   * @param {vec4} W the third vector\n   * @returns {vec4} result\n   */\n\n  function cross$1(out, u, v, w) {\n    var A = v[0] * w[1] - v[1] * w[0],\n        B = v[0] * w[2] - v[2] * w[0],\n        C = v[0] * w[3] - v[3] * w[0],\n        D = v[1] * w[2] - v[2] * w[1],\n        E = v[1] * w[3] - v[3] * w[1],\n        F = v[2] * w[3] - v[3] * w[2];\n    var G = u[0];\n    var H = u[1];\n    var I = u[2];\n    var J = u[3];\n    out[0] = H * F - I * E + J * D;\n    out[1] = -(G * F) + I * C - J * B;\n    out[2] = G * E - H * C + J * A;\n    out[3] = -(G * D) + H * B - I * A;\n    return out;\n  }\n  /**\n   * Performs a linear interpolation between two vec4's\n   *\n   * @param {vec4} out the receiving vector\n   * @param {vec4} a the first operand\n   * @param {vec4} b the second operand\n   * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n   * @returns {vec4} out\n   */\n\n  function lerp$1(out, a, b, t) {\n    var ax = a[0];\n    var ay = a[1];\n    var az = a[2];\n    var aw = a[3];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    out[2] = az + t * (b[2] - az);\n    out[3] = aw + t * (b[3] - aw);\n    return out;\n  }\n  /**\n   * Generates a random vector with the given scale\n   *\n   * @param {vec4} out the receiving vector\n   * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n   * @returns {vec4} out\n   */\n\n  function random$1(out, scale) {\n    scale = scale || 1.0; // Marsaglia, George. Choosing a Point from the Surface of a\n    // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n    // http://projecteuclid.org/euclid.aoms/1177692644;\n\n    var v1, v2, v3, v4;\n    var s1, s2;\n\n    do {\n      v1 = RANDOM() * 2 - 1;\n      v2 = RANDOM() * 2 - 1;\n      s1 = v1 * v1 + v2 * v2;\n    } while (s1 >= 1);\n\n    do {\n      v3 = RANDOM() * 2 - 1;\n      v4 = RANDOM() * 2 - 1;\n      s2 = v3 * v3 + v4 * v4;\n    } while (s2 >= 1);\n\n    var d = Math.sqrt((1 - s1) / s2);\n    out[0] = scale * v1;\n    out[1] = scale * v2;\n    out[2] = scale * v3 * d;\n    out[3] = scale * v4 * d;\n    return out;\n  }\n  /**\n   * Transforms the vec4 with a mat4.\n   *\n   * @param {vec4} out the receiving vector\n   * @param {vec4} a the vector to transform\n   * @param {mat4} m matrix to transform with\n   * @returns {vec4} out\n   */\n\n  function transformMat4$1(out, a, m) {\n    var x = a[0],\n        y = a[1],\n        z = a[2],\n        w = a[3];\n    out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n    out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n    out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n    out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n    return out;\n  }\n  /**\n   * Transforms the vec4 with a quat\n   *\n   * @param {vec4} out the receiving vector\n   * @param {vec4} a the vector to transform\n   * @param {quat} q quaternion to transform with\n   * @returns {vec4} out\n   */\n\n  function transformQuat$1(out, a, q) {\n    var x = a[0],\n        y = a[1],\n        z = a[2];\n    var qx = q[0],\n        qy = q[1],\n        qz = q[2],\n        qw = q[3]; // calculate quat * vec\n\n    var ix = qw * x + qy * z - qz * y;\n    var iy = qw * y + qz * x - qx * z;\n    var iz = qw * z + qx * y - qy * x;\n    var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n    out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n    out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n    out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n    out[3] = a[3];\n    return out;\n  }\n  /**\n   * Set the components of a vec4 to zero\n   *\n   * @param {vec4} out the receiving vector\n   * @returns {vec4} out\n   */\n\n  function zero$1(out) {\n    out[0] = 0.0;\n    out[1] = 0.0;\n    out[2] = 0.0;\n    out[3] = 0.0;\n    return out;\n  }\n  /**\n   * Returns a string representation of a vector\n   *\n   * @param {vec4} a vector to represent as a string\n   * @returns {String} string representation of the vector\n   */\n\n  function str$5(a) {\n    return 'vec4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n  }\n  /**\n   * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n   *\n   * @param {vec4} a The first vector.\n   * @param {vec4} b The second vector.\n   * @returns {Boolean} True if the vectors are equal, false otherwise.\n   */\n\n  function exactEquals$5(a, b) {\n    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n  }\n  /**\n   * Returns whether or not the vectors have approximately the same elements in the same position.\n   *\n   * @param {vec4} a The first vector.\n   * @param {vec4} b The second vector.\n   * @returns {Boolean} True if the vectors are equal, false otherwise.\n   */\n\n  function equals$6(a, b) {\n    var a0 = a[0],\n        a1 = a[1],\n        a2 = a[2],\n        a3 = a[3];\n    var b0 = b[0],\n        b1 = b[1],\n        b2 = b[2],\n        b3 = b[3];\n    return Math.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n  }\n  /**\n   * Alias for {@link vec4.subtract}\n   * @function\n   */\n\n  var sub$5 = subtract$5;\n  /**\n   * Alias for {@link vec4.multiply}\n   * @function\n   */\n\n  var mul$5 = multiply$5;\n  /**\n   * Alias for {@link vec4.divide}\n   * @function\n   */\n\n  var div$1 = divide$1;\n  /**\n   * Alias for {@link vec4.distance}\n   * @function\n   */\n\n  var dist$1 = distance$1;\n  /**\n   * Alias for {@link vec4.squaredDistance}\n   * @function\n   */\n\n  var sqrDist$1 = squaredDistance$1;\n  /**\n   * Alias for {@link vec4.length}\n   * @function\n   */\n\n  var len$1 = length$1;\n  /**\n   * Alias for {@link vec4.squaredLength}\n   * @function\n   */\n\n  var sqrLen$1 = squaredLength$1;\n  /**\n   * Perform some operation over an array of vec4s.\n   *\n   * @param {Array} a the array of vectors to iterate over\n   * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\n   * @param {Number} offset Number of elements to skip at the beginning of the array\n   * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\n   * @param {Function} fn Function to call for each vector in the array\n   * @param {Object} [arg] additional argument to pass to fn\n   * @returns {Array} a\n   * @function\n   */\n\n  var forEach$1 = function () {\n    var vec = create$5();\n    return function (a, stride, offset, count, fn, arg) {\n      var i, l;\n\n      if (!stride) {\n        stride = 4;\n      }\n\n      if (!offset) {\n        offset = 0;\n      }\n\n      if (count) {\n        l = Math.min(count * stride + offset, a.length);\n      } else {\n        l = a.length;\n      }\n\n      for (i = offset; i < l; i += stride) {\n        vec[0] = a[i];\n        vec[1] = a[i + 1];\n        vec[2] = a[i + 2];\n        vec[3] = a[i + 3];\n        fn(vec, vec, arg);\n        a[i] = vec[0];\n        a[i + 1] = vec[1];\n        a[i + 2] = vec[2];\n        a[i + 3] = vec[3];\n      }\n\n      return a;\n    };\n  }();\n\n  var vec4 = /*#__PURE__*/Object.freeze({\n    create: create$5,\n    clone: clone$5,\n    fromValues: fromValues$5,\n    copy: copy$5,\n    set: set$5,\n    add: add$5,\n    subtract: subtract$5,\n    multiply: multiply$5,\n    divide: divide$1,\n    ceil: ceil$1,\n    floor: floor$1,\n    min: min$1,\n    max: max$1,\n    round: round$1,\n    scale: scale$5,\n    scaleAndAdd: scaleAndAdd$1,\n    distance: distance$1,\n    squaredDistance: squaredDistance$1,\n    length: length$1,\n    squaredLength: squaredLength$1,\n    negate: negate$1,\n    inverse: inverse$1,\n    normalize: normalize$1,\n    dot: dot$1,\n    cross: cross$1,\n    lerp: lerp$1,\n    random: random$1,\n    transformMat4: transformMat4$1,\n    transformQuat: transformQuat$1,\n    zero: zero$1,\n    str: str$5,\n    exactEquals: exactEquals$5,\n    equals: equals$6,\n    sub: sub$5,\n    mul: mul$5,\n    div: div$1,\n    dist: dist$1,\n    sqrDist: sqrDist$1,\n    len: len$1,\n    sqrLen: sqrLen$1,\n    forEach: forEach$1\n  });\n\n  /**\n   * Quaternion\n   * @module quat\n   */\n\n  /**\n   * Creates a new identity quat\n   *\n   * @returns {quat} a new quaternion\n   */\n\n  function create$6() {\n    var out = new ARRAY_TYPE(4);\n\n    if (ARRAY_TYPE != Float32Array) {\n      out[0] = 0;\n      out[1] = 0;\n      out[2] = 0;\n    }\n\n    out[3] = 1;\n    return out;\n  }\n  /**\n   * Set a quat to the identity quaternion\n   *\n   * @param {quat} out the receiving quaternion\n   * @returns {quat} out\n   */\n\n  function identity$4(out) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    return out;\n  }\n  /**\n   * Sets a quat from the given angle and rotation axis,\n   * then returns it.\n   *\n   * @param {quat} out the receiving quaternion\n   * @param {vec3} axis the axis around which to rotate\n   * @param {Number} rad the angle in radians\n   * @returns {quat} out\n   **/\n\n  function setAxisAngle(out, axis, rad) {\n    rad = rad * 0.5;\n    var s = Math.sin(rad);\n    out[0] = s * axis[0];\n    out[1] = s * axis[1];\n    out[2] = s * axis[2];\n    out[3] = Math.cos(rad);\n    return out;\n  }\n  /**\n   * Gets the rotation axis and angle for a given\n   *  quaternion. If a quaternion is created with\n   *  setAxisAngle, this method will return the same\n   *  values as providied in the original parameter list\n   *  OR functionally equivalent values.\n   * Example: The quaternion formed by axis [0, 0, 1] and\n   *  angle -90 is the same as the quaternion formed by\n   *  [0, 0, 1] and 270. This method favors the latter.\n   * @param  {vec3} out_axis  Vector receiving the axis of rotation\n   * @param  {quat} q     Quaternion to be decomposed\n   * @return {Number}     Angle, in radians, of the rotation\n   */\n\n  function getAxisAngle(out_axis, q) {\n    var rad = Math.acos(q[3]) * 2.0;\n    var s = Math.sin(rad / 2.0);\n\n    if (s > EPSILON) {\n      out_axis[0] = q[0] / s;\n      out_axis[1] = q[1] / s;\n      out_axis[2] = q[2] / s;\n    } else {\n      // If s is zero, return any axis (no rotation - axis does not matter)\n      out_axis[0] = 1;\n      out_axis[1] = 0;\n      out_axis[2] = 0;\n    }\n\n    return rad;\n  }\n  /**\n   * Multiplies two quat's\n   *\n   * @param {quat} out the receiving quaternion\n   * @param {quat} a the first operand\n   * @param {quat} b the second operand\n   * @returns {quat} out\n   */\n\n  function multiply$6(out, a, b) {\n    var ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    var bx = b[0],\n        by = b[1],\n        bz = b[2],\n        bw = b[3];\n    out[0] = ax * bw + aw * bx + ay * bz - az * by;\n    out[1] = ay * bw + aw * by + az * bx - ax * bz;\n    out[2] = az * bw + aw * bz + ax * by - ay * bx;\n    out[3] = aw * bw - ax * bx - ay * by - az * bz;\n    return out;\n  }\n  /**\n   * Rotates a quaternion by the given angle about the X axis\n   *\n   * @param {quat} out quat receiving operation result\n   * @param {quat} a quat to rotate\n   * @param {number} rad angle (in radians) to rotate\n   * @returns {quat} out\n   */\n\n  function rotateX$2(out, a, rad) {\n    rad *= 0.5;\n    var ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    var bx = Math.sin(rad),\n        bw = Math.cos(rad);\n    out[0] = ax * bw + aw * bx;\n    out[1] = ay * bw + az * bx;\n    out[2] = az * bw - ay * bx;\n    out[3] = aw * bw - ax * bx;\n    return out;\n  }\n  /**\n   * Rotates a quaternion by the given angle about the Y axis\n   *\n   * @param {quat} out quat receiving operation result\n   * @param {quat} a quat to rotate\n   * @param {number} rad angle (in radians) to rotate\n   * @returns {quat} out\n   */\n\n  function rotateY$2(out, a, rad) {\n    rad *= 0.5;\n    var ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    var by = Math.sin(rad),\n        bw = Math.cos(rad);\n    out[0] = ax * bw - az * by;\n    out[1] = ay * bw + aw * by;\n    out[2] = az * bw + ax * by;\n    out[3] = aw * bw - ay * by;\n    return out;\n  }\n  /**\n   * Rotates a quaternion by the given angle about the Z axis\n   *\n   * @param {quat} out quat receiving operation result\n   * @param {quat} a quat to rotate\n   * @param {number} rad angle (in radians) to rotate\n   * @returns {quat} out\n   */\n\n  function rotateZ$2(out, a, rad) {\n    rad *= 0.5;\n    var ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    var bz = Math.sin(rad),\n        bw = Math.cos(rad);\n    out[0] = ax * bw + ay * bz;\n    out[1] = ay * bw - ax * bz;\n    out[2] = az * bw + aw * bz;\n    out[3] = aw * bw - az * bz;\n    return out;\n  }\n  /**\n   * Calculates the W component of a quat from the X, Y, and Z components.\n   * Assumes that quaternion is 1 unit in length.\n   * Any existing W component will be ignored.\n   *\n   * @param {quat} out the receiving quaternion\n   * @param {quat} a quat to calculate W component of\n   * @returns {quat} out\n   */\n\n  function calculateW(out, a) {\n    var x = a[0],\n        y = a[1],\n        z = a[2];\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n    return out;\n  }\n  /**\n   * Performs a spherical linear interpolation between two quat\n   *\n   * @param {quat} out the receiving quaternion\n   * @param {quat} a the first operand\n   * @param {quat} b the second operand\n   * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n   * @returns {quat} out\n   */\n\n  function slerp(out, a, b, t) {\n    // benchmarks:\n    //    http://jsperf.com/quaternion-slerp-implementations\n    var ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    var bx = b[0],\n        by = b[1],\n        bz = b[2],\n        bw = b[3];\n    var omega, cosom, sinom, scale0, scale1; // calc cosine\n\n    cosom = ax * bx + ay * by + az * bz + aw * bw; // adjust signs (if necessary)\n\n    if (cosom < 0.0) {\n      cosom = -cosom;\n      bx = -bx;\n      by = -by;\n      bz = -bz;\n      bw = -bw;\n    } // calculate coefficients\n\n\n    if (1.0 - cosom > EPSILON) {\n      // standard case (slerp)\n      omega = Math.acos(cosom);\n      sinom = Math.sin(omega);\n      scale0 = Math.sin((1.0 - t) * omega) / sinom;\n      scale1 = Math.sin(t * omega) / sinom;\n    } else {\n      // \"from\" and \"to\" quaternions are very close\n      //  ... so we can do a linear interpolation\n      scale0 = 1.0 - t;\n      scale1 = t;\n    } // calculate final values\n\n\n    out[0] = scale0 * ax + scale1 * bx;\n    out[1] = scale0 * ay + scale1 * by;\n    out[2] = scale0 * az + scale1 * bz;\n    out[3] = scale0 * aw + scale1 * bw;\n    return out;\n  }\n  /**\n   * Generates a random quaternion\n   *\n   * @param {quat} out the receiving quaternion\n   * @returns {quat} out\n   */\n\n  function random$2(out) {\n    // Implementation of http://planning.cs.uiuc.edu/node198.html\n    // TODO: Calling random 3 times is probably not the fastest solution\n    var u1 = RANDOM();\n    var u2 = RANDOM();\n    var u3 = RANDOM();\n    var sqrt1MinusU1 = Math.sqrt(1 - u1);\n    var sqrtU1 = Math.sqrt(u1);\n    out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\n    out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\n    out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\n    out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\n    return out;\n  }\n  /**\n   * Calculates the inverse of a quat\n   *\n   * @param {quat} out the receiving quaternion\n   * @param {quat} a quat to calculate inverse of\n   * @returns {quat} out\n   */\n\n  function invert$4(out, a) {\n    var a0 = a[0],\n        a1 = a[1],\n        a2 = a[2],\n        a3 = a[3];\n    var dot$$1 = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n    var invDot = dot$$1 ? 1.0 / dot$$1 : 0; // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n    out[0] = -a0 * invDot;\n    out[1] = -a1 * invDot;\n    out[2] = -a2 * invDot;\n    out[3] = a3 * invDot;\n    return out;\n  }\n  /**\n   * Calculates the conjugate of a quat\n   * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\n   *\n   * @param {quat} out the receiving quaternion\n   * @param {quat} a quat to calculate conjugate of\n   * @returns {quat} out\n   */\n\n  function conjugate(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    out[3] = a[3];\n    return out;\n  }\n  /**\n   * Creates a quaternion from the given 3x3 rotation matrix.\n   *\n   * NOTE: The resultant quaternion is not normalized, so you should be sure\n   * to renormalize the quaternion yourself where necessary.\n   *\n   * @param {quat} out the receiving quaternion\n   * @param {mat3} m rotation matrix\n   * @returns {quat} out\n   * @function\n   */\n\n  function fromMat3(out, m) {\n    // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n    // article \"Quaternion Calculus and Fast Animation\".\n    var fTrace = m[0] + m[4] + m[8];\n    var fRoot;\n\n    if (fTrace > 0.0) {\n      // |w| > 1/2, may as well choose w > 1/2\n      fRoot = Math.sqrt(fTrace + 1.0); // 2w\n\n      out[3] = 0.5 * fRoot;\n      fRoot = 0.5 / fRoot; // 1/(4w)\n\n      out[0] = (m[5] - m[7]) * fRoot;\n      out[1] = (m[6] - m[2]) * fRoot;\n      out[2] = (m[1] - m[3]) * fRoot;\n    } else {\n      // |w| <= 1/2\n      var i = 0;\n      if (m[4] > m[0]) i = 1;\n      if (m[8] > m[i * 3 + i]) i = 2;\n      var j = (i + 1) % 3;\n      var k = (i + 2) % 3;\n      fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n      out[i] = 0.5 * fRoot;\n      fRoot = 0.5 / fRoot;\n      out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n      out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n      out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n    }\n\n    return out;\n  }\n  /**\n   * Creates a quaternion from the given euler angle x, y, z.\n   *\n   * @param {quat} out the receiving quaternion\n   * @param {x} Angle to rotate around X axis in degrees.\n   * @param {y} Angle to rotate around Y axis in degrees.\n   * @param {z} Angle to rotate around Z axis in degrees.\n   * @returns {quat} out\n   * @function\n   */\n\n  function fromEuler(out, x, y, z) {\n    var halfToRad = 0.5 * Math.PI / 180.0;\n    x *= halfToRad;\n    y *= halfToRad;\n    z *= halfToRad;\n    var sx = Math.sin(x);\n    var cx = Math.cos(x);\n    var sy = Math.sin(y);\n    var cy = Math.cos(y);\n    var sz = Math.sin(z);\n    var cz = Math.cos(z);\n    out[0] = sx * cy * cz - cx * sy * sz;\n    out[1] = cx * sy * cz + sx * cy * sz;\n    out[2] = cx * cy * sz - sx * sy * cz;\n    out[3] = cx * cy * cz + sx * sy * sz;\n    return out;\n  }\n  /**\n   * Returns a string representation of a quatenion\n   *\n   * @param {quat} a vector to represent as a string\n   * @returns {String} string representation of the vector\n   */\n\n  function str$6(a) {\n    return 'quat(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n  }\n  /**\n   * Creates a new quat initialized with values from an existing quaternion\n   *\n   * @param {quat} a quaternion to clone\n   * @returns {quat} a new quaternion\n   * @function\n   */\n\n  var clone$6 = clone$5;\n  /**\n   * Creates a new quat initialized with the given values\n   *\n   * @param {Number} x X component\n   * @param {Number} y Y component\n   * @param {Number} z Z component\n   * @param {Number} w W component\n   * @returns {quat} a new quaternion\n   * @function\n   */\n\n  var fromValues$6 = fromValues$5;\n  /**\n   * Copy the values from one quat to another\n   *\n   * @param {quat} out the receiving quaternion\n   * @param {quat} a the source quaternion\n   * @returns {quat} out\n   * @function\n   */\n\n  var copy$6 = copy$5;\n  /**\n   * Set the components of a quat to the given values\n   *\n   * @param {quat} out the receiving quaternion\n   * @param {Number} x X component\n   * @param {Number} y Y component\n   * @param {Number} z Z component\n   * @param {Number} w W component\n   * @returns {quat} out\n   * @function\n   */\n\n  var set$6 = set$5;\n  /**\n   * Adds two quat's\n   *\n   * @param {quat} out the receiving quaternion\n   * @param {quat} a the first operand\n   * @param {quat} b the second operand\n   * @returns {quat} out\n   * @function\n   */\n\n  var add$6 = add$5;\n  /**\n   * Alias for {@link quat.multiply}\n   * @function\n   */\n\n  var mul$6 = multiply$6;\n  /**\n   * Scales a quat by a scalar number\n   *\n   * @param {quat} out the receiving vector\n   * @param {quat} a the vector to scale\n   * @param {Number} b amount to scale the vector by\n   * @returns {quat} out\n   * @function\n   */\n\n  var scale$6 = scale$5;\n  /**\n   * Calculates the dot product of two quat's\n   *\n   * @param {quat} a the first operand\n   * @param {quat} b the second operand\n   * @returns {Number} dot product of a and b\n   * @function\n   */\n\n  var dot$2 = dot$1;\n  /**\n   * Performs a linear interpolation between two quat's\n   *\n   * @param {quat} out the receiving quaternion\n   * @param {quat} a the first operand\n   * @param {quat} b the second operand\n   * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n   * @returns {quat} out\n   * @function\n   */\n\n  var lerp$2 = lerp$1;\n  /**\n   * Calculates the length of a quat\n   *\n   * @param {quat} a vector to calculate length of\n   * @returns {Number} length of a\n   */\n\n  var length$2 = length$1;\n  /**\n   * Alias for {@link quat.length}\n   * @function\n   */\n\n  var len$2 = length$2;\n  /**\n   * Calculates the squared length of a quat\n   *\n   * @param {quat} a vector to calculate squared length of\n   * @returns {Number} squared length of a\n   * @function\n   */\n\n  var squaredLength$2 = squaredLength$1;\n  /**\n   * Alias for {@link quat.squaredLength}\n   * @function\n   */\n\n  var sqrLen$2 = squaredLength$2;\n  /**\n   * Normalize a quat\n   *\n   * @param {quat} out the receiving quaternion\n   * @param {quat} a quaternion to normalize\n   * @returns {quat} out\n   * @function\n   */\n\n  var normalize$2 = normalize$1;\n  /**\n   * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\n   *\n   * @param {quat} a The first quaternion.\n   * @param {quat} b The second quaternion.\n   * @returns {Boolean} True if the vectors are equal, false otherwise.\n   */\n\n  var exactEquals$6 = exactEquals$5;\n  /**\n   * Returns whether or not the quaternions have approximately the same elements in the same position.\n   *\n   * @param {quat} a The first vector.\n   * @param {quat} b The second vector.\n   * @returns {Boolean} True if the vectors are equal, false otherwise.\n   */\n\n  var equals$7 = equals$6;\n  /**\n   * Sets a quaternion to represent the shortest rotation from one\n   * vector to another.\n   *\n   * Both vectors are assumed to be unit length.\n   *\n   * @param {quat} out the receiving quaternion.\n   * @param {vec3} a the initial vector\n   * @param {vec3} b the destination vector\n   * @returns {quat} out\n   */\n\n  var rotationTo = function () {\n    var tmpvec3 = create$4();\n    var xUnitVec3 = fromValues$4(1, 0, 0);\n    var yUnitVec3 = fromValues$4(0, 1, 0);\n    return function (out, a, b) {\n      var dot$$1 = dot(a, b);\n\n      if (dot$$1 < -0.999999) {\n        cross(tmpvec3, xUnitVec3, a);\n        if (len(tmpvec3) < 0.000001) cross(tmpvec3, yUnitVec3, a);\n        normalize(tmpvec3, tmpvec3);\n        setAxisAngle(out, tmpvec3, Math.PI);\n        return out;\n      } else if (dot$$1 > 0.999999) {\n        out[0] = 0;\n        out[1] = 0;\n        out[2] = 0;\n        out[3] = 1;\n        return out;\n      } else {\n        cross(tmpvec3, a, b);\n        out[0] = tmpvec3[0];\n        out[1] = tmpvec3[1];\n        out[2] = tmpvec3[2];\n        out[3] = 1 + dot$$1;\n        return normalize$2(out, out);\n      }\n    };\n  }();\n  /**\n   * Performs a spherical linear interpolation with two control points\n   *\n   * @param {quat} out the receiving quaternion\n   * @param {quat} a the first operand\n   * @param {quat} b the second operand\n   * @param {quat} c the third operand\n   * @param {quat} d the fourth operand\n   * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n   * @returns {quat} out\n   */\n\n  var sqlerp = function () {\n    var temp1 = create$6();\n    var temp2 = create$6();\n    return function (out, a, b, c, d, t) {\n      slerp(temp1, a, d, t);\n      slerp(temp2, b, c, t);\n      slerp(out, temp1, temp2, 2 * t * (1 - t));\n      return out;\n    };\n  }();\n  /**\n   * Sets the specified quaternion with values corresponding to the given\n   * axes. Each axis is a vec3 and is expected to be unit length and\n   * perpendicular to all other specified axes.\n   *\n   * @param {vec3} view  the vector representing the viewing direction\n   * @param {vec3} right the vector representing the local \"right\" direction\n   * @param {vec3} up    the vector representing the local \"up\" direction\n   * @returns {quat} out\n   */\n\n  var setAxes = function () {\n    var matr = create$2();\n    return function (out, view, right, up) {\n      matr[0] = right[0];\n      matr[3] = right[1];\n      matr[6] = right[2];\n      matr[1] = up[0];\n      matr[4] = up[1];\n      matr[7] = up[2];\n      matr[2] = -view[0];\n      matr[5] = -view[1];\n      matr[8] = -view[2];\n      return normalize$2(out, fromMat3(out, matr));\n    };\n  }();\n\n  var quat = /*#__PURE__*/Object.freeze({\n    create: create$6,\n    identity: identity$4,\n    setAxisAngle: setAxisAngle,\n    getAxisAngle: getAxisAngle,\n    multiply: multiply$6,\n    rotateX: rotateX$2,\n    rotateY: rotateY$2,\n    rotateZ: rotateZ$2,\n    calculateW: calculateW,\n    slerp: slerp,\n    random: random$2,\n    invert: invert$4,\n    conjugate: conjugate,\n    fromMat3: fromMat3,\n    fromEuler: fromEuler,\n    str: str$6,\n    clone: clone$6,\n    fromValues: fromValues$6,\n    copy: copy$6,\n    set: set$6,\n    add: add$6,\n    mul: mul$6,\n    scale: scale$6,\n    dot: dot$2,\n    lerp: lerp$2,\n    length: length$2,\n    len: len$2,\n    squaredLength: squaredLength$2,\n    sqrLen: sqrLen$2,\n    normalize: normalize$2,\n    exactEquals: exactEquals$6,\n    equals: equals$7,\n    rotationTo: rotationTo,\n    sqlerp: sqlerp,\n    setAxes: setAxes\n  });\n\n  /**\n   * Dual Quaternion<br>\n   * Format: [real, dual]<br>\n   * Quaternion format: XYZW<br>\n   * Make sure to have normalized dual quaternions, otherwise the functions may not work as intended.<br>\n   * @module quat2\n   */\n\n  /**\n   * Creates a new identity dual quat\n   *\n   * @returns {quat2} a new dual quaternion [real -> rotation, dual -> translation]\n   */\n\n  function create$7() {\n    var dq = new ARRAY_TYPE(8);\n\n    if (ARRAY_TYPE != Float32Array) {\n      dq[0] = 0;\n      dq[1] = 0;\n      dq[2] = 0;\n      dq[4] = 0;\n      dq[5] = 0;\n      dq[6] = 0;\n      dq[7] = 0;\n    }\n\n    dq[3] = 1;\n    return dq;\n  }\n  /**\n   * Creates a new quat initialized with values from an existing quaternion\n   *\n   * @param {quat2} a dual quaternion to clone\n   * @returns {quat2} new dual quaternion\n   * @function\n   */\n\n  function clone$7(a) {\n    var dq = new ARRAY_TYPE(8);\n    dq[0] = a[0];\n    dq[1] = a[1];\n    dq[2] = a[2];\n    dq[3] = a[3];\n    dq[4] = a[4];\n    dq[5] = a[5];\n    dq[6] = a[6];\n    dq[7] = a[7];\n    return dq;\n  }\n  /**\n   * Creates a new dual quat initialized with the given values\n   *\n   * @param {Number} x1 X component\n   * @param {Number} y1 Y component\n   * @param {Number} z1 Z component\n   * @param {Number} w1 W component\n   * @param {Number} x2 X component\n   * @param {Number} y2 Y component\n   * @param {Number} z2 Z component\n   * @param {Number} w2 W component\n   * @returns {quat2} new dual quaternion\n   * @function\n   */\n\n  function fromValues$7(x1, y1, z1, w1, x2, y2, z2, w2) {\n    var dq = new ARRAY_TYPE(8);\n    dq[0] = x1;\n    dq[1] = y1;\n    dq[2] = z1;\n    dq[3] = w1;\n    dq[4] = x2;\n    dq[5] = y2;\n    dq[6] = z2;\n    dq[7] = w2;\n    return dq;\n  }\n  /**\n   * Creates a new dual quat from the given values (quat and translation)\n   *\n   * @param {Number} x1 X component\n   * @param {Number} y1 Y component\n   * @param {Number} z1 Z component\n   * @param {Number} w1 W component\n   * @param {Number} x2 X component (translation)\n   * @param {Number} y2 Y component (translation)\n   * @param {Number} z2 Z component (translation)\n   * @returns {quat2} new dual quaternion\n   * @function\n   */\n\n  function fromRotationTranslationValues(x1, y1, z1, w1, x2, y2, z2) {\n    var dq = new ARRAY_TYPE(8);\n    dq[0] = x1;\n    dq[1] = y1;\n    dq[2] = z1;\n    dq[3] = w1;\n    var ax = x2 * 0.5,\n        ay = y2 * 0.5,\n        az = z2 * 0.5;\n    dq[4] = ax * w1 + ay * z1 - az * y1;\n    dq[5] = ay * w1 + az * x1 - ax * z1;\n    dq[6] = az * w1 + ax * y1 - ay * x1;\n    dq[7] = -ax * x1 - ay * y1 - az * z1;\n    return dq;\n  }\n  /**\n   * Creates a dual quat from a quaternion and a translation\n   *\n   * @param {quat2} dual quaternion receiving operation result\n   * @param {quat} q quaternion\n   * @param {vec3} t tranlation vector\n   * @returns {quat2} dual quaternion receiving operation result\n   * @function\n   */\n\n  function fromRotationTranslation$1(out, q, t) {\n    var ax = t[0] * 0.5,\n        ay = t[1] * 0.5,\n        az = t[2] * 0.5,\n        bx = q[0],\n        by = q[1],\n        bz = q[2],\n        bw = q[3];\n    out[0] = bx;\n    out[1] = by;\n    out[2] = bz;\n    out[3] = bw;\n    out[4] = ax * bw + ay * bz - az * by;\n    out[5] = ay * bw + az * bx - ax * bz;\n    out[6] = az * bw + ax * by - ay * bx;\n    out[7] = -ax * bx - ay * by - az * bz;\n    return out;\n  }\n  /**\n   * Creates a dual quat from a translation\n   *\n   * @param {quat2} dual quaternion receiving operation result\n   * @param {vec3} t translation vector\n   * @returns {quat2} dual quaternion receiving operation result\n   * @function\n   */\n\n  function fromTranslation$3(out, t) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    out[4] = t[0] * 0.5;\n    out[5] = t[1] * 0.5;\n    out[6] = t[2] * 0.5;\n    out[7] = 0;\n    return out;\n  }\n  /**\n   * Creates a dual quat from a quaternion\n   *\n   * @param {quat2} dual quaternion receiving operation result\n   * @param {quat} q the quaternion\n   * @returns {quat2} dual quaternion receiving operation result\n   * @function\n   */\n\n  function fromRotation$4(out, q) {\n    out[0] = q[0];\n    out[1] = q[1];\n    out[2] = q[2];\n    out[3] = q[3];\n    out[4] = 0;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    return out;\n  }\n  /**\n   * Creates a new dual quat from a matrix (4x4)\n   *\n   * @param {quat2} out the dual quaternion\n   * @param {mat4} a the matrix\n   * @returns {quat2} dual quat receiving operation result\n   * @function\n   */\n\n  function fromMat4$1(out, a) {\n    //TODO Optimize this\n    var outer = create$6();\n    getRotation(outer, a);\n    var t = new ARRAY_TYPE(3);\n    getTranslation(t, a);\n    fromRotationTranslation$1(out, outer, t);\n    return out;\n  }\n  /**\n   * Copy the values from one dual quat to another\n   *\n   * @param {quat2} out the receiving dual quaternion\n   * @param {quat2} a the source dual quaternion\n   * @returns {quat2} out\n   * @function\n   */\n\n  function copy$7(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    return out;\n  }\n  /**\n   * Set a dual quat to the identity dual quaternion\n   *\n   * @param {quat2} out the receiving quaternion\n   * @returns {quat2} out\n   */\n\n  function identity$5(out) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    out[4] = 0;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    return out;\n  }\n  /**\n   * Set the components of a dual quat to the given values\n   *\n   * @param {quat2} out the receiving quaternion\n   * @param {Number} x1 X component\n   * @param {Number} y1 Y component\n   * @param {Number} z1 Z component\n   * @param {Number} w1 W component\n   * @param {Number} x2 X component\n   * @param {Number} y2 Y component\n   * @param {Number} z2 Z component\n   * @param {Number} w2 W component\n   * @returns {quat2} out\n   * @function\n   */\n\n  function set$7(out, x1, y1, z1, w1, x2, y2, z2, w2) {\n    out[0] = x1;\n    out[1] = y1;\n    out[2] = z1;\n    out[3] = w1;\n    out[4] = x2;\n    out[5] = y2;\n    out[6] = z2;\n    out[7] = w2;\n    return out;\n  }\n  /**\n   * Gets the real part of a dual quat\n   * @param  {quat} out real part\n   * @param  {quat2} a Dual Quaternion\n   * @return {quat} real part\n   */\n\n  var getReal = copy$6;\n  /**\n   * Gets the dual part of a dual quat\n   * @param  {quat} out dual part\n   * @param  {quat2} a Dual Quaternion\n   * @return {quat} dual part\n   */\n\n  function getDual(out, a) {\n    out[0] = a[4];\n    out[1] = a[5];\n    out[2] = a[6];\n    out[3] = a[7];\n    return out;\n  }\n  /**\n   * Set the real component of a dual quat to the given quaternion\n   *\n   * @param {quat2} out the receiving quaternion\n   * @param {quat} q a quaternion representing the real part\n   * @returns {quat2} out\n   * @function\n   */\n\n  var setReal = copy$6;\n  /**\n   * Set the dual component of a dual quat to the given quaternion\n   *\n   * @param {quat2} out the receiving quaternion\n   * @param {quat} q a quaternion representing the dual part\n   * @returns {quat2} out\n   * @function\n   */\n\n  function setDual(out, q) {\n    out[4] = q[0];\n    out[5] = q[1];\n    out[6] = q[2];\n    out[7] = q[3];\n    return out;\n  }\n  /**\n   * Gets the translation of a normalized dual quat\n   * @param  {vec3} out translation\n   * @param  {quat2} a Dual Quaternion to be decomposed\n   * @return {vec3} translation\n   */\n\n  function getTranslation$1(out, a) {\n    var ax = a[4],\n        ay = a[5],\n        az = a[6],\n        aw = a[7],\n        bx = -a[0],\n        by = -a[1],\n        bz = -a[2],\n        bw = a[3];\n    out[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    out[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    out[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n    return out;\n  }\n  /**\n   * Translates a dual quat by the given vector\n   *\n   * @param {quat2} out the receiving dual quaternion\n   * @param {quat2} a the dual quaternion to translate\n   * @param {vec3} v vector to translate by\n   * @returns {quat2} out\n   */\n\n  function translate$3(out, a, v) {\n    var ax1 = a[0],\n        ay1 = a[1],\n        az1 = a[2],\n        aw1 = a[3],\n        bx1 = v[0] * 0.5,\n        by1 = v[1] * 0.5,\n        bz1 = v[2] * 0.5,\n        ax2 = a[4],\n        ay2 = a[5],\n        az2 = a[6],\n        aw2 = a[7];\n    out[0] = ax1;\n    out[1] = ay1;\n    out[2] = az1;\n    out[3] = aw1;\n    out[4] = aw1 * bx1 + ay1 * bz1 - az1 * by1 + ax2;\n    out[5] = aw1 * by1 + az1 * bx1 - ax1 * bz1 + ay2;\n    out[6] = aw1 * bz1 + ax1 * by1 - ay1 * bx1 + az2;\n    out[7] = -ax1 * bx1 - ay1 * by1 - az1 * bz1 + aw2;\n    return out;\n  }\n  /**\n   * Rotates a dual quat around the X axis\n   *\n   * @param {quat2} out the receiving dual quaternion\n   * @param {quat2} a the dual quaternion to rotate\n   * @param {number} rad how far should the rotation be\n   * @returns {quat2} out\n   */\n\n  function rotateX$3(out, a, rad) {\n    var bx = -a[0],\n        by = -a[1],\n        bz = -a[2],\n        bw = a[3],\n        ax = a[4],\n        ay = a[5],\n        az = a[6],\n        aw = a[7],\n        ax1 = ax * bw + aw * bx + ay * bz - az * by,\n        ay1 = ay * bw + aw * by + az * bx - ax * bz,\n        az1 = az * bw + aw * bz + ax * by - ay * bx,\n        aw1 = aw * bw - ax * bx - ay * by - az * bz;\n    rotateX$2(out, a, rad);\n    bx = out[0];\n    by = out[1];\n    bz = out[2];\n    bw = out[3];\n    out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n    out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n    out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n    out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n    return out;\n  }\n  /**\n   * Rotates a dual quat around the Y axis\n   *\n   * @param {quat2} out the receiving dual quaternion\n   * @param {quat2} a the dual quaternion to rotate\n   * @param {number} rad how far should the rotation be\n   * @returns {quat2} out\n   */\n\n  function rotateY$3(out, a, rad) {\n    var bx = -a[0],\n        by = -a[1],\n        bz = -a[2],\n        bw = a[3],\n        ax = a[4],\n        ay = a[5],\n        az = a[6],\n        aw = a[7],\n        ax1 = ax * bw + aw * bx + ay * bz - az * by,\n        ay1 = ay * bw + aw * by + az * bx - ax * bz,\n        az1 = az * bw + aw * bz + ax * by - ay * bx,\n        aw1 = aw * bw - ax * bx - ay * by - az * bz;\n    rotateY$2(out, a, rad);\n    bx = out[0];\n    by = out[1];\n    bz = out[2];\n    bw = out[3];\n    out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n    out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n    out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n    out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n    return out;\n  }\n  /**\n   * Rotates a dual quat around the Z axis\n   *\n   * @param {quat2} out the receiving dual quaternion\n   * @param {quat2} a the dual quaternion to rotate\n   * @param {number} rad how far should the rotation be\n   * @returns {quat2} out\n   */\n\n  function rotateZ$3(out, a, rad) {\n    var bx = -a[0],\n        by = -a[1],\n        bz = -a[2],\n        bw = a[3],\n        ax = a[4],\n        ay = a[5],\n        az = a[6],\n        aw = a[7],\n        ax1 = ax * bw + aw * bx + ay * bz - az * by,\n        ay1 = ay * bw + aw * by + az * bx - ax * bz,\n        az1 = az * bw + aw * bz + ax * by - ay * bx,\n        aw1 = aw * bw - ax * bx - ay * by - az * bz;\n    rotateZ$2(out, a, rad);\n    bx = out[0];\n    by = out[1];\n    bz = out[2];\n    bw = out[3];\n    out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n    out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n    out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n    out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n    return out;\n  }\n  /**\n   * Rotates a dual quat by a given quaternion (a * q)\n   *\n   * @param {quat2} out the receiving dual quaternion\n   * @param {quat2} a the dual quaternion to rotate\n   * @param {quat} q quaternion to rotate by\n   * @returns {quat2} out\n   */\n\n  function rotateByQuatAppend(out, a, q) {\n    var qx = q[0],\n        qy = q[1],\n        qz = q[2],\n        qw = q[3],\n        ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    out[0] = ax * qw + aw * qx + ay * qz - az * qy;\n    out[1] = ay * qw + aw * qy + az * qx - ax * qz;\n    out[2] = az * qw + aw * qz + ax * qy - ay * qx;\n    out[3] = aw * qw - ax * qx - ay * qy - az * qz;\n    ax = a[4];\n    ay = a[5];\n    az = a[6];\n    aw = a[7];\n    out[4] = ax * qw + aw * qx + ay * qz - az * qy;\n    out[5] = ay * qw + aw * qy + az * qx - ax * qz;\n    out[6] = az * qw + aw * qz + ax * qy - ay * qx;\n    out[7] = aw * qw - ax * qx - ay * qy - az * qz;\n    return out;\n  }\n  /**\n   * Rotates a dual quat by a given quaternion (q * a)\n   *\n   * @param {quat2} out the receiving dual quaternion\n   * @param {quat} q quaternion to rotate by\n   * @param {quat2} a the dual quaternion to rotate\n   * @returns {quat2} out\n   */\n\n  function rotateByQuatPrepend(out, q, a) {\n    var qx = q[0],\n        qy = q[1],\n        qz = q[2],\n        qw = q[3],\n        bx = a[0],\n        by = a[1],\n        bz = a[2],\n        bw = a[3];\n    out[0] = qx * bw + qw * bx + qy * bz - qz * by;\n    out[1] = qy * bw + qw * by + qz * bx - qx * bz;\n    out[2] = qz * bw + qw * bz + qx * by - qy * bx;\n    out[3] = qw * bw - qx * bx - qy * by - qz * bz;\n    bx = a[4];\n    by = a[5];\n    bz = a[6];\n    bw = a[7];\n    out[4] = qx * bw + qw * bx + qy * bz - qz * by;\n    out[5] = qy * bw + qw * by + qz * bx - qx * bz;\n    out[6] = qz * bw + qw * bz + qx * by - qy * bx;\n    out[7] = qw * bw - qx * bx - qy * by - qz * bz;\n    return out;\n  }\n  /**\n   * Rotates a dual quat around a given axis. Does the normalisation automatically\n   *\n   * @param {quat2} out the receiving dual quaternion\n   * @param {quat2} a the dual quaternion to rotate\n   * @param {vec3} axis the axis to rotate around\n   * @param {Number} rad how far the rotation should be\n   * @returns {quat2} out\n   */\n\n  function rotateAroundAxis(out, a, axis, rad) {\n    //Special case for rad = 0\n    if (Math.abs(rad) < EPSILON) {\n      return copy$7(out, a);\n    }\n\n    var axisLength = Math.sqrt(axis[0] * axis[0] + axis[1] * axis[1] + axis[2] * axis[2]);\n    rad = rad * 0.5;\n    var s = Math.sin(rad);\n    var bx = s * axis[0] / axisLength;\n    var by = s * axis[1] / axisLength;\n    var bz = s * axis[2] / axisLength;\n    var bw = Math.cos(rad);\n    var ax1 = a[0],\n        ay1 = a[1],\n        az1 = a[2],\n        aw1 = a[3];\n    out[0] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n    out[1] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n    out[2] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n    out[3] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n    var ax = a[4],\n        ay = a[5],\n        az = a[6],\n        aw = a[7];\n    out[4] = ax * bw + aw * bx + ay * bz - az * by;\n    out[5] = ay * bw + aw * by + az * bx - ax * bz;\n    out[6] = az * bw + aw * bz + ax * by - ay * bx;\n    out[7] = aw * bw - ax * bx - ay * by - az * bz;\n    return out;\n  }\n  /**\n   * Adds two dual quat's\n   *\n   * @param {quat2} out the receiving dual quaternion\n   * @param {quat2} a the first operand\n   * @param {quat2} b the second operand\n   * @returns {quat2} out\n   * @function\n   */\n\n  function add$7(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    out[4] = a[4] + b[4];\n    out[5] = a[5] + b[5];\n    out[6] = a[6] + b[6];\n    out[7] = a[7] + b[7];\n    return out;\n  }\n  /**\n   * Multiplies two dual quat's\n   *\n   * @param {quat2} out the receiving dual quaternion\n   * @param {quat2} a the first operand\n   * @param {quat2} b the second operand\n   * @returns {quat2} out\n   */\n\n  function multiply$7(out, a, b) {\n    var ax0 = a[0],\n        ay0 = a[1],\n        az0 = a[2],\n        aw0 = a[3],\n        bx1 = b[4],\n        by1 = b[5],\n        bz1 = b[6],\n        bw1 = b[7],\n        ax1 = a[4],\n        ay1 = a[5],\n        az1 = a[6],\n        aw1 = a[7],\n        bx0 = b[0],\n        by0 = b[1],\n        bz0 = b[2],\n        bw0 = b[3];\n    out[0] = ax0 * bw0 + aw0 * bx0 + ay0 * bz0 - az0 * by0;\n    out[1] = ay0 * bw0 + aw0 * by0 + az0 * bx0 - ax0 * bz0;\n    out[2] = az0 * bw0 + aw0 * bz0 + ax0 * by0 - ay0 * bx0;\n    out[3] = aw0 * bw0 - ax0 * bx0 - ay0 * by0 - az0 * bz0;\n    out[4] = ax0 * bw1 + aw0 * bx1 + ay0 * bz1 - az0 * by1 + ax1 * bw0 + aw1 * bx0 + ay1 * bz0 - az1 * by0;\n    out[5] = ay0 * bw1 + aw0 * by1 + az0 * bx1 - ax0 * bz1 + ay1 * bw0 + aw1 * by0 + az1 * bx0 - ax1 * bz0;\n    out[6] = az0 * bw1 + aw0 * bz1 + ax0 * by1 - ay0 * bx1 + az1 * bw0 + aw1 * bz0 + ax1 * by0 - ay1 * bx0;\n    out[7] = aw0 * bw1 - ax0 * bx1 - ay0 * by1 - az0 * bz1 + aw1 * bw0 - ax1 * bx0 - ay1 * by0 - az1 * bz0;\n    return out;\n  }\n  /**\n   * Alias for {@link quat2.multiply}\n   * @function\n   */\n\n  var mul$7 = multiply$7;\n  /**\n   * Scales a dual quat by a scalar number\n   *\n   * @param {quat2} out the receiving dual quat\n   * @param {quat2} a the dual quat to scale\n   * @param {Number} b amount to scale the dual quat by\n   * @returns {quat2} out\n   * @function\n   */\n\n  function scale$7(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    out[4] = a[4] * b;\n    out[5] = a[5] * b;\n    out[6] = a[6] * b;\n    out[7] = a[7] * b;\n    return out;\n  }\n  /**\n   * Calculates the dot product of two dual quat's (The dot product of the real parts)\n   *\n   * @param {quat2} a the first operand\n   * @param {quat2} b the second operand\n   * @returns {Number} dot product of a and b\n   * @function\n   */\n\n  var dot$3 = dot$2;\n  /**\n   * Performs a linear interpolation between two dual quats's\n   * NOTE: The resulting dual quaternions won't always be normalized (The error is most noticeable when t = 0.5)\n   *\n   * @param {quat2} out the receiving dual quat\n   * @param {quat2} a the first operand\n   * @param {quat2} b the second operand\n   * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n   * @returns {quat2} out\n   */\n\n  function lerp$3(out, a, b, t) {\n    var mt = 1 - t;\n    if (dot$3(a, b) < 0) t = -t;\n    out[0] = a[0] * mt + b[0] * t;\n    out[1] = a[1] * mt + b[1] * t;\n    out[2] = a[2] * mt + b[2] * t;\n    out[3] = a[3] * mt + b[3] * t;\n    out[4] = a[4] * mt + b[4] * t;\n    out[5] = a[5] * mt + b[5] * t;\n    out[6] = a[6] * mt + b[6] * t;\n    out[7] = a[7] * mt + b[7] * t;\n    return out;\n  }\n  /**\n   * Calculates the inverse of a dual quat. If they are normalized, conjugate is cheaper\n   *\n   * @param {quat2} out the receiving dual quaternion\n   * @param {quat2} a dual quat to calculate inverse of\n   * @returns {quat2} out\n   */\n\n  function invert$5(out, a) {\n    var sqlen = squaredLength$3(a);\n    out[0] = -a[0] / sqlen;\n    out[1] = -a[1] / sqlen;\n    out[2] = -a[2] / sqlen;\n    out[3] = a[3] / sqlen;\n    out[4] = -a[4] / sqlen;\n    out[5] = -a[5] / sqlen;\n    out[6] = -a[6] / sqlen;\n    out[7] = a[7] / sqlen;\n    return out;\n  }\n  /**\n   * Calculates the conjugate of a dual quat\n   * If the dual quaternion is normalized, this function is faster than quat2.inverse and produces the same result.\n   *\n   * @param {quat2} out the receiving quaternion\n   * @param {quat2} a quat to calculate conjugate of\n   * @returns {quat2} out\n   */\n\n  function conjugate$1(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    out[3] = a[3];\n    out[4] = -a[4];\n    out[5] = -a[5];\n    out[6] = -a[6];\n    out[7] = a[7];\n    return out;\n  }\n  /**\n   * Calculates the length of a dual quat\n   *\n   * @param {quat2} a dual quat to calculate length of\n   * @returns {Number} length of a\n   * @function\n   */\n\n  var length$3 = length$2;\n  /**\n   * Alias for {@link quat2.length}\n   * @function\n   */\n\n  var len$3 = length$3;\n  /**\n   * Calculates the squared length of a dual quat\n   *\n   * @param {quat2} a dual quat to calculate squared length of\n   * @returns {Number} squared length of a\n   * @function\n   */\n\n  var squaredLength$3 = squaredLength$2;\n  /**\n   * Alias for {@link quat2.squaredLength}\n   * @function\n   */\n\n  var sqrLen$3 = squaredLength$3;\n  /**\n   * Normalize a dual quat\n   *\n   * @param {quat2} out the receiving dual quaternion\n   * @param {quat2} a dual quaternion to normalize\n   * @returns {quat2} out\n   * @function\n   */\n\n  function normalize$3(out, a) {\n    var magnitude = squaredLength$3(a);\n\n    if (magnitude > 0) {\n      magnitude = Math.sqrt(magnitude);\n      var a0 = a[0] / magnitude;\n      var a1 = a[1] / magnitude;\n      var a2 = a[2] / magnitude;\n      var a3 = a[3] / magnitude;\n      var b0 = a[4];\n      var b1 = a[5];\n      var b2 = a[6];\n      var b3 = a[7];\n      var a_dot_b = a0 * b0 + a1 * b1 + a2 * b2 + a3 * b3;\n      out[0] = a0;\n      out[1] = a1;\n      out[2] = a2;\n      out[3] = a3;\n      out[4] = (b0 - a0 * a_dot_b) / magnitude;\n      out[5] = (b1 - a1 * a_dot_b) / magnitude;\n      out[6] = (b2 - a2 * a_dot_b) / magnitude;\n      out[7] = (b3 - a3 * a_dot_b) / magnitude;\n    }\n\n    return out;\n  }\n  /**\n   * Returns a string representation of a dual quatenion\n   *\n   * @param {quat2} a dual quaternion to represent as a string\n   * @returns {String} string representation of the dual quat\n   */\n\n  function str$7(a) {\n    return 'quat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ')';\n  }\n  /**\n   * Returns whether or not the dual quaternions have exactly the same elements in the same position (when compared with ===)\n   *\n   * @param {quat2} a the first dual quaternion.\n   * @param {quat2} b the second dual quaternion.\n   * @returns {Boolean} true if the dual quaternions are equal, false otherwise.\n   */\n\n  function exactEquals$7(a, b) {\n    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7];\n  }\n  /**\n   * Returns whether or not the dual quaternions have approximately the same elements in the same position.\n   *\n   * @param {quat2} a the first dual quat.\n   * @param {quat2} b the second dual quat.\n   * @returns {Boolean} true if the dual quats are equal, false otherwise.\n   */\n\n  function equals$8(a, b) {\n    var a0 = a[0],\n        a1 = a[1],\n        a2 = a[2],\n        a3 = a[3],\n        a4 = a[4],\n        a5 = a[5],\n        a6 = a[6],\n        a7 = a[7];\n    var b0 = b[0],\n        b1 = b[1],\n        b2 = b[2],\n        b3 = b[3],\n        b4 = b[4],\n        b5 = b[5],\n        b6 = b[6],\n        b7 = b[7];\n    return Math.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7));\n  }\n\n  var quat2 = /*#__PURE__*/Object.freeze({\n    create: create$7,\n    clone: clone$7,\n    fromValues: fromValues$7,\n    fromRotationTranslationValues: fromRotationTranslationValues,\n    fromRotationTranslation: fromRotationTranslation$1,\n    fromTranslation: fromTranslation$3,\n    fromRotation: fromRotation$4,\n    fromMat4: fromMat4$1,\n    copy: copy$7,\n    identity: identity$5,\n    set: set$7,\n    getReal: getReal,\n    getDual: getDual,\n    setReal: setReal,\n    setDual: setDual,\n    getTranslation: getTranslation$1,\n    translate: translate$3,\n    rotateX: rotateX$3,\n    rotateY: rotateY$3,\n    rotateZ: rotateZ$3,\n    rotateByQuatAppend: rotateByQuatAppend,\n    rotateByQuatPrepend: rotateByQuatPrepend,\n    rotateAroundAxis: rotateAroundAxis,\n    add: add$7,\n    multiply: multiply$7,\n    mul: mul$7,\n    scale: scale$7,\n    dot: dot$3,\n    lerp: lerp$3,\n    invert: invert$5,\n    conjugate: conjugate$1,\n    length: length$3,\n    len: len$3,\n    squaredLength: squaredLength$3,\n    sqrLen: sqrLen$3,\n    normalize: normalize$3,\n    str: str$7,\n    exactEquals: exactEquals$7,\n    equals: equals$8\n  });\n\n  /**\n   * 2 Dimensional Vector\n   * @module vec2\n   */\n\n  /**\n   * Creates a new, empty vec2\n   *\n   * @returns {vec2} a new 2D vector\n   */\n\n  function create$8() {\n    var out = new ARRAY_TYPE(2);\n\n    if (ARRAY_TYPE != Float32Array) {\n      out[0] = 0;\n      out[1] = 0;\n    }\n\n    return out;\n  }\n  /**\n   * Creates a new vec2 initialized with values from an existing vector\n   *\n   * @param {vec2} a vector to clone\n   * @returns {vec2} a new 2D vector\n   */\n\n  function clone$8(a) {\n    var out = new ARRAY_TYPE(2);\n    out[0] = a[0];\n    out[1] = a[1];\n    return out;\n  }\n  /**\n   * Creates a new vec2 initialized with the given values\n   *\n   * @param {Number} x X component\n   * @param {Number} y Y component\n   * @returns {vec2} a new 2D vector\n   */\n\n  function fromValues$8(x, y) {\n    var out = new ARRAY_TYPE(2);\n    out[0] = x;\n    out[1] = y;\n    return out;\n  }\n  /**\n   * Copy the values from one vec2 to another\n   *\n   * @param {vec2} out the receiving vector\n   * @param {vec2} a the source vector\n   * @returns {vec2} out\n   */\n\n  function copy$8(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    return out;\n  }\n  /**\n   * Set the components of a vec2 to the given values\n   *\n   * @param {vec2} out the receiving vector\n   * @param {Number} x X component\n   * @param {Number} y Y component\n   * @returns {vec2} out\n   */\n\n  function set$8(out, x, y) {\n    out[0] = x;\n    out[1] = y;\n    return out;\n  }\n  /**\n   * Adds two vec2's\n   *\n   * @param {vec2} out the receiving vector\n   * @param {vec2} a the first operand\n   * @param {vec2} b the second operand\n   * @returns {vec2} out\n   */\n\n  function add$8(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    return out;\n  }\n  /**\n   * Subtracts vector b from vector a\n   *\n   * @param {vec2} out the receiving vector\n   * @param {vec2} a the first operand\n   * @param {vec2} b the second operand\n   * @returns {vec2} out\n   */\n\n  function subtract$6(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    return out;\n  }\n  /**\n   * Multiplies two vec2's\n   *\n   * @param {vec2} out the receiving vector\n   * @param {vec2} a the first operand\n   * @param {vec2} b the second operand\n   * @returns {vec2} out\n   */\n\n  function multiply$8(out, a, b) {\n    out[0] = a[0] * b[0];\n    out[1] = a[1] * b[1];\n    return out;\n  }\n  /**\n   * Divides two vec2's\n   *\n   * @param {vec2} out the receiving vector\n   * @param {vec2} a the first operand\n   * @param {vec2} b the second operand\n   * @returns {vec2} out\n   */\n\n  function divide$2(out, a, b) {\n    out[0] = a[0] / b[0];\n    out[1] = a[1] / b[1];\n    return out;\n  }\n  /**\n   * Math.ceil the components of a vec2\n   *\n   * @param {vec2} out the receiving vector\n   * @param {vec2} a vector to ceil\n   * @returns {vec2} out\n   */\n\n  function ceil$2(out, a) {\n    out[0] = Math.ceil(a[0]);\n    out[1] = Math.ceil(a[1]);\n    return out;\n  }\n  /**\n   * Math.floor the components of a vec2\n   *\n   * @param {vec2} out the receiving vector\n   * @param {vec2} a vector to floor\n   * @returns {vec2} out\n   */\n\n  function floor$2(out, a) {\n    out[0] = Math.floor(a[0]);\n    out[1] = Math.floor(a[1]);\n    return out;\n  }\n  /**\n   * Returns the minimum of two vec2's\n   *\n   * @param {vec2} out the receiving vector\n   * @param {vec2} a the first operand\n   * @param {vec2} b the second operand\n   * @returns {vec2} out\n   */\n\n  function min$2(out, a, b) {\n    out[0] = Math.min(a[0], b[0]);\n    out[1] = Math.min(a[1], b[1]);\n    return out;\n  }\n  /**\n   * Returns the maximum of two vec2's\n   *\n   * @param {vec2} out the receiving vector\n   * @param {vec2} a the first operand\n   * @param {vec2} b the second operand\n   * @returns {vec2} out\n   */\n\n  function max$2(out, a, b) {\n    out[0] = Math.max(a[0], b[0]);\n    out[1] = Math.max(a[1], b[1]);\n    return out;\n  }\n  /**\n   * Math.round the components of a vec2\n   *\n   * @param {vec2} out the receiving vector\n   * @param {vec2} a vector to round\n   * @returns {vec2} out\n   */\n\n  function round$2(out, a) {\n    out[0] = Math.round(a[0]);\n    out[1] = Math.round(a[1]);\n    return out;\n  }\n  /**\n   * Scales a vec2 by a scalar number\n   *\n   * @param {vec2} out the receiving vector\n   * @param {vec2} a the vector to scale\n   * @param {Number} b amount to scale the vector by\n   * @returns {vec2} out\n   */\n\n  function scale$8(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    return out;\n  }\n  /**\n   * Adds two vec2's after scaling the second operand by a scalar value\n   *\n   * @param {vec2} out the receiving vector\n   * @param {vec2} a the first operand\n   * @param {vec2} b the second operand\n   * @param {Number} scale the amount to scale b by before adding\n   * @returns {vec2} out\n   */\n\n  function scaleAndAdd$2(out, a, b, scale) {\n    out[0] = a[0] + b[0] * scale;\n    out[1] = a[1] + b[1] * scale;\n    return out;\n  }\n  /**\n   * Calculates the euclidian distance between two vec2's\n   *\n   * @param {vec2} a the first operand\n   * @param {vec2} b the second operand\n   * @returns {Number} distance between a and b\n   */\n\n  function distance$2(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1];\n    return Math.sqrt(x * x + y * y);\n  }\n  /**\n   * Calculates the squared euclidian distance between two vec2's\n   *\n   * @param {vec2} a the first operand\n   * @param {vec2} b the second operand\n   * @returns {Number} squared distance between a and b\n   */\n\n  function squaredDistance$2(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1];\n    return x * x + y * y;\n  }\n  /**\n   * Calculates the length of a vec2\n   *\n   * @param {vec2} a vector to calculate length of\n   * @returns {Number} length of a\n   */\n\n  function length$4(a) {\n    var x = a[0],\n        y = a[1];\n    return Math.sqrt(x * x + y * y);\n  }\n  /**\n   * Calculates the squared length of a vec2\n   *\n   * @param {vec2} a vector to calculate squared length of\n   * @returns {Number} squared length of a\n   */\n\n  function squaredLength$4(a) {\n    var x = a[0],\n        y = a[1];\n    return x * x + y * y;\n  }\n  /**\n   * Negates the components of a vec2\n   *\n   * @param {vec2} out the receiving vector\n   * @param {vec2} a vector to negate\n   * @returns {vec2} out\n   */\n\n  function negate$2(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    return out;\n  }\n  /**\n   * Returns the inverse of the components of a vec2\n   *\n   * @param {vec2} out the receiving vector\n   * @param {vec2} a vector to invert\n   * @returns {vec2} out\n   */\n\n  function inverse$2(out, a) {\n    out[0] = 1.0 / a[0];\n    out[1] = 1.0 / a[1];\n    return out;\n  }\n  /**\n   * Normalize a vec2\n   *\n   * @param {vec2} out the receiving vector\n   * @param {vec2} a vector to normalize\n   * @returns {vec2} out\n   */\n\n  function normalize$4(out, a) {\n    var x = a[0],\n        y = a[1];\n    var len = x * x + y * y;\n\n    if (len > 0) {\n      //TODO: evaluate use of glm_invsqrt here?\n      len = 1 / Math.sqrt(len);\n    }\n\n    out[0] = a[0] * len;\n    out[1] = a[1] * len;\n    return out;\n  }\n  /**\n   * Calculates the dot product of two vec2's\n   *\n   * @param {vec2} a the first operand\n   * @param {vec2} b the second operand\n   * @returns {Number} dot product of a and b\n   */\n\n  function dot$4(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  /**\n   * Computes the cross product of two vec2's\n   * Note that the cross product must by definition produce a 3D vector\n   *\n   * @param {vec3} out the receiving vector\n   * @param {vec2} a the first operand\n   * @param {vec2} b the second operand\n   * @returns {vec3} out\n   */\n\n  function cross$2(out, a, b) {\n    var z = a[0] * b[1] - a[1] * b[0];\n    out[0] = out[1] = 0;\n    out[2] = z;\n    return out;\n  }\n  /**\n   * Performs a linear interpolation between two vec2's\n   *\n   * @param {vec2} out the receiving vector\n   * @param {vec2} a the first operand\n   * @param {vec2} b the second operand\n   * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n   * @returns {vec2} out\n   */\n\n  function lerp$4(out, a, b, t) {\n    var ax = a[0],\n        ay = a[1];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    return out;\n  }\n  /**\n   * Generates a random vector with the given scale\n   *\n   * @param {vec2} out the receiving vector\n   * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n   * @returns {vec2} out\n   */\n\n  function random$3(out, scale) {\n    scale = scale || 1.0;\n    var r = RANDOM() * 2.0 * Math.PI;\n    out[0] = Math.cos(r) * scale;\n    out[1] = Math.sin(r) * scale;\n    return out;\n  }\n  /**\n   * Transforms the vec2 with a mat2\n   *\n   * @param {vec2} out the receiving vector\n   * @param {vec2} a the vector to transform\n   * @param {mat2} m matrix to transform with\n   * @returns {vec2} out\n   */\n\n  function transformMat2(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[2] * y;\n    out[1] = m[1] * x + m[3] * y;\n    return out;\n  }\n  /**\n   * Transforms the vec2 with a mat2d\n   *\n   * @param {vec2} out the receiving vector\n   * @param {vec2} a the vector to transform\n   * @param {mat2d} m matrix to transform with\n   * @returns {vec2} out\n   */\n\n  function transformMat2d(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[2] * y + m[4];\n    out[1] = m[1] * x + m[3] * y + m[5];\n    return out;\n  }\n  /**\n   * Transforms the vec2 with a mat3\n   * 3rd vector component is implicitly '1'\n   *\n   * @param {vec2} out the receiving vector\n   * @param {vec2} a the vector to transform\n   * @param {mat3} m matrix to transform with\n   * @returns {vec2} out\n   */\n\n  function transformMat3$1(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[3] * y + m[6];\n    out[1] = m[1] * x + m[4] * y + m[7];\n    return out;\n  }\n  /**\n   * Transforms the vec2 with a mat4\n   * 3rd vector component is implicitly '0'\n   * 4th vector component is implicitly '1'\n   *\n   * @param {vec2} out the receiving vector\n   * @param {vec2} a the vector to transform\n   * @param {mat4} m matrix to transform with\n   * @returns {vec2} out\n   */\n\n  function transformMat4$2(out, a, m) {\n    var x = a[0];\n    var y = a[1];\n    out[0] = m[0] * x + m[4] * y + m[12];\n    out[1] = m[1] * x + m[5] * y + m[13];\n    return out;\n  }\n  /**\n   * Rotate a 2D vector\n   * @param {vec2} out The receiving vec2\n   * @param {vec2} a The vec2 point to rotate\n   * @param {vec2} b The origin of the rotation\n   * @param {Number} c The angle of rotation\n   * @returns {vec2} out\n   */\n\n  function rotate$4(out, a, b, c) {\n    //Translate point to the origin\n    var p0 = a[0] - b[0],\n        p1 = a[1] - b[1],\n        sinC = Math.sin(c),\n        cosC = Math.cos(c); //perform rotation and translate to correct position\n\n    out[0] = p0 * cosC - p1 * sinC + b[0];\n    out[1] = p0 * sinC + p1 * cosC + b[1];\n    return out;\n  }\n  /**\n   * Get the angle between two 2D vectors\n   * @param {vec2} a The first operand\n   * @param {vec2} b The second operand\n   * @returns {Number} The angle in radians\n   */\n\n  function angle$1(a, b) {\n    var x1 = a[0],\n        y1 = a[1],\n        x2 = b[0],\n        y2 = b[1];\n    var len1 = x1 * x1 + y1 * y1;\n\n    if (len1 > 0) {\n      //TODO: evaluate use of glm_invsqrt here?\n      len1 = 1 / Math.sqrt(len1);\n    }\n\n    var len2 = x2 * x2 + y2 * y2;\n\n    if (len2 > 0) {\n      //TODO: evaluate use of glm_invsqrt here?\n      len2 = 1 / Math.sqrt(len2);\n    }\n\n    var cosine = (x1 * x2 + y1 * y2) * len1 * len2;\n\n    if (cosine > 1.0) {\n      return 0;\n    } else if (cosine < -1.0) {\n      return Math.PI;\n    } else {\n      return Math.acos(cosine);\n    }\n  }\n  /**\n   * Set the components of a vec2 to zero\n   *\n   * @param {vec2} out the receiving vector\n   * @returns {vec2} out\n   */\n\n  function zero$2(out) {\n    out[0] = 0.0;\n    out[1] = 0.0;\n    return out;\n  }\n  /**\n   * Returns a string representation of a vector\n   *\n   * @param {vec2} a vector to represent as a string\n   * @returns {String} string representation of the vector\n   */\n\n  function str$8(a) {\n    return 'vec2(' + a[0] + ', ' + a[1] + ')';\n  }\n  /**\n   * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\n   *\n   * @param {vec2} a The first vector.\n   * @param {vec2} b The second vector.\n   * @returns {Boolean} True if the vectors are equal, false otherwise.\n   */\n\n  function exactEquals$8(a, b) {\n    return a[0] === b[0] && a[1] === b[1];\n  }\n  /**\n   * Returns whether or not the vectors have approximately the same elements in the same position.\n   *\n   * @param {vec2} a The first vector.\n   * @param {vec2} b The second vector.\n   * @returns {Boolean} True if the vectors are equal, false otherwise.\n   */\n\n  function equals$9(a, b) {\n    var a0 = a[0],\n        a1 = a[1];\n    var b0 = b[0],\n        b1 = b[1];\n    return Math.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));\n  }\n  /**\n   * Alias for {@link vec2.length}\n   * @function\n   */\n\n  var len$4 = length$4;\n  /**\n   * Alias for {@link vec2.subtract}\n   * @function\n   */\n\n  var sub$6 = subtract$6;\n  /**\n   * Alias for {@link vec2.multiply}\n   * @function\n   */\n\n  var mul$8 = multiply$8;\n  /**\n   * Alias for {@link vec2.divide}\n   * @function\n   */\n\n  var div$2 = divide$2;\n  /**\n   * Alias for {@link vec2.distance}\n   * @function\n   */\n\n  var dist$2 = distance$2;\n  /**\n   * Alias for {@link vec2.squaredDistance}\n   * @function\n   */\n\n  var sqrDist$2 = squaredDistance$2;\n  /**\n   * Alias for {@link vec2.squaredLength}\n   * @function\n   */\n\n  var sqrLen$4 = squaredLength$4;\n  /**\n   * Perform some operation over an array of vec2s.\n   *\n   * @param {Array} a the array of vectors to iterate over\n   * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\n   * @param {Number} offset Number of elements to skip at the beginning of the array\n   * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\n   * @param {Function} fn Function to call for each vector in the array\n   * @param {Object} [arg] additional argument to pass to fn\n   * @returns {Array} a\n   * @function\n   */\n\n  var forEach$2 = function () {\n    var vec = create$8();\n    return function (a, stride, offset, count, fn, arg) {\n      var i, l;\n\n      if (!stride) {\n        stride = 2;\n      }\n\n      if (!offset) {\n        offset = 0;\n      }\n\n      if (count) {\n        l = Math.min(count * stride + offset, a.length);\n      } else {\n        l = a.length;\n      }\n\n      for (i = offset; i < l; i += stride) {\n        vec[0] = a[i];\n        vec[1] = a[i + 1];\n        fn(vec, vec, arg);\n        a[i] = vec[0];\n        a[i + 1] = vec[1];\n      }\n\n      return a;\n    };\n  }();\n\n  var vec2 = /*#__PURE__*/Object.freeze({\n    create: create$8,\n    clone: clone$8,\n    fromValues: fromValues$8,\n    copy: copy$8,\n    set: set$8,\n    add: add$8,\n    subtract: subtract$6,\n    multiply: multiply$8,\n    divide: divide$2,\n    ceil: ceil$2,\n    floor: floor$2,\n    min: min$2,\n    max: max$2,\n    round: round$2,\n    scale: scale$8,\n    scaleAndAdd: scaleAndAdd$2,\n    distance: distance$2,\n    squaredDistance: squaredDistance$2,\n    length: length$4,\n    squaredLength: squaredLength$4,\n    negate: negate$2,\n    inverse: inverse$2,\n    normalize: normalize$4,\n    dot: dot$4,\n    cross: cross$2,\n    lerp: lerp$4,\n    random: random$3,\n    transformMat2: transformMat2,\n    transformMat2d: transformMat2d,\n    transformMat3: transformMat3$1,\n    transformMat4: transformMat4$2,\n    rotate: rotate$4,\n    angle: angle$1,\n    zero: zero$2,\n    str: str$8,\n    exactEquals: exactEquals$8,\n    equals: equals$9,\n    len: len$4,\n    sub: sub$6,\n    mul: mul$8,\n    div: div$2,\n    dist: dist$2,\n    sqrDist: sqrDist$2,\n    sqrLen: sqrLen$4,\n    forEach: forEach$2\n  });\n\n  exports.glMatrix = common;\n  exports.mat2 = mat2;\n  exports.mat2d = mat2d;\n  exports.mat3 = mat3;\n  exports.mat4 = mat4;\n  exports.quat = quat;\n  exports.quat2 = quat2;\n  exports.vec2 = vec2;\n  exports.vec3 = vec3;\n  exports.vec4 = vec4;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","/// Operations.js\n/// This file is about the mechanism that operates th\nimport {vec3} from './gl-matrix.js'\nvar lookAt = [0,0,-1];\nvar eye = [0,2,3];\nvar cameraUP = [0,1,0];\n\nvar test=vec3.create(); //作为接受vec3.multiply的结果的一个向量而已\nvar test2 = vec3.create();\nvar test3 = vec3.create();\nvar CameraSpeed = [0.2,0.2,0.2]\nvar pitch=0, yaw=0; //设置视角的角度，水平面一个，垂直一个\n\n// const radin = 10; //随便设一个半径\n\n\ndocument.addEventListener('keydown', (event) => {\n    const keyName = event.key;\n\n    if (keyName === 'a') {\n        vec3.cross(test2,eye,cameraUP);\n        vec3.add(eye,eye,vec3.multiply(test3,test2,CameraSpeed));\n\n        return;\n    }\n    if (keyName === 'd') {\n        vec3.cross(test2,eye,cameraUP);\n        vec3.sub(eye,eye,vec3.multiply(test3,test2,CameraSpeed));\n        return;\n    }\n    if (keyName === 'w') {\n        vec3.add(eye,eye,vec3.multiply(test,lookAt,CameraSpeed));\n        return;\n    }\n    if (keyName === 's') {\n        vec3.sub(eye,eye,vec3.multiply(test,lookAt,CameraSpeed));\n        return;\n    }\n\n\n}, false);\n\n\n\n\nlet last_position={};\ndocument.addEventListener('mousemove', (event) => {\n\n    if (typeof(last_position.x) !=\"undefined\" ) {\n\n        var deltaX = -last_position.x + event.clientX,\n            deltaY = -last_position.y + event.clientY;\n\n        if (Math.abs(deltaX) > Math.abs(deltaY) && deltaX > 0) {\n            yaw+=0.1;\n        }else if (Math.abs(deltaX) > Math.abs(deltaY) && deltaX < 0) {\n            yaw-=0.1;\n        }else if (Math.abs(deltaY) > Math.abs(deltaX) && deltaY > 0) {\n            pitch-=0.1;\n        }else if (Math.abs(deltaY) > Math.abs(deltaX) && deltaY < 0) {\n            pitch+=0.1;\n        }\n        if(pitch>Math.PI/2-0.01) pitch=Math.PI/2-0.01;\n        if(pitch<-Math.PI/2+0.01) pitch=-Math.PI/2+0.01;\n    }\n    last_position = {\n        x : event.clientX,\n        y : event.clientY\n    };\n    lookAt[0]=Math.cos(pitch)*Math.cos(yaw);\n    lookAt[1]=Math.sin(pitch);\n    lookAt[2]=Math.cos(pitch)*Math.sin(yaw);\n    // console.log(pitch);\n\n}, false);\n\nexport {lookAt,eye,cameraUP};","import {mat4,vec3} from './gl-matrix.js';\nimport {lookAt,eye,cameraUP} from './operations.js';\nlet final_lookAt = vec3.create();\n\nfunction Draw(gl, programInfo, Objects)\n{\n    // Initialize Projection and View Matrix\n    const fieldOfView = 100 * Math.PI / 180;   // in radians\n    const aspect = gl.canvas.clientWidth / gl.canvas.clientHeight;\n    const zNear = 0.0001;   // 可能得设为这个值不然效果太诡异了\n    const zFar = 120.0;\n    const ProjectionMatrix = mat4.create();\n    mat4.perspective(ProjectionMatrix,\n        fieldOfView,\n        aspect,\n        zNear,\n        zFar);\n\n    vec3.add(final_lookAt,eye,lookAt);\n    const ViewMatrix = mat4.create();\n    mat4.lookAt(ViewMatrix,\n        eye,\n        final_lookAt,\n        cameraUP);\n    // console.log(lookAt);\n    let StackModelMatrix = [mat4.create()];\n    DrawGenericObject(gl, programInfo, Objects.Robot, ProjectionMatrix, ViewMatrix, StackModelMatrix);\n    DrawGenericObject(gl, programInfo, Objects.EnvSystem, ProjectionMatrix, ViewMatrix, StackModelMatrix);\n    DrawGenericCube(gl, programInfo, Objects.SkyBox, ProjectionMatrix, ViewMatrix, StackModelMatrix);\n\n    // DrawEnv(gl, programInfo, Objects.Robot, ProjectionMatrix, ViewMatrix);\n    // DrawEnv(gl, programInfo, Objects.EnvSystem, ProjectionMatrix, ViewMatrix);\n}\n\nfunction DrawGenericObject(gl, programInfo, Objects, ProjectionMatrix, ViewMatrix, StackModelMatrix)\n{\n    let lastMatrix = StackModelMatrix.pop();\n    let currentModelMatrix = Objects.ModelMatrix;\n    let multipliedModelMatrices = mat4.create();\n    multipliedModelMatrices = mat4.multiply(multipliedModelMatrices, lastMatrix, currentModelMatrix);\n    StackModelMatrix.push(lastMatrix);\n    StackModelMatrix.push(multipliedModelMatrices);\n\n    DrawBasic(Objects.Buffer, multipliedModelMatrices, Objects.Texture);\n\n    const CountAdjObj = Objects.AdjObj.length;\n    for (let i = 0; i < CountAdjObj; i++)\n    {\n        DrawGenericObject(gl, programInfo, Objects.AdjObj[i], ProjectionMatrix, ViewMatrix, StackModelMatrix);\n    }\n    StackModelMatrix.pop();\n\n    return;\n\n    function DrawBasic(buffer, ModelMatrix, Texture)\n    {\n        {\n            const numComponents = 3;\n            const type = gl.FLOAT;\n            const normalize = false;\n            const stride = 0;\n            const offset = 0;\n            gl.bindBuffer(gl.ARRAY_BUFFER, buffer.VertexBuffer);\n            gl.vertexAttribPointer(\n                programInfo.attribLocations.vertexPosition,\n                numComponents,\n                type,\n                normalize,\n                stride,\n                offset);\n            gl.enableVertexAttribArray(\n                programInfo.attribLocations.vertexPosition);\n        }\n\n        {\n            const numComponents = 3;\n            const type = gl.FLOAT;\n            const normalize = false;\n            const stride = 0;\n            const offset = 0;\n            gl.bindBuffer(gl.ARRAY_BUFFER, buffer.NormalBuffer);\n            gl.vertexAttribPointer(\n                programInfo.attribLocations.normalPosition,\n                numComponents,\n                type,\n                normalize,\n                stride,\n                offset);\n            gl.enableVertexAttribArray(\n                programInfo.attribLocations.normalPosition);\n        }\n\n        {\n            const numComponents = 2;\n            const type = gl.FLOAT;\n            const normalize = false;\n            const stride = 0;\n            const offset = 0;\n            gl.bindBuffer(gl.ARRAY_BUFFER, buffer.TextureBuffer);\n            gl.vertexAttribPointer(\n                programInfo.attribLocations.textureCoordPosition,\n                numComponents,\n                type,\n                normalize,\n                stride,\n                offset);\n            gl.enableVertexAttribArray(\n                programInfo.attribLocations.textureCoordPosition);\n        }\n\n        gl.useProgram(programInfo.program);\n        gl.uniformMatrix4fv(\n            programInfo.uniformLocations.projectionMatrix,\n            false,\n            ProjectionMatrix);\n        gl.uniformMatrix4fv(\n            programInfo.uniformLocations.ViewMatrix,\n            false,\n            ViewMatrix);\n        gl.uniformMatrix4fv(\n            programInfo.uniformLocations.ModelMatrix,\n            false,\n            ModelMatrix);\n\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D,Texture);\n\n        gl.uniform1i(programInfo.uniformLocations.uSampler, 0);\n\n        {\n            const vertexcount = buffer.NumVertices/3;\n            const offset = 0;\n            gl.drawArrays(gl.TRIANGLES, offset, vertexcount);\n        }\n    }\n\n}\nfunction DrawGenericCube(gl, programInfo, Objects, ProjectionMatrix, ViewMatrix, StackModelMatrix)\n{\n    let lastMatrix = StackModelMatrix.pop();\n    let currentModelMatrix = Objects.ModelMatrix;\n    let multipliedModelMatrices = mat4.create();\n    multipliedModelMatrices = mat4.multiply(multipliedModelMatrices, lastMatrix, currentModelMatrix);\n    StackModelMatrix.push(lastMatrix);\n    StackModelMatrix.push(multipliedModelMatrices);\n\n    DrawBasic(Objects.Buffer, multipliedModelMatrices, Objects.Texture);\n\n    const CountAdjObj = Objects.AdjObj.length;\n    for (let i = 0; i < CountAdjObj; i++)\n    {\n        DrawGenericCube(gl, programInfo, Objects.AdjObj[i], ProjectionMatrix, ViewMatrix, StackModelMatrix);\n    }\n    StackModelMatrix.pop();\n\n    return;\n\n    function DrawBasic(buffer, ModelMatrix, Texture)\n    {\n        {\n            const numComponents = 3;\n            const type = gl.FLOAT;\n            const normalize = false;\n            const stride = 0;\n            const offset = 0;\n            gl.bindBuffer(gl.ARRAY_BUFFER, buffer.VertexBuffer);\n            gl.vertexAttribPointer(\n                programInfo.attribLocations.vertexPosition,\n                numComponents,\n                type,\n                normalize,\n                stride,\n                offset);\n            gl.enableVertexAttribArray(\n                programInfo.attribLocations.vertexPosition);\n        }\n\n        {\n            const numComponents = 3;\n            const type = gl.FLOAT;\n            const normalize = false;\n            const stride = 0;\n            const offset = 0;\n            gl.bindBuffer(gl.ARRAY_BUFFER, buffer.NormalBuffer);\n            gl.vertexAttribPointer(\n                programInfo.attribLocations.normalPosition,\n                numComponents,\n                type,\n                normalize,\n                stride,\n                offset);\n            gl.enableVertexAttribArray(\n                programInfo.attribLocations.normalPosition);\n        }\n\n        {\n            const numComponents = 2;\n            const type = gl.FLOAT;\n            const normalize = false;\n            const stride = 0;\n            const offset = 0;\n            gl.bindBuffer(gl.ARRAY_BUFFER, buffer.TextureBuffer);\n            gl.vertexAttribPointer(\n                programInfo.attribLocations.textureCoordPosition,\n                numComponents,\n                type,\n                normalize,\n                stride,\n                offset);\n            gl.enableVertexAttribArray(\n                programInfo.attribLocations.textureCoordPosition);\n        }\n\n        gl.useProgram(programInfo.program);\n        gl.uniformMatrix4fv(\n            programInfo.uniformLocations.projectionMatrix,\n            false,\n            ProjectionMatrix);\n        gl.uniformMatrix4fv(\n            programInfo.uniformLocations.ViewMatrix,\n            false,\n            ViewMatrix);\n        gl.uniformMatrix4fv(\n            programInfo.uniformLocations.ModelMatrix,\n            false,\n            ModelMatrix);\n\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_CUBE_MAP,Texture);\n\n        gl.uniform1i(programInfo.uniformLocations.uSampler, 0);\n\n        {\n            const vertexcount = buffer.NumVertices/3;\n            const offset = 0;\n            gl.drawArrays(gl.TRIANGLES, offset, vertexcount);\n        }\n    }\n\n}\n\n\nexport {Draw};","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","/***\n * 这是一个泛型物体类\n * 通过下面这个类，我们可以构建模型树\n * 一个物体需要包含以下属性\n * * Buffers:       包含VertexBuffer, TextureBuffer, NormalVectorBuffer以及numVertices的对象\n * * ModelMatrix:   自身的Model Matrix（相对于上一级物体的ModelMatrix）\n * * LightPos:      点光源的位置（改造成全局光源的话还有待修改）\n * * AdjObj:        一个包含了该物体所相连或相关的子物体的数组（例如四肢至于机器人主体）\n * * Luminous:      是否自发光，boolean类型\n * * Texture:       对于具有纹理的物体，保存纹理对象。如果没有则该字段为`null`\n */\nimport {mat4} from './gl-matrix.js';\nimport {vec3} from './gl-matrix.js';\n\nclass GenericObject{\n    constructor (Buffer, AdjObj, TextureBuffer)\n    {\n        this.Buffer = Buffer;\n        this.MotionParameters = new MotionParameters();\n        this.ModelMatrix = mat4.create();\n        this.AdjObj = AdjObj;       // Adjacent Objects (Array)\n        this.Texture = TextureBuffer;\n    }\n}\n\nclass MotionParameters {\n    constructor()\n    {\n        this.xP = 0; this.yP = 0; this.zP = 0;\n        this.Speed = 0;\n        this.Size = [1, 1, 1];\n        this.Pivot = [0, 0, 0];         // 旋转轴\n        this.MaxSpeed = 1;\n    }\n}\n\n// Project Specific Object Creation.\n// Objects should be created from branch to stem\nfunction ObjectTrees(buffersCollection, texturesCollection){\n    // 在这里可以建设多个太阳系\n    // 每个太阳系有独特的建系方程\n\n    // let ObjectsSystems = CreateObjectsSystem(buffersCollection, texturesCollection);                // 太阳系1（机器人1）\n    let EnvSystem = new GenericObject (buffersCollection.envModelbuffer,[],texturesCollection.envTextureBuffer); // 场景\n    mat4.scale(EnvSystem.ModelMatrix, EnvSystem.ModelMatrix, vec3.fromValues(3,3,3));\n\n    // Robot Main\n    let rotatingPart = new GenericObject(buffersCollection.rotatingItemBuffer, [], texturesCollection.RotatingItem);\n    let upCannons = new GenericObject(buffersCollection.upCannonsBuffer, [], texturesCollection.UpCannons);\n    let loCannons = new GenericObject(buffersCollection.loCannonsBuffer, [], texturesCollection.LoCannons);\n    let reside =    new GenericObject(buffersCollection.resideBuffer, [rotatingPart], texturesCollection.Reside);\n    let Robot = new GenericObject(buffersCollection.trackBuffer, [reside, upCannons, loCannons], texturesCollection.Track);\n    // console.log(EnvSystem)\n    let SkyBox = new GenericObject(buffersCollection.skyBoxBuffer, [], texturesCollection.SkyBox);\n    mat4.scale(SkyBox.ModelMatrix, SkyBox.ModelMatrix, vec3.fromValues(50,50,50));\n\n    return {\n        // ObjectsSystems:ObjectsSystems,\n        EnvSystem:  EnvSystem,\n        Robot:      Robot,\n        SkyBox:     SkyBox\n    };\n}\n\nexport {ObjectTrees};","// the main function\n\nimport fs from 'fs'\nimport {getModelBufferCollection,GetTextureCollection} from './ModelsManager.js';\nimport {Draw} from './DrawGenericObjects.js'\nimport {ObjectTrees} from './ObjectTrees';\n\nconst vsSource = fs.readFileSync('./vsSource.glsl', 'utf8');\n\nconst fsSource = fs.readFileSync('./fsSource.glsl', 'utf8');\n\nconst env = JSON.parse(fs.readFileSync('./ModelObjects/env.json', 'utf8'))  // !! 必须通过主文件来读取文本，所以，我只能把读好的env对象传进来\nconst loCannons = JSON.parse(fs.readFileSync('./ModelObjects/LowerCannons.json', 'utf8'));\nconst upCannons =JSON.parse(fs.readFileSync ('./ModelObjects/UpperCannons.json', 'utf8'));\nconst reside = JSON.parse(fs.readFileSync('./ModelObjects/reside.json', 'utf8'));\nconst track = JSON.parse(fs.readFileSync('./ModelObjects/Track.json', 'utf8'));\nconst rotatingItem =JSON.parse(fs.readFileSync( './ModelObjects/RotatingItem.json', 'utf8'));\nconst skyBox =JSON.parse(fs.readFileSync( './ModelObjects/SkyBox.json', 'utf8'));\n\n//这里不用理解，就是直接在js 里 执行 main（）而已，不能像原来那样在index.html onload来执行 ，注意。\nsetTimeout(()=>{\n    console.log(\"AirStrike Alert!\");\n    main();\n}, 100);\n\nfunction main() {\n    /******************************\n     * WebGL canvas acquisition\n     ******************************/\n    const canvas = document.querySelector('#glcanvas');\n    const gl = canvas.getContext('webgl');\n    if (!gl) {\n        alert('Unable to initialize WebGL. Your browser or machine may not support it.');\n        return;\n    }\n    const shaderProgram = initShaderProgram(gl, vsSource, fsSource);\n    /* Program Info is a structure where the information of the shader program\n     * as well as locations of its attributes and uniforms */\n    // ProgramInfo for objects that emits light (no reflection)\n\n    let ProgramInfo = GenerateProgramInfo(gl, shaderProgram);\n    let ModelBufferCollection = getModelBufferCollection(gl);\n    let TextureCollection = GetTextureCollection(gl);\n\n    let Objects = ObjectTrees(ModelBufferCollection, TextureCollection);\n\n    // console.log(ModelBufferCollection);\n\n    let then = 0;\n    function render(now) {\n        now *= 0.001;  // convert to seconds\n        const deltaTime = now - then;\n        then = now;\n        // console.log(lookAtX);\n        // doMotion(Objects, deltaTime);\n\n        gl.clearColor(1.0, 1.0, 1.0, 1.0);\n        gl.clearDepth(1.0);\n        gl.enable(gl.DEPTH_TEST);\n        gl.depthFunc(gl.LEQUAL);\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n        Draw(gl, ProgramInfo, Objects);\n\n        requestAnimationFrame(render);\n    }\n    requestAnimationFrame(render);\n}\n\n/******************************\n * Shader Program Initializer\n ******************************/\nfunction initShaderProgram(gl, vsSource, fsSource_sun) {\n    const vertexShader = loadShader(gl, gl.VERTEX_SHADER, vsSource);\n    const fragmentShader = loadShader(gl, gl.FRAGMENT_SHADER, fsSource_sun);\n\n    // Create the shader program\n\n    const shaderProgram = gl.createProgram();\n    gl.attachShader(shaderProgram, vertexShader);\n    gl.attachShader(shaderProgram, fragmentShader);\n    gl.linkProgram(shaderProgram);\n\n    // If creating the shader program failed, alert\n\n    if (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS)) {\n        alert('Unable to initialize the shader program: ' + gl.getProgramInfoLog(shaderProgram));\n        return null;\n    }\n\n    return shaderProgram;\n\n    function loadShader(gl, type, source) {\n        const shader = gl.createShader(type);\n        gl.shaderSource(shader, source);\n        gl.compileShader(shader);\n        if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n            alert('An error occurred compiling the shaders: ' + gl.getShaderInfoLog(shader));\n            gl.deleteShader(shader);\n            return null;\n        }\n        return shader;\n    }\n}\n\nfunction GenerateProgramInfo(gl, webGLPrograms) {\n    const programInfo = {\n        program: webGLPrograms,\n        attribLocations: {\n            vertexPosition: gl.getAttribLocation(webGLPrograms, 'aVertexPosition'),\n            normalPosition: gl.getAttribLocation(webGLPrograms, 'aNormal'),\n            textureCoordPosition: gl.getAttribLocation(webGLPrograms, 'aTextureCoord')\n        },\n        uniformLocations: {\n            projectionMatrix: gl.getUniformLocation(webGLPrograms, 'uProjectionMatrix'),\n            ViewMatrix: gl.getUniformLocation(webGLPrograms, 'uViewMatrix'),\n            ModelMatrix: gl.getUniformLocation(webGLPrograms, 'uModelMatrix'),\n            Sampler: gl.getUniformLocation(webGLPrograms, 'uSampler')\n        },\n    };\n\n    return programInfo;\n}\nexport{env,loCannons,upCannons,reside,track,rotatingItem,skyBox}\n\n"]}